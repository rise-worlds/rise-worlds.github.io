<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Lua on Rise的自留地</title><link>https://blogs.qipai360.cn/categories/lua/</link><description>Recent content in Lua on Rise的自留地</description><generator>Hugo</generator><language>zh-CN</language><lastBuildDate>Sat, 10 May 2025 14:37:27 +0800</lastBuildDate><atom:link href="https://blogs.qipai360.cn/categories/lua/rss.xml" rel="self" type="application/rss+xml"/><item><title>xlua</title><link>https://blogs.qipai360.cn/post/xlua/</link><pubDate>Sat, 10 May 2025 14:37:27 +0800</pubDate><guid>https://blogs.qipai360.cn/post/xlua/</guid><description>&lt;h2 id="lua解析器"&gt;Lua解析器
&lt;a class="header-anchor" href="#lua%e8%a7%a3%e6%9e%90%e5%99%a8"&gt;&lt;/a&gt;
&lt;/h2&gt;&lt;p&gt;Lua解析器能够让我们在Unity中执行Lua&lt;/p&gt;
&lt;p&gt;默认的Lua脚本放在&lt;code&gt;Resources&lt;/code&gt;文件夹下，并且要加上&lt;code&gt;.txt&lt;/code&gt;后缀 才能被执行&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt" id="hl-0-1"&gt;&lt;a class="lnlinks" href="#hl-0-1"&gt;1&lt;/a&gt;
&lt;/span&gt;&lt;span class="lnt" id="hl-0-2"&gt;&lt;a class="lnlinks" href="#hl-0-2"&gt;2&lt;/a&gt;
&lt;/span&gt;&lt;span class="lnt" id="hl-0-3"&gt;&lt;a class="lnlinks" href="#hl-0-3"&gt;3&lt;/a&gt;
&lt;/span&gt;&lt;span class="lnt" id="hl-0-4"&gt;&lt;a class="lnlinks" href="#hl-0-4"&gt;4&lt;/a&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-c#" data-lang="c#"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;LuaEnv&lt;/span&gt; &lt;span class="n"&gt;env&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;LuaEnv&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DoString&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#34;print(&amp;#39;你好世界&amp;#39;)&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;//执行一个lua脚本&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DoString&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#34;require(&amp;#39;Main&amp;#39;)&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;垃圾回收&lt;/strong&gt;&lt;/p&gt;</description></item><item><title>让UltraEdit 支持Lua的语法高亮显示</title><link>https://blogs.qipai360.cn/post/ultraedit-lua-syntax-highlighting/</link><pubDate>Fri, 26 Oct 2007 10:10:00 +0800</pubDate><guid>https://blogs.qipai360.cn/post/ultraedit-lua-syntax-highlighting/</guid><description>&lt;p&gt;其实很简单，但如像我一样不怎么用UltraEdit的朋友们来说，可能不太清楚。首先去UltraEdit的官网下载支持Lua的Wordfiles文件(&lt;a href="http://www.ultraedit.com/files/wf/lua.txt"&gt;这里&lt;/a&gt;),是个文本文件(lua.txt)。打开UltraEdit安装目录下的wordfile.txt，把lua.txt文件中的内容拷贝粘贴到wordfile.txt的末尾，存盘，OK&lt;img alt="" src="http://www.cppblog.com/CuteSoft_Client/CuteEditor/images/face6.gif" align="absMiddle" border="0" /&gt;，于是UltraEdit语法高亮项多出Lua一项，可以选择使用了。其他语言的语法高亮支持与此类似。 &lt;br /&gt;&lt;/p&gt;</description></item><item><title>Lua中实现类似C#的事件机制</title><link>https://blogs.qipai360.cn/post/lua-implementing-c-like-features/</link><pubDate>Thu, 11 Oct 2007 15:15:00 +0800</pubDate><guid>https://blogs.qipai360.cn/post/lua-implementing-c-like-features/</guid><description>&lt;p&gt;Lua的语法非常灵活, 使用他的metatable及metamethod可以模拟出很多语言的特性.
&lt;p&gt;C#中我们这样使用事件:
&lt;pre&gt;xxx.Click += new System.EventHandler(xxx_Click);

private void xxx_Click(object sender, EventArgs e)

{

/**/

}

&lt;/pre&gt;
&lt;p&gt;在Lua中要达到同样的效果, 并且支持事件多播机制, 其关键在于重写metamethod &lt;tt&gt;__call&lt;/tt&gt;, 从而使得不光function才能被调用, table也能够被调用.
&lt;p&gt;主要思想就是, 通过一个table来保存注册事件的若干响应函数, 然后拿table当function一样来调用, 重写&lt;tt&gt;__call&lt;/tt&gt;后, 实现调用table时遍历执行table中的注册方法.
&lt;p&gt;需要在lua5.0 或 lua.net上执行, lua 5.1略有改动.
&lt;p style="font-size: 10pt; margin: 0in; font-family: courier"&gt;&lt;span style="color: gray"&gt;1 &lt;/span&gt;&lt;span style="color: green"&gt;--test.lua&lt;/span&gt;&lt;span style="color: black"&gt;&lt;br /&gt;
&lt;p&gt;&lt;/span&gt;&lt;span style="color: gray"&gt;&lt;span style="mso-spacerun: yes"&gt;   &lt;/span&gt;2 &lt;/span&gt;&lt;span style="color: #a00000"&gt;do&lt;/span&gt;&lt;span style="color: black"&gt;&lt;br /&gt;&lt;/p&gt;</description></item><item><title>Lua脚本语法说明（修订）</title><link>https://blogs.qipai360.cn/post/lua-script-syntax-explanation-revised/</link><pubDate>Fri, 21 Sep 2007 15:40:00 +0800</pubDate><guid>https://blogs.qipai360.cn/post/lua-script-syntax-explanation-revised/</guid><description>&lt;DIV class=postText&gt;Lua脚本语法说明（增加lua5.1部份特性）&lt;BR&gt;&lt;BR&gt;　　Lua 的语法比较简单，学习起来也比较省力，但功能却并不弱。&lt;BR&gt;　　所以，我只简单的归纳一下Lua的一些语法规则，使用起来方便好查就可以了。估计看完了，就懂得怎么写Lua程序了。&lt;BR&gt;&lt;BR&gt;　　在Lua中，一切都是变量，除了关键字。&lt;BR&gt;&lt;BR&gt;I.&amp;nbsp; 首先是注释&lt;BR&gt;　　写一个程序，总是少不了注释的。&lt;BR&gt;　　在Lua中，你可以使用单行注释和多行注释。&lt;BR&gt;　　单行注释中，连续两个减号"--"表示注释的开始，一直延续到行末为止。相当于C++语言中的"//"。&lt;BR&gt;　　多行注释中，由"--[["表示注释开始，并且一直延续到"]]"为止。这种注释相当于C语言中的"/*...*/"。在注释当中，"[["和"]]"是可以嵌套的（&lt;SPAN style="COLOR: red"&gt;在lua5.1中，中括号中间是可以加若干个"="号的，如 [==[ ... ]==]&lt;/SPAN&gt;），见下面的字符串表示说明。&lt;BR&gt;&lt;BR&gt;II.&amp;nbsp; Lua编程&lt;BR&gt;　　经典的"Hello world"的程序总是被用来开始介绍一种语言。在Lua中，写一个这样的程序很简单：&lt;BR&gt;　　print("Hello world")&lt;BR&gt;　　在Lua中，语句之间可以用分号"；"隔开，也可以用空白隔开。一般来说，如果多个语句写在同一行的话，建议总是用分号隔开。&lt;BR&gt;　　Lua 有好几种程序控制语句，如：&lt;BR&gt;
&lt;TABLE style="WIDTH: 760px; BORDER-COLLAPSE: collapse; HEIGHT: 124px" cellSpacing=0 cellPadding=3 border=1&gt;
&lt;TBODY&gt;
&lt;TR&gt;
&lt;TD style="COLOR: red"&gt;控制语句&lt;/TD&gt;
&lt;TD style="COLOR: red"&gt;格式&lt;/TD&gt;
&lt;TD style="COLOR: red"&gt;示例&lt;/TD&gt;&lt;/TR&gt;
&lt;TR&gt;
&lt;TD style="WIDTH: 80px"&gt;If&lt;/TD&gt;
&lt;TD style="WIDTH: 313px; HEIGHT: 44px"&gt;if 条件 then ... elseif 条件 then ... else ... end&lt;/TD&gt;
&lt;TD&gt;
&lt;DIV style="BORDER-RIGHT: #cccccc 1px solid; PADDING-RIGHT: 5px; BORDER-TOP: #cccccc 1px solid; PADDING-LEFT: 4px; FONT-SIZE: 13px; PADDING-BOTTOM: 4px; BORDER-LEFT: #cccccc 1px solid; WIDTH: 98%; PADDING-TOP: 4px; BORDER-BOTTOM: #cccccc 1px solid; BACKGROUND-COLOR: #eeeeee"&gt;&lt;!--&lt;br&gt;&lt;br&gt;Code highlighting produced by Actipro CodeHighlighter (freeware)&lt;br&gt;http://www.CodeHighlighter.com/&lt;br&gt;&lt;br&gt;--&gt;&lt;SPAN style="COLOR: #0000ff"&gt;if&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;1&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;+&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;1&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;=&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;2&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN style="COLOR: #0000ff"&gt;then&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;&amp;nbsp;print(&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;"&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;true&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;"&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;)&lt;BR&gt;&lt;/SPAN&gt;&lt;SPAN style="COLOR: #0000ff"&gt;elseif&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;1&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;+&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;2&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;~&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;=&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;3&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN style="COLOR: #0000ff"&gt;then&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;&amp;nbsp;print(&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;"&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;true&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;"&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;)&lt;BR&gt;&lt;/SPAN&gt;&lt;SPAN style="COLOR: #0000ff"&gt;else&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;&amp;nbsp;print(&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;"&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;false&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;"&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;)&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN style="COLOR: #0000ff"&gt;end&lt;/SPAN&gt;&lt;/DIV&gt;&lt;BR&gt;&lt;/TD&gt;&lt;/TR&gt;
&lt;TR&gt;
&lt;TD&gt;While&lt;/TD&gt;
&lt;TD&gt;while 条件 do ... end&lt;/TD&gt;
&lt;TD&gt;
&lt;DIV style="BORDER-RIGHT: #cccccc 1px solid; PADDING-RIGHT: 5px; BORDER-TOP: #cccccc 1px solid; PADDING-LEFT: 4px; FONT-SIZE: 13px; PADDING-BOTTOM: 4px; BORDER-LEFT: #cccccc 1px solid; WIDTH: 98%; PADDING-TOP: 4px; BORDER-BOTTOM: #cccccc 1px solid; BACKGROUND-COLOR: #eeeeee"&gt;&lt;!--&lt;br&gt;&lt;br&gt;Code highlighting produced by Actipro CodeHighlighter (freeware)&lt;br&gt;http://www.CodeHighlighter.com/&lt;br&gt;&lt;br&gt;--&gt;&lt;SPAN style="COLOR: #0000ff"&gt;while&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;1&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;+&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;1&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;~&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;=&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;2&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN style="COLOR: #0000ff"&gt;do&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;&amp;nbsp;print(&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;"&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;true&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;"&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;)&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN style="COLOR: #0000ff"&gt;end&lt;/SPAN&gt;&lt;/DIV&gt;&lt;BR&gt;&lt;/TD&gt;&lt;/TR&gt;
&lt;TR&gt;
&lt;TD&gt;Repeat&lt;/TD&gt;
&lt;TD&gt;repeat ... until 条件&lt;/TD&gt;
&lt;TD&gt;
&lt;DIV style="BORDER-RIGHT: #cccccc 1px solid; PADDING-RIGHT: 5px; BORDER-TOP: #cccccc 1px solid; PADDING-LEFT: 4px; FONT-SIZE: 13px; PADDING-BOTTOM: 4px; BORDER-LEFT: #cccccc 1px solid; WIDTH: 98%; PADDING-TOP: 4px; BORDER-BOTTOM: #cccccc 1px solid; BACKGROUND-COLOR: #eeeeee"&gt;&lt;!--&lt;br&gt;&lt;br&gt;Code highlighting produced by Actipro CodeHighlighter (freeware)&lt;br&gt;http://www.CodeHighlighter.com/&lt;br&gt;&lt;br&gt;--&gt;&lt;SPAN style="COLOR: #000000"&gt;&lt;SPAN style="COLOR: #2000ff"&gt;repeat&lt;/SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN style="COLOR: #0000ff"&gt;print&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;(&lt;/SPAN&gt;&lt;SPAN style="FONT-WEIGHT: bold; COLOR: #000000"&gt;"&lt;/SPAN&gt;&lt;SPAN style="FONT-WEIGHT: bold; COLOR: #000000"&gt;Hello&lt;/SPAN&gt;&lt;SPAN style="FONT-WEIGHT: bold; COLOR: #000000"&gt;"&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;)&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN style="COLOR: #0000ff"&gt;until&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN style="COLOR: #800000"&gt;1&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;+&lt;/SPAN&gt;&lt;SPAN style="COLOR: #800000"&gt;1&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;~=&lt;/SPAN&gt;&lt;SPAN style="COLOR: #800000"&gt;2&lt;/SPAN&gt;&lt;/DIV&gt;&lt;BR&gt;&lt;/TD&gt;&lt;/TR&gt;
&lt;TR&gt;
&lt;TD&gt;For&lt;/TD&gt;
&lt;TD&gt;for 变量=初值, 终点值, 步进 do&amp;nbsp;... end&lt;/TD&gt;
&lt;TD&gt;
&lt;DIV style="BORDER-RIGHT: #cccccc 1px solid; PADDING-RIGHT: 5px; BORDER-TOP: #cccccc 1px solid; PADDING-LEFT: 4px; FONT-SIZE: 13px; PADDING-BOTTOM: 4px; BORDER-LEFT: #cccccc 1px solid; WIDTH: 98%; PADDING-TOP: 4px; BORDER-BOTTOM: #cccccc 1px solid; BACKGROUND-COLOR: #eeeeee"&gt;&lt;!--&lt;br&gt;&lt;br&gt;Code highlighting produced by Actipro CodeHighlighter (freeware)&lt;br&gt;http://www.CodeHighlighter.com/&lt;br&gt;&lt;br&gt;--&gt;&lt;SPAN style="COLOR: #0000ff"&gt;for&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;&amp;nbsp;i&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;=&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;1&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;,&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;10&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;,&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;2&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN style="COLOR: #0000ff"&gt;do&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;&amp;nbsp;print(i)&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN style="COLOR: #0000ff"&gt;end&lt;/SPAN&gt;&lt;/DIV&gt;&lt;BR&gt;&lt;/TD&gt;&lt;/TR&gt;
&lt;TR&gt;
&lt;TD&gt;For&lt;/TD&gt;
&lt;TD&gt;for 变量1, 变量2, ... 变量n in 表或枚举函数 do ... end&lt;/TD&gt;
&lt;TD&gt;
&lt;DIV style="BORDER-RIGHT: #cccccc 1px solid; PADDING-RIGHT: 5px; BORDER-TOP: #cccccc 1px solid; PADDING-LEFT: 4px; FONT-SIZE: 13px; PADDING-BOTTOM: 4px; BORDER-LEFT: #cccccc 1px solid; WIDTH: 98%; PADDING-TOP: 4px; BORDER-BOTTOM: #cccccc 1px solid; BACKGROUND-COLOR: #eeeeee"&gt;&lt;!--&lt;br&gt;&lt;br&gt;Code highlighting produced by Actipro CodeHighlighter (freeware)&lt;br&gt;http://www.CodeHighlighter.com/&lt;br&gt;&lt;br&gt;--&gt;&lt;SPAN style="COLOR: #0000ff"&gt;for&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;&amp;nbsp;a,b&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN style="COLOR: #0000ff"&gt;in&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;&amp;nbsp;mylist&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN style="COLOR: #0000ff"&gt;do&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN style="COLOR: #0000ff"&gt;print&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;(a,&amp;nbsp;b)&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN style="COLOR: #0000ff"&gt;end&lt;/SPAN&gt;&lt;/DIV&gt;&lt;BR&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;BR&gt;　　注意一下，for的循环变量总是只作用于for的局部变量；当省略步进值时，for循环会使用1作为步进值。&lt;BR&gt;　　使用break可以用来中止一个循环。&lt;BR&gt;　　相对C语言来说，Lua有几个地方是明显不同的，所以面要特别注意一下：&lt;BR&gt;&lt;BR&gt;　　．&lt;STRONG&gt;语句块&lt;/STRONG&gt;&lt;BR&gt;　　　　语句块在C中是用"{"和"}"括起来的，在Lua中，它是用do 和 end 括起来的。比如：&lt;BR&gt;　　　　do print("Hello") end&lt;BR&gt;　　　　可以在 &lt;STRONG&gt;函数&lt;/STRONG&gt; 中和 &lt;STRONG&gt;语句块&lt;/STRONG&gt; 中定局部变量。&lt;BR&gt;&lt;BR&gt;　　．&lt;STRONG&gt;赋值语句&lt;/STRONG&gt;&lt;BR&gt;　　　　赋值语句在Lua被强化了。它可以同时给多个变量赋值。&lt;BR&gt;　　　　例如：&lt;BR&gt;　　　　a,b,c,d=1,2,3,4&lt;BR&gt;　　　　甚至是：&lt;BR&gt;　　　　a,b=b,a&amp;nbsp; -- 多么方便的交换变量功能啊。&lt;BR&gt;　　　　在默认情况下，变量总是认为是全局的。假如需要定义局部变量，则在第一次赋值的时候，需要用local说明。比如：&lt;BR&gt;　　　　local a,b,c = 1,2,3&amp;nbsp; -- a,b,c都是局部变量&lt;BR&gt;&lt;BR&gt;　　．&lt;STRONG&gt;数值运算&lt;/STRONG&gt;&lt;BR&gt;　　　　和C语言一样，支持 +, -, *, /。但Lua还多了一个"^"。这表示指数乘方运算。比如2^3 结果为8, 2^4结果为16。&lt;BR&gt;　　　　连接两个字符串，可以用".."运处符。如：&lt;BR&gt;　　　　"This a " .. "string." -- 等于 "this a string"&lt;BR&gt;&lt;BR&gt;　　．&lt;STRONG&gt;比较运算&lt;BR&gt;&lt;/STRONG&gt;
&lt;TABLE style="WIDTH: 543px; BORDER-COLLAPSE: collapse; HEIGHT: 70px" cellSpacing=0 cellPadding=3 border=1&gt;
&lt;TBODY&gt;
&lt;TR&gt;
&lt;TD style="COLOR: red"&gt;比较符号&lt;/TD&gt;
&lt;TD&gt;&amp;lt;&lt;/TD&gt;
&lt;TD&gt;&amp;gt;&lt;/TD&gt;
&lt;TD&gt;&amp;lt;=&lt;/TD&gt;
&lt;TD&gt;&amp;gt;=&lt;/TD&gt;
&lt;TD&gt;==&lt;/TD&gt;
&lt;TD&gt;~=&lt;/TD&gt;&lt;/TR&gt;
&lt;TR&gt;
&lt;TD style="COLOR: red"&gt;含义&lt;/TD&gt;
&lt;TD&gt;小于&lt;/TD&gt;
&lt;TD&gt;大于&lt;/TD&gt;
&lt;TD&gt;小于或等于&lt;/TD&gt;
&lt;TD&gt;大于或等于&lt;/TD&gt;
&lt;TD&gt;相等&lt;/TD&gt;
&lt;TD&gt;不相等&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;BR&gt;　　　　所有这些操作符总是返回true或false。&lt;BR&gt;　　　　对于Table，Function和Userdata类型的数据，只有 == 和 ~=可以用。相等表示两个变量引用的是同一个数据。比如：&lt;BR&gt;
&lt;DIV style="BORDER-RIGHT: #cccccc 1px solid; PADDING-RIGHT: 5px; BORDER-TOP: #cccccc 1px solid; PADDING-LEFT: 4px; FONT-SIZE: 13px; PADDING-BOTTOM: 4px; BORDER-LEFT: #cccccc 1px solid; WIDTH: 98%; PADDING-TOP: 4px; BORDER-BOTTOM: #cccccc 1px solid; BACKGROUND-COLOR: #eeeeee"&gt;&lt;IMG src="https://blogs.qipai360.cn/Images/OutliningIndicators/None.gif" align=top&gt;&lt;SPAN style="COLOR: #000000"&gt;　　　　a&lt;/SPAN&gt;&lt;SPAN style="COLOR: #808080"&gt;=&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;{&lt;/SPAN&gt;&lt;SPAN style="FONT-WEIGHT: bold; COLOR: #800000"&gt;1&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;,&lt;/SPAN&gt;&lt;SPAN style="FONT-WEIGHT: bold; COLOR: #800000"&gt;2&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;}&lt;BR&gt;&lt;IMG src="https://blogs.qipai360.cn/Images/OutliningIndicators/None.gif" align=top&gt;　　　　b&lt;/SPAN&gt;&lt;SPAN style="COLOR: #808080"&gt;=&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;a&lt;BR&gt;&lt;IMG src="https://blogs.qipai360.cn/Images/OutliningIndicators/None.gif" align=top&gt;　　　　&lt;/SPAN&gt;&lt;SPAN style="COLOR: #0000ff"&gt;print&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;(a&lt;/SPAN&gt;&lt;SPAN style="COLOR: #808080"&gt;==&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;b,&amp;nbsp;a&lt;/SPAN&gt;&lt;SPAN style="COLOR: #808080"&gt;~=&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;b)&amp;nbsp;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN style="COLOR: #008080"&gt;--&lt;/SPAN&gt;&lt;SPAN style="COLOR: #008080"&gt;输出&amp;nbsp;true,&amp;nbsp;false&lt;/SPAN&gt;&lt;SPAN style="COLOR: #008080"&gt;&lt;BR&gt;&lt;IMG src="https://blogs.qipai360.cn/Images/OutliningIndicators/None.gif" align=top&gt;&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;　　　　a&lt;/SPAN&gt;&lt;SPAN style="COLOR: #808080"&gt;=&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;{&lt;/SPAN&gt;&lt;SPAN style="FONT-WEIGHT: bold; COLOR: #800000"&gt;1&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;,&lt;/SPAN&gt;&lt;SPAN style="FONT-WEIGHT: bold; COLOR: #800000"&gt;2&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;}&lt;BR&gt;&lt;IMG src="https://blogs.qipai360.cn/Images/OutliningIndicators/None.gif" align=top&gt;　　　　b&lt;/SPAN&gt;&lt;SPAN style="COLOR: #808080"&gt;=&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;{&lt;/SPAN&gt;&lt;SPAN style="FONT-WEIGHT: bold; COLOR: #800000"&gt;1&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;,&lt;/SPAN&gt;&lt;SPAN style="FONT-WEIGHT: bold; COLOR: #800000"&gt;2&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;}&lt;BR&gt;&lt;IMG src="https://blogs.qipai360.cn/Images/OutliningIndicators/None.gif" align=top&gt;　　　　&lt;/SPAN&gt;&lt;SPAN style="COLOR: #0000ff"&gt;print&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;(a&lt;/SPAN&gt;&lt;SPAN style="COLOR: #808080"&gt;==&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;b,&amp;nbsp;a&lt;/SPAN&gt;&lt;SPAN style="COLOR: #808080"&gt;~=&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;b)&amp;nbsp;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN style="COLOR: #008080"&gt;--&lt;/SPAN&gt;&lt;SPAN style="COLOR: #008080"&gt;输出&amp;nbsp;false,&amp;nbsp;true&lt;/SPAN&gt;&lt;SPAN style="COLOR: #008080"&gt;&lt;BR&gt;&lt;IMG src="https://blogs.qipai360.cn/Images/OutliningIndicators/None.gif" align=top&gt;&lt;/SPAN&gt;&lt;/DIV&gt;&lt;BR&gt;&lt;BR&gt;　　．逻辑运算&lt;BR&gt;　　　　and, or, not&lt;BR&gt;　　　　其中，and 和 or 与C语言区别特别大。&lt;BR&gt;　　　　在这里，请先记住，在Lua中，只有false和nil才计算为false，其它任何数据都计算为true，0也是true！&lt;BR&gt;　　　　and 和 or的运算结果不是true和false，而是和它的两个操作数相关。&lt;BR&gt;　　　　a and b：如果a为false，则返回a；否则返回b&lt;BR&gt;　　　　a or b：如果 a 为true，则返回a；否则返回b&lt;BR&gt;&lt;BR&gt;　　　　举几个例子：&lt;BR&gt;
&lt;DIV style="BORDER-RIGHT: #cccccc 1px solid; PADDING-RIGHT: 5px; BORDER-TOP: #cccccc 1px solid; PADDING-LEFT: 4px; FONT-SIZE: 13px; PADDING-BOTTOM: 4px; BORDER-LEFT: #cccccc 1px solid; WIDTH: 98%; PADDING-TOP: 4px; BORDER-BOTTOM: #cccccc 1px solid; BACKGROUND-COLOR: #eeeeee"&gt;&lt;IMG src="https://blogs.qipai360.cn/Images/OutliningIndicators/None.gif" align=top&gt;&lt;SPAN style="COLOR: #000000"&gt;　　　　&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN style="COLOR: #0000ff"&gt;print&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;(&lt;/SPAN&gt;&lt;SPAN style="FONT-WEIGHT: bold; COLOR: #800000"&gt;4&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN style="COLOR: #808080"&gt;and&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN style="FONT-WEIGHT: bold; COLOR: #800000"&gt;5&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;)&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN style="COLOR: #008080"&gt;--&lt;/SPAN&gt;&lt;SPAN style="COLOR: #008080"&gt;输出&amp;nbsp;5&lt;/SPAN&gt;&lt;SPAN style="COLOR: #008080"&gt;&lt;BR&gt;&lt;IMG src="https://blogs.qipai360.cn/Images/OutliningIndicators/None.gif" align=top&gt;&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;　　　　&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN style="COLOR: #0000ff"&gt;print&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;(nil&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN style="COLOR: #808080"&gt;and&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN style="FONT-WEIGHT: bold; COLOR: #800000"&gt;13&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;)&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN style="COLOR: #008080"&gt;--&lt;/SPAN&gt;&lt;SPAN style="COLOR: #008080"&gt;输出&amp;nbsp;nil&lt;/SPAN&gt;&lt;SPAN style="COLOR: #008080"&gt;&lt;BR&gt;&lt;IMG src="https://blogs.qipai360.cn/Images/OutliningIndicators/None.gif" align=top&gt;&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;　　　　&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN style="COLOR: #0000ff"&gt;print&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;(false&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN style="COLOR: #808080"&gt;and&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN style="FONT-WEIGHT: bold; COLOR: #800000"&gt;13&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;)&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN style="COLOR: #008080"&gt;--&lt;/SPAN&gt;&lt;SPAN style="COLOR: #008080"&gt;输出&amp;nbsp;false&lt;/SPAN&gt;&lt;SPAN style="COLOR: #008080"&gt;&lt;BR&gt;&lt;IMG src="https://blogs.qipai360.cn/Images/OutliningIndicators/None.gif" align=top&gt;&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;　　　　&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN style="COLOR: #0000ff"&gt;print&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;(&lt;/SPAN&gt;&lt;SPAN style="FONT-WEIGHT: bold; COLOR: #800000"&gt;4&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN style="COLOR: #808080"&gt;or&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN style="FONT-WEIGHT: bold; COLOR: #800000"&gt;5&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;)&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN style="COLOR: #008080"&gt;--&lt;/SPAN&gt;&lt;SPAN style="COLOR: #008080"&gt;输出&amp;nbsp;4&lt;/SPAN&gt;&lt;SPAN style="COLOR: #008080"&gt;&lt;BR&gt;&lt;IMG src="https://blogs.qipai360.cn/Images/OutliningIndicators/None.gif" align=top&gt;&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;　　　　&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN style="COLOR: #0000ff"&gt;print&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;(false&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN style="COLOR: #808080"&gt;or&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN style="FONT-WEIGHT: bold; COLOR: #800000"&gt;5&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;)&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN style="COLOR: #008080"&gt;--&lt;/SPAN&gt;&lt;SPAN style="COLOR: #008080"&gt;输出&amp;nbsp;5&lt;/SPAN&gt;&lt;SPAN style="COLOR: #008080"&gt;&lt;BR&gt;&lt;IMG src="https://blogs.qipai360.cn/Images/OutliningIndicators/None.gif" align=top&gt;&lt;/SPAN&gt;&lt;/DIV&gt;&lt;BR&gt;　　　　在Lua中这是很有用的特性，也是比较令人混洧的特性。&lt;BR&gt;　　　　我们可以模拟C语言中的语句：x = a? b : c，在Lua中，可以写成：x = a and b or c。&lt;BR&gt;　　　　最有用的语句是： x = x or v，它相当于：if not x then x = v end 。&lt;BR&gt;&lt;BR&gt;　　．运算符优先级，从低到高顺序如下：&lt;BR&gt;
&lt;TABLE style="WIDTH: 320px; BORDER-COLLAPSE: collapse" cellSpacing=0 cellPadding=3 border=1&gt;
&lt;TBODY&gt;
&lt;TR&gt;
&lt;TD&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; or&lt;BR&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; and&lt;BR&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;=&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;gt;=&amp;nbsp;&amp;nbsp;&amp;nbsp; ~=&amp;nbsp;&amp;nbsp;&amp;nbsp; ==&lt;BR&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; .. (字符串连接)&lt;BR&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; +&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; -&lt;BR&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; *&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; /&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; %&lt;BR&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; not&amp;nbsp;&amp;nbsp; #(&lt;SPAN style="COLOR: red"&gt;lua5.1 取长度运算&lt;/SPAN&gt;)&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; - (一元运算)&lt;BR&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; ^&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;和C语言一样，括号可以改变优先级。&lt;BR&gt;&lt;BR&gt;III.&amp;nbsp; 关键字&lt;BR&gt;　　关键字是不能做为变量的。Lua的关键字不多，就以下几个：&lt;BR&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 
&lt;TABLE style="WIDTH: 426px; BORDER-COLLAPSE: collapse; HEIGHT: 105px" cellSpacing=0 cellPadding=3 border=1&gt;
&lt;TBODY&gt;
&lt;TR&gt;
&lt;TD&gt;and&lt;/TD&gt;
&lt;TD&gt;break&lt;/TD&gt;
&lt;TD&gt;do&lt;/TD&gt;
&lt;TD&gt;else&lt;/TD&gt;
&lt;TD&gt;elseif&lt;/TD&gt;
&lt;TD&gt;&lt;/TD&gt;&lt;/TR&gt;
&lt;TR&gt;
&lt;TD&gt;end&lt;/TD&gt;
&lt;TD&gt;false&lt;/TD&gt;
&lt;TD&gt;for&lt;/TD&gt;
&lt;TD&gt;function&lt;/TD&gt;
&lt;TD&gt;if&lt;/TD&gt;
&lt;TD&gt;&lt;/TD&gt;&lt;/TR&gt;
&lt;TR&gt;
&lt;TD&gt;in&lt;/TD&gt;
&lt;TD&gt;local&lt;/TD&gt;
&lt;TD&gt;nil&lt;/TD&gt;
&lt;TD&gt;not&lt;/TD&gt;
&lt;TD&gt;or&lt;/TD&gt;
&lt;TD&gt;&lt;/TD&gt;&lt;/TR&gt;
&lt;TR&gt;
&lt;TD&gt;repeat&lt;/TD&gt;
&lt;TD&gt;return&lt;/TD&gt;
&lt;TD&gt;then&lt;/TD&gt;
&lt;TD&gt;true&lt;/TD&gt;
&lt;TD&gt;until&lt;/TD&gt;
&lt;TD&gt;while&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;BR&gt;IV.&amp;nbsp; 变量类型&lt;BR&gt;　　怎么确定一个变量是什么类型的呢？大家可以用type()函数来检查。Lua支持的类型有以下几种：&lt;BR&gt;
&lt;TABLE style="WIDTH: 758px; BORDER-COLLAPSE: collapse; HEIGHT: 143px" cellSpacing=0 cellPadding=3 border=1&gt;
&lt;TBODY&gt;
&lt;TR&gt;
&lt;TD style="WIDTH: 74px"&gt;Nil&lt;/TD&gt;
&lt;TD&gt;空值，所有没有使用过的变量，都是nil。nil既是值，又是类型。&lt;/TD&gt;&lt;/TR&gt;
&lt;TR&gt;
&lt;TD&gt;Boolean&lt;/TD&gt;
&lt;TD&gt;布尔值，只有两个有效值：true和false&lt;/TD&gt;&lt;/TR&gt;
&lt;TR&gt;
&lt;TD&gt;Number&lt;/TD&gt;
&lt;TD&gt;数值，在Lua里，数值相当于C语言的double&lt;/TD&gt;&lt;/TR&gt;
&lt;TR&gt;
&lt;TD&gt;String&lt;/TD&gt;
&lt;TD&gt;字符串，如果你愿意的话，字符串是可以包含"\0"字符的（这和C语言总是以"\0"结尾是不一样的）&lt;/TD&gt;&lt;/TR&gt;
&lt;TR&gt;
&lt;TD&gt;Table&lt;/TD&gt;
&lt;TD&gt;关系表类型，这个类型功能比较强大，请参考后面的内容。&lt;/TD&gt;&lt;/TR&gt;
&lt;TR&gt;
&lt;TD&gt;Function&lt;/TD&gt;
&lt;TD&gt;函数类型，不要怀疑，函数也是一种类型，也就是说，所有的函数，它本身就是一个变量。&lt;/TD&gt;&lt;/TR&gt;
&lt;TR&gt;
&lt;TD&gt;Userdata&lt;/TD&gt;
&lt;TD&gt;嗯，这个类型专门用来和Lua的宿主打交道的。宿主通常是用C和C++来编写的，在这种情况下，Userdata可以是宿主的任意数据类型，常用的有Struct和指针。&lt;/TD&gt;&lt;/TR&gt;
&lt;TR&gt;
&lt;TD&gt;Thread&lt;/TD&gt;
&lt;TD&gt;&lt;SPAN style="TEXT-DECORATION: line-through"&gt;线程类型，在Lua中没有真正的线程。Lua中可以将一个函数分成几部份运行。&lt;/SPAN&gt;如果感兴趣的话，可以去看看Lua的文档。&lt;BR&gt;现在回过头来看看，倒觉得不是线程类型。反而象是用来做遍历的，象是Iterator函数。&lt;BR&gt;如：&lt;BR&gt;
&lt;DIV style="BORDER-RIGHT: #cccccc 1px solid; PADDING-RIGHT: 5px; BORDER-TOP: #cccccc 1px solid; PADDING-LEFT: 4px; FONT-SIZE: 13px; PADDING-BOTTOM: 4px; BORDER-LEFT: #cccccc 1px solid; WIDTH: 98%; PADDING-TOP: 4px; BORDER-BOTTOM: #cccccc 1px solid; BACKGROUND-COLOR: #eeeeee"&gt;&lt;!--&lt;br&gt;&lt;br&gt;Code highlighting produced by Actipro CodeHighlighter (freeware)&lt;br&gt;http://www.CodeHighlighter.com/&lt;br&gt;&lt;br&gt;--&gt;&lt;SPAN style="COLOR: #0000ff"&gt;function&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;&amp;nbsp;range(n)&lt;BR&gt;&amp;nbsp; &lt;SPAN style="COLOR: #2000ff"&gt;local&lt;/SPAN&gt; i&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;=&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;0&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;&lt;BR&gt;&amp;nbsp;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN style="COLOR: #0000ff"&gt;while&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;(i&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;&amp;lt;&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;&amp;nbsp;n)&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN style="COLOR: #0000ff"&gt;do&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;&lt;/SPAN&gt; &lt;BR&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; coroutine.yield( i )&lt;BR&gt;&lt;SPAN style="COLOR: #000000"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;i&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;=&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;&amp;nbsp;i&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;+&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;1&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;&lt;BR&gt;&amp;nbsp;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN style="COLOR: #0000ff"&gt;end&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;&lt;BR&gt;&lt;/SPAN&gt;&lt;SPAN style="COLOR: #0000ff"&gt;end&lt;/SPAN&gt;&lt;/DIV&gt;可惜的是要继续运行，需要coroutine.resume函数，有点鸡肋。请指教。&lt;BR&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;BR&gt;V.&amp;nbsp; 变量的定义&lt;BR&gt;　　所有的语言，都要用到变量。在Lua中，不管在什么地方使用变量，都不需要声明，并且所有的这些变量总是全局变量，除非我们在前面加上"local"。这一点要特别注意，因为我们可能想在函数里使用局部变量，却忘了用local来说明。&lt;BR&gt;　　至于变量名字，它是大小写相关的。也就是说，A和a是两个不同的变量。&lt;BR&gt;　　定义一个变量的方法就是赋值。"＝"操作就是用来赋值的&lt;BR&gt;　　我们一起来定义几种常用类型的变量吧。&lt;BR&gt;　　A.&amp;nbsp; Nil&lt;BR&gt;　　　　正如前面所说的，没有使用过的变量的值，都是Nil。有时候我们也需要将一个变量清除，这时候，我们可以直接给变量赋以nil值。如：&lt;BR&gt;
&lt;DIV style="BORDER-RIGHT: #cccccc 1px solid; PADDING-RIGHT: 5px; BORDER-TOP: #cccccc 1px solid; PADDING-LEFT: 4px; FONT-SIZE: 13px; PADDING-BOTTOM: 4px; BORDER-LEFT: #cccccc 1px solid; WIDTH: 98%; PADDING-TOP: 4px; BORDER-BOTTOM: #cccccc 1px solid; BACKGROUND-COLOR: #eeeeee"&gt;&lt;IMG src="https://blogs.qipai360.cn/Images/OutliningIndicators/None.gif" align=top&gt;&lt;SPAN style="COLOR: #000000"&gt;　　　　var1&lt;/SPAN&gt;&lt;SPAN style="COLOR: #808080"&gt;=&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;nil&amp;nbsp;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN style="COLOR: #008080"&gt;--&lt;/SPAN&gt;&lt;SPAN style="COLOR: #008080"&gt;&amp;nbsp;请注意&amp;nbsp;nil&amp;nbsp;一定要小写&lt;/SPAN&gt;&lt;/DIV&gt;&lt;BR&gt;　　B.&amp;nbsp; Boolean&lt;BR&gt;　　　　布尔值通常是用在进行条件判断的时候。布尔值有两种：true 和 false。在Lua中，只有false和nil才被计算为false，而所有任何其它类型的值，都是true。比如0，空串等等，都是true。不要被 C语言的习惯所误导，0在Lua中的的确确是true。你也可以直接给一个变量赋以Boolean类型的值，如：&lt;BR&gt;
&lt;DIV style="BORDER-RIGHT: #cccccc 1px solid; PADDING-RIGHT: 5px; BORDER-TOP: #cccccc 1px solid; PADDING-LEFT: 4px; FONT-SIZE: 13px; PADDING-BOTTOM: 4px; BORDER-LEFT: #cccccc 1px solid; WIDTH: 98%; PADDING-TOP: 4px; BORDER-BOTTOM: #cccccc 1px solid; BACKGROUND-COLOR: #eeeeee"&gt;&lt;IMG src="https://blogs.qipai360.cn/Images/OutliningIndicators/None.gif" align=top&gt;&lt;SPAN style="COLOR: #000000"&gt;　　　　theBoolean&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN style="COLOR: #808080"&gt;=&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;&amp;nbsp;true&lt;/SPAN&gt;&lt;/DIV&gt;&lt;BR&gt;　　C.&amp;nbsp; Number&lt;BR&gt;　　　　在Lua中，是没有整数类型的，也不需要。一般情况下，只要数值不是很大（比如不超过100,000,000,000,000），是不会产生舍入误差的。在WindowsXP能跑的当今主流PC上，实数的运算并不比整数慢。&lt;BR&gt;　　　　实数的表示方法，同C语言类似，如：&lt;BR&gt;　　　　4 0.4 4.57e-3 0.3e12 5e+20&lt;BR&gt;&lt;BR&gt;　　D.&amp;nbsp; String&lt;BR&gt;　　　　字符串，总是一种非常常用的高级类型。在Lua中，我们可以非常方便的定义很长很长的字符串。&lt;BR&gt;　　　　字符串在Lua中有几种方法来表示，最通用的方法，是用双引号或单引号来括起一个字符串的，如：&lt;BR&gt;　　　　"That's go!"&lt;BR&gt;　　　　或&lt;BR&gt;　　　　'Hello world!'&lt;BR&gt;&lt;BR&gt;　　　　和C语言相同的，它支持一些转义字符，列表如下：&lt;BR&gt;　　　　\a&amp;nbsp; bell&lt;BR&gt;　　　　\b&amp;nbsp; back space&lt;BR&gt;　　　　\f&amp;nbsp; form feed&lt;BR&gt;　　　　\n&amp;nbsp; newline&lt;BR&gt;　　　　\r&amp;nbsp; carriage return&lt;BR&gt;　　　　\t&amp;nbsp; horizontal tab&lt;BR&gt;　　　　\v&amp;nbsp; vertical tab&lt;BR&gt;　　　　\\&amp;nbsp; backslash&lt;BR&gt;　　　　\"&amp;nbsp; double quote&lt;BR&gt;　　　　\"&amp;nbsp; single quote&lt;BR&gt;　　　　\[&amp;nbsp; left square bracket&lt;BR&gt;　　　　\]&amp;nbsp; right square bracket&lt;BR&gt;&lt;BR&gt;　　　　由于这种字符串只能写在一行中，因此，不可避免的要用到转义字符。加入了转义字符的串，看起来实在是不敢恭维，比如：&lt;BR&gt;　　　　"one line\nnext line\n\"in quotes\", "in quotes""&lt;BR&gt;　　　　一大堆的"\"符号让人看起来很倒胃口。如果你与我有同感，那么，我们在Lua中，可以用另一种表示方法：用"[["和"]]"将多行的字符串括起来。（&lt;SPAN style="COLOR: red"&gt;lua5.1: 中括号中间可以加入若干个"="号，如 [==[ ... ]==]，详见下面示例&lt;/SPAN&gt;）&lt;BR&gt;　　　　示例：下面的语句所表示的是完全相同的字符串：&lt;BR&gt;
&lt;DIV style="BORDER-RIGHT: #cccccc 1px solid; PADDING-RIGHT: 5px; BORDER-TOP: #cccccc 1px solid; PADDING-LEFT: 4px; FONT-SIZE: 13px; PADDING-BOTTOM: 4px; BORDER-LEFT: #cccccc 1px solid; WIDTH: 98%; PADDING-TOP: 4px; BORDER-BOTTOM: #cccccc 1px solid; BACKGROUND-COLOR: #eeeeee"&gt;&lt;IMG src="https://blogs.qipai360.cn/Images/OutliningIndicators/None.gif" align=top&gt;&lt;SPAN style="COLOR: #000000"&gt;a&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN style="COLOR: #808080"&gt;=&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN style="COLOR: #ff0000"&gt;'&lt;/SPAN&gt;&lt;SPAN style="COLOR: #ff0000"&gt;alo\n123"&lt;/SPAN&gt;&lt;SPAN style="COLOR: #ff0000"&gt;'&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;&lt;BR&gt;&lt;IMG src="https://blogs.qipai360.cn/Images/OutliningIndicators/None.gif" align=top&gt;a&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN style="COLOR: #808080"&gt;=&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;&amp;nbsp;&lt;SPAN style="COLOR: red"&gt;"alo\n123\""&lt;/SPAN&gt;&lt;BR&gt;&lt;IMG src="https://blogs.qipai360.cn/Images/OutliningIndicators/None.gif" align=top&gt;a&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN style="COLOR: #808080"&gt;=&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN style="COLOR: #ff0000"&gt;'&lt;/SPAN&gt;&lt;SPAN style="COLOR: #ff0000"&gt;\97lo\10\04923"&lt;/SPAN&gt;&lt;SPAN style="COLOR: #ff0000"&gt;'&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;&lt;BR&gt;&lt;IMG src="https://blogs.qipai360.cn/Images/OutliningIndicators/None.gif" align=top&gt;a&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN style="COLOR: #808080"&gt;=&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN style="COLOR: #ff0000"&gt;[&lt;/SPAN&gt;&lt;SPAN style="COLOR: #ff0000"&gt;[alo&lt;BR&gt;&lt;IMG src="https://blogs.qipai360.cn/Images/OutliningIndicators/None.gif" align=top&gt;123"&lt;/SPAN&gt;&lt;SPAN style="COLOR: #ff0000"&gt;]&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;]&lt;BR&gt;&lt;IMG src="https://blogs.qipai360.cn/Images/OutliningIndicators/None.gif" align=top&gt;a&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN style="COLOR: #808080"&gt;=&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN style="COLOR: #ff0000"&gt;[&lt;/SPAN&gt;&lt;SPAN style="COLOR: #ff0000"&gt;==[&lt;BR&gt;&lt;IMG src="https://blogs.qipai360.cn/Images/OutliningIndicators/None.gif" align=top&gt;alo&lt;BR&gt;&lt;IMG src="https://blogs.qipai360.cn/Images/OutliningIndicators/None.gif" align=top&gt;123"&lt;/SPAN&gt;&lt;SPAN style="COLOR: #ff0000"&gt;]&lt;/SPAN&gt;&lt;SPAN style="COLOR: #808080"&gt;==&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;]&lt;/SPAN&gt;&lt;/DIV&gt;&lt;BR&gt;　　　　值得注意的是，在这种字符串中，如果含有单独使用的"[["或"]]"就仍然得用"\["或"\]"来避免歧义。当然，这种情况是极少会发生的。&lt;BR&gt;&lt;BR&gt;　　E.&amp;nbsp; Table&lt;BR&gt;　　　　关系表类型，这是一个很强大的类型。我们可以把这个类型看作是一个数组。只是C语言的数组，只能用正整数来作索引；在Lua中，你可以用任意类型来作数组的索引，除了nil。同样，在C语言中，数组的内容只允许一种类型；在Lua中，你也可以用任意类型的值来作数组的内容，除了nil。&lt;BR&gt;　　　　Table的定义很简单，它的主要特征是用"{"和"}"来括起一系列数据元素的。比如：&lt;BR&gt;
&lt;DIV style="BORDER-RIGHT: #cccccc 1px solid; PADDING-RIGHT: 5px; BORDER-TOP: #cccccc 1px solid; PADDING-LEFT: 4px; FONT-SIZE: 13px; PADDING-BOTTOM: 4px; BORDER-LEFT: #cccccc 1px solid; WIDTH: 98%; PADDING-TOP: 4px; BORDER-BOTTOM: #cccccc 1px solid; BACKGROUND-COLOR: #eeeeee"&gt;&lt;IMG src="https://blogs.qipai360.cn/Images/OutliningIndicators/None.gif" align=top&gt;&lt;SPAN style="COLOR: #000000"&gt;　　　　T1&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN style="COLOR: #808080"&gt;=&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;&amp;nbsp;{}&amp;nbsp;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN style="COLOR: #008080"&gt;--&lt;/SPAN&gt;&lt;SPAN style="COLOR: #008080"&gt;&amp;nbsp;定义一个空表&lt;/SPAN&gt;&lt;SPAN style="COLOR: #008080"&gt;&lt;BR&gt;&lt;IMG src="https://blogs.qipai360.cn/Images/OutliningIndicators/None.gif" align=top&gt;&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;　　　　T1&lt;/SPAN&gt;&lt;SPAN style="COLOR: #ff0000"&gt;[&lt;/SPAN&gt;&lt;SPAN style="COLOR: #ff0000"&gt;1&lt;/SPAN&gt;&lt;SPAN style="COLOR: #ff0000"&gt;]&lt;/SPAN&gt;&lt;SPAN style="COLOR: #808080"&gt;=&lt;/SPAN&gt;&lt;SPAN style="FONT-WEIGHT: bold; COLOR: #800000"&gt;10&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;&amp;nbsp;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN style="COLOR: #008080"&gt;--&lt;/SPAN&gt;&lt;SPAN style="COLOR: #008080"&gt;&amp;nbsp;然后我们就可以象C语言一样来使用它了。&lt;/SPAN&gt;&lt;SPAN style="COLOR: #008080"&gt;&lt;IMG src="https://blogs.qipai360.cn/Images/OutliningIndicators/None.gif" align=top&gt;&lt;/SPAN&gt;&lt;/DIV&gt;&lt;BR&gt;
&lt;DIV style="BORDER-RIGHT: #cccccc 1px solid; PADDING-RIGHT: 5px; BORDER-TOP: #cccccc 1px solid; PADDING-LEFT: 4px; FONT-SIZE: 13px; PADDING-BOTTOM: 4px; BORDER-LEFT: #cccccc 1px solid; WIDTH: 98%; PADDING-TOP: 4px; BORDER-BOTTOM: #cccccc 1px solid; BACKGROUND-COLOR: #eeeeee"&gt;&lt;IMG src="https://blogs.qipai360.cn/Images/OutliningIndicators/None.gif" align=top&gt;&lt;SPAN style="COLOR: #000000"&gt;　　　　T1&lt;/SPAN&gt;&lt;SPAN style="COLOR: #ff0000"&gt;[&lt;/SPAN&gt;&lt;SPAN style="COLOR: #ff0000"&gt;"John"&lt;/SPAN&gt;&lt;SPAN style="COLOR: #ff0000"&gt;]&lt;/SPAN&gt;&lt;SPAN style="COLOR: #808080"&gt;=&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;{Age&lt;/SPAN&gt;&lt;SPAN style="COLOR: #808080"&gt;=&lt;/SPAN&gt;&lt;SPAN style="FONT-WEIGHT: bold; COLOR: #800000"&gt;27&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;,&amp;nbsp;Gender&lt;/SPAN&gt;&lt;SPAN style="COLOR: #808080"&gt;=&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;"Male"}&lt;BR&gt;&lt;IMG src="https://blogs.qipai360.cn/Images/OutliningIndicators/None.gif" align=top&gt;　　　　这一句相当于：&lt;BR&gt;&lt;IMG src="https://blogs.qipai360.cn/Images/OutliningIndicators/None.gif" align=top&gt;　　　　T1&lt;/SPAN&gt;&lt;SPAN style="COLOR: #ff0000"&gt;[&lt;/SPAN&gt;&lt;SPAN style="COLOR: #ff0000"&gt;"John"&lt;/SPAN&gt;&lt;SPAN style="COLOR: #ff0000"&gt;]&lt;/SPAN&gt;&lt;SPAN style="COLOR: #808080"&gt;=&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;{}&amp;nbsp;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN style="COLOR: #008080"&gt;--&lt;/SPAN&gt;&lt;SPAN style="COLOR: #008080"&gt;&amp;nbsp;必须先定义成一个表，还记得未定义的变量是nil类型吗&lt;/SPAN&gt;&lt;SPAN style="COLOR: #008080"&gt;&lt;BR&gt;&lt;IMG src="https://blogs.qipai360.cn/Images/OutliningIndicators/None.gif" align=top&gt;&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;　　　　T1&lt;/SPAN&gt;&lt;SPAN style="COLOR: #ff0000"&gt;[&lt;/SPAN&gt;&lt;SPAN style="COLOR: #ff0000"&gt;"John"&lt;/SPAN&gt;&lt;SPAN style="COLOR: #ff0000"&gt;][&lt;/SPAN&gt;&lt;SPAN style="COLOR: #ff0000"&gt;"Age"&lt;/SPAN&gt;&lt;SPAN style="COLOR: #ff0000"&gt;]&lt;/SPAN&gt;&lt;SPAN style="COLOR: #808080"&gt;=&lt;/SPAN&gt;&lt;SPAN style="FONT-WEIGHT: bold; COLOR: #800000"&gt;27&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;&lt;BR&gt;&lt;IMG src="https://blogs.qipai360.cn/Images/OutliningIndicators/None.gif" align=top&gt;　　　　T1&lt;/SPAN&gt;&lt;SPAN style="COLOR: #ff0000"&gt;[&lt;/SPAN&gt;&lt;SPAN style="COLOR: #ff0000"&gt;"John"&lt;/SPAN&gt;&lt;SPAN style="COLOR: #ff0000"&gt;][&lt;/SPAN&gt;&lt;SPAN style="COLOR: #ff0000"&gt;"Gender"&lt;/SPAN&gt;&lt;SPAN style="COLOR: #ff0000"&gt;]&lt;/SPAN&gt;&lt;SPAN style="COLOR: #808080"&gt;=&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;"Male"&lt;BR&gt;&lt;IMG src="https://blogs.qipai360.cn/Images/OutliningIndicators/None.gif" align=top&gt;　　　　当表的索引是字符串的时候，我们可以简写成：&lt;BR&gt;&lt;IMG src="https://blogs.qipai360.cn/Images/OutliningIndicators/None.gif" align=top&gt;　　　　T1.John&lt;/SPAN&gt;&lt;SPAN style="COLOR: #808080"&gt;=&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;{}&lt;BR&gt;&lt;IMG src="https://blogs.qipai360.cn/Images/OutliningIndicators/None.gif" align=top&gt;　　　　T1.John.Age&lt;/SPAN&gt;&lt;SPAN style="COLOR: #808080"&gt;=&lt;/SPAN&gt;&lt;SPAN style="FONT-WEIGHT: bold; COLOR: #800000"&gt;27&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;&lt;BR&gt;&lt;IMG src="https://blogs.qipai360.cn/Images/OutliningIndicators/None.gif" align=top&gt;　　　　T1.John.Gender&lt;/SPAN&gt;&lt;SPAN style="COLOR: #808080"&gt;=&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;"Male"&lt;BR&gt;&lt;IMG src="https://blogs.qipai360.cn/Images/OutliningIndicators/None.gif" align=top&gt;　　　　或&lt;BR&gt;&lt;IMG src="https://blogs.qipai360.cn/Images/OutliningIndicators/None.gif" align=top&gt;　　　　T1.John{Age&lt;/SPAN&gt;&lt;SPAN style="COLOR: #808080"&gt;=&lt;/SPAN&gt;&lt;SPAN style="FONT-WEIGHT: bold; COLOR: #800000"&gt;27&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;,&amp;nbsp;Gender&lt;/SPAN&gt;&lt;SPAN style="COLOR: #808080"&gt;=&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;"Male"}&lt;/SPAN&gt;&lt;/DIV&gt;这是一个很强的特性。&lt;BR&gt;&lt;BR&gt;　　　　在定义表的时候，我们可以把所有的数据内容一起写在"{"和"}"之间，这样子是非常方便，而且很好看。比如，前面的T1的定义，我们可以这么写：&lt;BR&gt;
&lt;DIV style="BORDER-RIGHT: #cccccc 1px solid; PADDING-RIGHT: 5px; BORDER-TOP: #cccccc 1px solid; PADDING-LEFT: 4px; FONT-SIZE: 13px; PADDING-BOTTOM: 4px; BORDER-LEFT: #cccccc 1px solid; WIDTH: 98%; PADDING-TOP: 4px; BORDER-BOTTOM: #cccccc 1px solid; BACKGROUND-COLOR: #eeeeee"&gt;&lt;IMG src="https://blogs.qipai360.cn/Images/OutliningIndicators/None.gif" align=top&gt;&lt;SPAN style="COLOR: #000000"&gt;　　　　T1&lt;/SPAN&gt;&lt;SPAN style="COLOR: #808080"&gt;=&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;&lt;BR&gt;&lt;IMG src="https://blogs.qipai360.cn/Images/OutliningIndicators/None.gif" align=top&gt;　　　　{&lt;BR&gt;&lt;IMG src="https://blogs.qipai360.cn/Images/OutliningIndicators/None.gif" align=top&gt;　　　　　　&lt;/SPAN&gt;&lt;SPAN style="FONT-WEIGHT: bold; COLOR: #800000"&gt;10&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;,&amp;nbsp;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN style="COLOR: #008080"&gt;--&lt;/SPAN&gt;&lt;SPAN style="COLOR: #008080"&gt;&amp;nbsp;相当于&amp;nbsp;[1]&amp;nbsp;=&amp;nbsp;10&lt;/SPAN&gt;&lt;SPAN style="COLOR: #008080"&gt;&lt;BR&gt;&lt;IMG src="https://blogs.qipai360.cn/Images/OutliningIndicators/None.gif" align=top&gt;&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;　　　　　　&lt;/SPAN&gt;&lt;SPAN style="COLOR: #ff0000"&gt;[&lt;/SPAN&gt;&lt;SPAN style="COLOR: #ff0000"&gt;100&lt;/SPAN&gt;&lt;SPAN style="COLOR: #ff0000"&gt;]&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN style="COLOR: #808080"&gt;=&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN style="FONT-WEIGHT: bold; COLOR: #800000"&gt;40&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;,&lt;BR&gt;&lt;IMG src="https://blogs.qipai360.cn/Images/OutliningIndicators/None.gif" align=top&gt;　　　　　　John&lt;/SPAN&gt;&lt;SPAN style="COLOR: #808080"&gt;=&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;&amp;nbsp;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN style="COLOR: #008080"&gt;--&lt;/SPAN&gt;&lt;SPAN style="COLOR: #008080"&gt;&amp;nbsp;如果你原意，你还可以写成：["John"]&amp;nbsp;=&lt;/SPAN&gt;&lt;SPAN style="COLOR: #008080"&gt;&lt;BR&gt;&lt;IMG src="https://blogs.qipai360.cn/Images/OutliningIndicators/None.gif" align=top&gt;&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;　　　　　　{&lt;BR&gt;&lt;IMG src="https://blogs.qipai360.cn/Images/OutliningIndicators/None.gif" align=top&gt;　　　　　　　　Age&lt;/SPAN&gt;&lt;SPAN style="COLOR: #808080"&gt;=&lt;/SPAN&gt;&lt;SPAN style="FONT-WEIGHT: bold; COLOR: #800000"&gt;27&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;,&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN style="COLOR: #008080"&gt;--&lt;/SPAN&gt;&lt;SPAN style="COLOR: #008080"&gt;&amp;nbsp;如果你原意，你还可以写成：["Age"]&amp;nbsp;=27&lt;/SPAN&gt;&lt;SPAN style="COLOR: #008080"&gt;&lt;BR&gt;&lt;IMG src="https://blogs.qipai360.cn/Images/OutliningIndicators/None.gif" align=top&gt;&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;　　　　　　　　Gender&lt;/SPAN&gt;&lt;SPAN style="COLOR: #808080"&gt;=&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;Male&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN style="COLOR: #008080"&gt;--&lt;/SPAN&gt;&lt;SPAN style="COLOR: #008080"&gt;&amp;nbsp;如果你原意，你还可以写成：["Gender"]&amp;nbsp;=Male&lt;/SPAN&gt;&lt;SPAN style="COLOR: #008080"&gt;&lt;BR&gt;&lt;IMG src="https://blogs.qipai360.cn/Images/OutliningIndicators/None.gif" align=top&gt;&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;　　　　　　},&lt;BR&gt;&lt;IMG src="https://blogs.qipai360.cn/Images/OutliningIndicators/None.gif" align=top&gt;　　　　　　&lt;/SPAN&gt;&lt;SPAN style="FONT-WEIGHT: bold; COLOR: #800000"&gt;20&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;&amp;nbsp;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN style="COLOR: #008080"&gt;--&lt;/SPAN&gt;&lt;SPAN style="COLOR: #008080"&gt;&amp;nbsp;相当于&amp;nbsp;[2]&amp;nbsp;=&amp;nbsp;20&lt;/SPAN&gt;&lt;SPAN style="COLOR: #008080"&gt;&lt;BR&gt;&lt;IMG src="https://blogs.qipai360.cn/Images/OutliningIndicators/None.gif" align=top&gt;&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;　　　　}&lt;BR&gt;&lt;IMG src="https://blogs.qipai360.cn/Images/OutliningIndicators/None.gif" align=top&gt;&lt;/SPAN&gt;&lt;/DIV&gt;&lt;BR&gt;　　　　看起来很漂亮，不是吗？我们在写的时候，需要注意三点：&lt;BR&gt;　　　　第一，所有元素之间，总是用逗号"，"隔开；&lt;BR&gt;　　　　第二，所有索引值都需要用"["和"]"括起来；如果是字符串，还可以去掉引号和中括号；&lt;BR&gt;　　　　第三，如果不写索引，则索引就会被认为是数字，并按顺序自动从1往后编；&lt;BR&gt;&lt;BR&gt;　　　　表类型的构造是如此的方便，以致于常常被人用来代替配置文件。是的，不用怀疑，它比ini文件要漂亮，并且强大的多。&lt;BR&gt;&lt;BR&gt;　　F.&amp;nbsp; Function&lt;BR&gt;　　　　函数，在Lua中，函数的定义也很简单。典型的定义如下：&lt;BR&gt;
&lt;DIV style="BORDER-RIGHT: #cccccc 1px solid; PADDING-RIGHT: 5px; BORDER-TOP: #cccccc 1px solid; PADDING-LEFT: 4px; FONT-SIZE: 13px; PADDING-BOTTOM: 4px; BORDER-LEFT: #cccccc 1px solid; WIDTH: 98%; PADDING-TOP: 4px; BORDER-BOTTOM: #cccccc 1px solid; BACKGROUND-COLOR: #eeeeee"&gt;&lt;IMG src="https://blogs.qipai360.cn/Images/OutliningIndicators/None.gif" align=top&gt;&lt;SPAN style="COLOR: #000000"&gt;　　　　&lt;/SPAN&gt;&lt;SPAN style="COLOR: #0000ff"&gt;function&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN style="COLOR: #0000ff"&gt;add&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;(a,b)&amp;nbsp;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN style="COLOR: #008080"&gt;--&lt;/SPAN&gt;&lt;SPAN style="COLOR: #008080"&gt;&amp;nbsp;add&amp;nbsp;是函数名字，a和b是参数名字&lt;/SPAN&gt;&lt;SPAN style="COLOR: #008080"&gt;&lt;BR&gt;&lt;IMG src="https://blogs.qipai360.cn/Images/OutliningIndicators/None.gif" align=top&gt;&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;　　　　&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN style="COLOR: #0000ff"&gt;return&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;&amp;nbsp;a&lt;/SPAN&gt;&lt;SPAN style="COLOR: #808080"&gt;+&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;b&amp;nbsp;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN style="COLOR: #008080"&gt;--&lt;/SPAN&gt;&lt;SPAN style="COLOR: #008080"&gt;&amp;nbsp;return&amp;nbsp;用来返回函数的运行结果&lt;/SPAN&gt;&lt;SPAN style="COLOR: #008080"&gt;&lt;BR&gt;&lt;IMG src="https://blogs.qipai360.cn/Images/OutliningIndicators/None.gif" align=top&gt;&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;　　　　&lt;/SPAN&gt;&lt;SPAN style="COLOR: #0000ff"&gt;end&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;&lt;IMG src="https://blogs.qipai360.cn/Images/OutliningIndicators/None.gif" align=top&gt;&lt;/SPAN&gt;&lt;/DIV&gt;&lt;BR&gt;　　　　请注意，return语言一定要写在end之前。假如我们非要在中间放上一句return，那么就应该要写成：do return end。&lt;BR&gt;　　　　还记得前面说过，函数也是变量类型吗？上面的函数定义，其实相当于：&lt;BR&gt;
&lt;DIV style="BORDER-RIGHT: #cccccc 1px solid; PADDING-RIGHT: 5px; BORDER-TOP: #cccccc 1px solid; PADDING-LEFT: 4px; FONT-SIZE: 13px; PADDING-BOTTOM: 4px; BORDER-LEFT: #cccccc 1px solid; WIDTH: 98%; PADDING-TOP: 4px; BORDER-BOTTOM: #cccccc 1px solid; BACKGROUND-COLOR: #eeeeee"&gt;&lt;IMG src="https://blogs.qipai360.cn/Images/OutliningIndicators/None.gif" align=top&gt;&lt;SPAN style="COLOR: #000000"&gt;　　　　&lt;/SPAN&gt;&lt;SPAN style="COLOR: #0000ff"&gt;add&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN style="COLOR: #808080"&gt;=&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN style="COLOR: #0000ff"&gt;function&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;&amp;nbsp;(a,b)&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN style="COLOR: #0000ff"&gt;return&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;&amp;nbsp;a&lt;/SPAN&gt;&lt;SPAN style="COLOR: #808080"&gt;+&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;b&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN style="COLOR: #0000ff"&gt;end&lt;/SPAN&gt;&lt;/DIV&gt;当重新给add赋值时，它就不再表示这个函数了。我们甚至可以赋给add任意数据，包括nil （这样，赋值为nil，将会把该变量清除）。Function是不是很象C语言的函数指针呢？&lt;BR&gt;&lt;BR&gt;　　　　和C语言一样，Lua的函数可以接受可变参数个数，它同样是用"..."来定义的，比如：&lt;BR&gt;
&lt;DIV style="BORDER-RIGHT: #cccccc 1px solid; PADDING-RIGHT: 5px; BORDER-TOP: #cccccc 1px solid; PADDING-LEFT: 4px; FONT-SIZE: 13px; PADDING-BOTTOM: 4px; BORDER-LEFT: #cccccc 1px solid; WIDTH: 98%; PADDING-TOP: 4px; BORDER-BOTTOM: #cccccc 1px solid; BACKGROUND-COLOR: #eeeeee"&gt;&lt;IMG src="https://blogs.qipai360.cn/Images/OutliningIndicators/None.gif" align=top&gt;&lt;SPAN style="COLOR: #000000"&gt;　　　　&lt;/SPAN&gt;&lt;SPAN style="COLOR: #0000ff"&gt;function&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN style="COLOR: #ff00ff"&gt;sum&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;&amp;nbsp;(a,b,&lt;IMG src="https://blogs.qipai360.cn/Images/dot.gif"&gt;)&lt;/SPAN&gt;&lt;/DIV&gt;如果想取得...所代表的参数，可以在函数中访问arg局部变量（表类型）得到 (&lt;SPAN style="COLOR: red"&gt;lua5.1: 取消arg，并直接用"..."来代表可变参数了，本质还是arg&lt;/SPAN&gt;)。&lt;BR&gt;　　　　如 sum(1,2,3,4)&lt;BR&gt;　　　　则，在函数中，a = 1, b = 2, arg = {3, 4}&amp;nbsp; (&lt;SPAN style="COLOR: red"&gt;lua5.1:&amp;nbsp; a = 1, b = 2, ... = {3, 4}&lt;/SPAN&gt;)&lt;BR&gt;　　　　更可贵的是，它可以同时返回多个结果，比如：&lt;BR&gt;
&lt;DIV style="BORDER-RIGHT: #cccccc 1px solid; PADDING-RIGHT: 5px; BORDER-TOP: #cccccc 1px solid; PADDING-LEFT: 4px; FONT-SIZE: 13px; PADDING-BOTTOM: 4px; BORDER-LEFT: #cccccc 1px solid; WIDTH: 98%; PADDING-TOP: 4px; BORDER-BOTTOM: #cccccc 1px solid; BACKGROUND-COLOR: #eeeeee"&gt;&lt;IMG src="https://blogs.qipai360.cn/Images/OutliningIndicators/None.gif" align=top&gt;&lt;SPAN style="COLOR: #000000"&gt;　　　　&lt;/SPAN&gt;&lt;SPAN style="COLOR: #0000ff"&gt;function&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;&amp;nbsp;s()&lt;BR&gt;&lt;IMG src="https://blogs.qipai360.cn/Images/OutliningIndicators/None.gif" align=top&gt;　　　　　　&lt;/SPAN&gt;&lt;SPAN style="COLOR: #0000ff"&gt;return&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN style="FONT-WEIGHT: bold; COLOR: #800000"&gt;1&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;,&lt;/SPAN&gt;&lt;SPAN style="FONT-WEIGHT: bold; COLOR: #800000"&gt;2&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;,&lt;/SPAN&gt;&lt;SPAN style="FONT-WEIGHT: bold; COLOR: #800000"&gt;3&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;,&lt;/SPAN&gt;&lt;SPAN style="FONT-WEIGHT: bold; COLOR: #800000"&gt;4&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;&lt;BR&gt;&lt;IMG src="https://blogs.qipai360.cn/Images/OutliningIndicators/None.gif" align=top&gt;　　　　&lt;/SPAN&gt;&lt;SPAN style="COLOR: #0000ff"&gt;end&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;&lt;BR&gt;&lt;IMG src="https://blogs.qipai360.cn/Images/OutliningIndicators/None.gif" align=top&gt;　　　　a,b,c,d&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN style="COLOR: #808080"&gt;=&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;&amp;nbsp;s()&amp;nbsp;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN style="COLOR: #008080"&gt;--&lt;/SPAN&gt;&lt;SPAN style="COLOR: #008080"&gt;&amp;nbsp;此时，a&amp;nbsp;=&amp;nbsp;1,&amp;nbsp;b&amp;nbsp;=&amp;nbsp;2,&amp;nbsp;c&amp;nbsp;=&amp;nbsp;3,&amp;nbsp;d&amp;nbsp;=&amp;nbsp;4&lt;/SPAN&gt;&lt;SPAN style="COLOR: #008080"&gt;&lt;IMG src="https://blogs.qipai360.cn/Images/OutliningIndicators/None.gif" align=top&gt;&lt;/SPAN&gt;&lt;/DIV&gt;&lt;BR&gt;　　　　前面说过，表类型可以拥有任意类型的值，包括函数！因此，有一个很强大的特性是，拥有函数的表，哦，我想更恰当的应该说是对象吧。Lua可以使用面向对象编程了。不信？举例如下：&lt;BR&gt;
&lt;DIV style="BORDER-RIGHT: #cccccc 1px solid; PADDING-RIGHT: 5px; BORDER-TOP: #cccccc 1px solid; PADDING-LEFT: 4px; FONT-SIZE: 13px; PADDING-BOTTOM: 4px; BORDER-LEFT: #cccccc 1px solid; WIDTH: 98%; PADDING-TOP: 4px; BORDER-BOTTOM: #cccccc 1px solid; BACKGROUND-COLOR: #eeeeee"&gt;&lt;IMG src="https://blogs.qipai360.cn/Images/OutliningIndicators/None.gif" align=top&gt;&lt;SPAN style="COLOR: #000000"&gt;　　　　t&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN style="COLOR: #808080"&gt;=&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;&lt;BR&gt;&lt;IMG src="https://blogs.qipai360.cn/Images/OutliningIndicators/None.gif" align=top&gt;　　　　{&lt;BR&gt;&lt;IMG src="https://blogs.qipai360.cn/Images/OutliningIndicators/None.gif" align=top&gt;　　　　&amp;nbsp;Age&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN style="COLOR: #808080"&gt;=&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN style="FONT-WEIGHT: bold; COLOR: #800000"&gt;27&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;&lt;BR&gt;&lt;IMG src="https://blogs.qipai360.cn/Images/OutliningIndicators/None.gif" align=top&gt;　　　　&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN style="COLOR: #0000ff"&gt;add&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN style="COLOR: #808080"&gt;=&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN style="COLOR: #0000ff"&gt;function&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;(self,&amp;nbsp;n)&amp;nbsp;self.Age&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN style="COLOR: #808080"&gt;=&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;&amp;nbsp;self.Age&lt;/SPAN&gt;&lt;SPAN style="COLOR: #808080"&gt;+&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;n&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN style="COLOR: #0000ff"&gt;end&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;&lt;BR&gt;&lt;IMG src="https://blogs.qipai360.cn/Images/OutliningIndicators/None.gif" align=top&gt;　　　　}&lt;BR&gt;&lt;IMG src="https://blogs.qipai360.cn/Images/OutliningIndicators/None.gif" align=top&gt;　　　　&lt;/SPAN&gt;&lt;SPAN style="COLOR: #0000ff"&gt;print&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;(t.Age)&amp;nbsp;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN style="COLOR: #008080"&gt;--&lt;/SPAN&gt;&lt;SPAN style="COLOR: #008080"&gt;&amp;nbsp;27&lt;/SPAN&gt;&lt;SPAN style="COLOR: #008080"&gt;&lt;BR&gt;&lt;IMG src="https://blogs.qipai360.cn/Images/OutliningIndicators/None.gif" align=top&gt;&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;　　　　t.&lt;/SPAN&gt;&lt;SPAN style="COLOR: #0000ff"&gt;add&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;(t,&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN style="FONT-WEIGHT: bold; COLOR: #800000"&gt;10&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;)&lt;BR&gt;&lt;IMG src="https://blogs.qipai360.cn/Images/OutliningIndicators/None.gif" align=top&gt;　　　　&lt;/SPAN&gt;&lt;SPAN style="COLOR: #0000ff"&gt;print&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;(t.Age)&amp;nbsp;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN style="COLOR: #008080"&gt;--&lt;/SPAN&gt;&lt;SPAN style="COLOR: #008080"&gt;&amp;nbsp;37&lt;/SPAN&gt;&lt;/DIV&gt;&lt;BR&gt;　　　　不过，t.add(t,10) 这一句实在是有点土对吧？没关系，在Lua中，我们可以简写成：&lt;BR&gt;
&lt;DIV style="BORDER-RIGHT: #cccccc 1px solid; PADDING-RIGHT: 5px; BORDER-TOP: #cccccc 1px solid; PADDING-LEFT: 4px; FONT-SIZE: 13px; PADDING-BOTTOM: 4px; BORDER-LEFT: #cccccc 1px solid; WIDTH: 98%; PADDING-TOP: 4px; BORDER-BOTTOM: #cccccc 1px solid; BACKGROUND-COLOR: #eeeeee"&gt;&lt;IMG src="https://blogs.qipai360.cn/Images/OutliningIndicators/None.gif" align=top&gt;&lt;SPAN style="COLOR: #000000"&gt;　　　　t:&lt;/SPAN&gt;&lt;SPAN style="COLOR: #0000ff"&gt;add&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;(&lt;/SPAN&gt;&lt;SPAN style="FONT-WEIGHT: bold; COLOR: #800000"&gt;10&lt;/SPAN&gt;&lt;SPAN style="COLOR: #000000"&gt;)&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN style="COLOR: #008080"&gt;--&lt;/SPAN&gt;&lt;SPAN style="COLOR: #008080"&gt;&amp;nbsp;相当于&amp;nbsp;t.add(t,10)&lt;/SPAN&gt;&lt;/DIV&gt;&lt;BR&gt;　　G.&amp;nbsp; Userdata 和 Thread&lt;BR&gt;　　　　这两个类型的话题，超出了本文的内容，就不打算细说了。&lt;BR&gt;&lt;BR&gt;VI.&amp;nbsp; 结束语&lt;BR&gt;　　就这么结束了吗？当然不是，接下来，我们需要用Lua解释器，来帮助理解和实践了。相信这样会更快的对Lua上手了。&lt;BR&gt;　　就象C语言一样，Lua提供了相当多的标准函数来增强语言的功能。使用这些标准函数，可以很方便的操作各种数据类型，并处理输入输出。有关这方面的信息，我们可以参考《Programming in Lua 》一书，也可以在网络上直接观看电子版，网址为：&lt;A href="http://www.lua.org/pil/index.html"&gt;http://www.lua.org/pil/index.html&lt;/A&gt;&lt;BR&gt;　　&lt;BR&gt;备注：本文的部份内容摘、译自lua随机文档。&lt;BR&gt;相关链接：&lt;BR&gt;1. Lua 官方网站： &lt;A href="http://www.lua.org/"&gt;http://www.lua.org/&lt;/A&gt; &lt;BR&gt;2. Lua Wiki网站，你可以在这里找到很多相关的资料，如文档、教程、扩展，以及C/C++的包装等： &lt;A href="http://lua-users.org/wiki/"&gt;http://lua-users.org/wiki/&lt;/A&gt;&lt;BR&gt;3. Lua 打包下载（包括各种平台和编译器的工程文件如vs2003,vs2005）：http://luabinaries.luaforge.net/download.html&lt;BR&gt;&lt;BR&gt;这是我编译好的Lua5.02的解释器：&lt;A href="https://blogs.qipai360.cn/Files/ly4cn/lua.zip"&gt;http://www.cnblogs.com/Files/ly4cn/lua.zip&lt;/A&gt;&lt;BR&gt;&lt;/DIV&gt;</description></item><item><title>Lua第三方插件列表</title><link>https://blogs.qipai360.cn/post/lua-third-party-plugins-list/</link><pubDate>Fri, 21 Sep 2007 12:21:00 +0800</pubDate><guid>https://blogs.qipai360.cn/post/lua-third-party-plugins-list/</guid><description>&lt;P&gt;下面的这些内容不包含在本文中：&lt;BR&gt;官方的Lua包和文档 (参看 &lt;A href="http://www.lua.org/"&gt;&lt;U&gt;&lt;FONT color=#800080&gt;&lt;A href="http://www.lua.org/),；涉及到Lua使用但不是被Lua使用者普遍使用的东西%20(参看"&gt;http://www.lua.org/&lt;/FONT&gt;&lt;/U&gt;&lt;/A&gt;),&lt;FONT color=#000000&gt;；&lt;BR&gt;&lt;/FONT&gt;涉及到Lua使用但不是被Lua使用者普遍使用的东西&lt;FONT color=#000000&gt; (参看 &lt;/FONT&gt;&lt;/A&gt;&lt;A href="http://www.lua.org/uses.html"&gt;&lt;U&gt;&lt;FONT color=#0000ff&gt;http://www.lua.org/uses.html&lt;/FONT&gt;&lt;/U&gt;&lt;/A&gt;&lt;A href="http://www.lua.org/),；涉及到Lua使用但不是被Lua使用者普遍使用的东西；things"&gt;&lt;FONT color=#000000&gt;), &lt;/FONT&gt;；&lt;BR&gt;&lt;/A&gt;本wiki已经存在的内容(参看 &lt;A href="http://lua-users.org/wiki/LuaDirectory"&gt;&lt;U&gt;&lt;FONT color=#0000ff&gt;LuaDirectory&lt;/FONT&gt;&lt;/U&gt;&lt;/A&gt;). 
&lt;P&gt;
&lt;H2&gt;&lt;A href="http://lua-users.org/wiki/LibrariesAndBindings"&gt;&lt;U&gt;&lt;FONT color=#0000ff&gt;类库和与Lua绑定的资源&lt;/FONT&gt;&lt;/U&gt;&lt;/A&gt;&lt;/H2&gt;
&lt;P&gt;&lt;U&gt;&lt;FONT color=#0000ff&gt;&lt;/FONT&gt;&lt;/U&gt;
&lt;DL&gt;
&lt;DT&gt;&lt;U&gt;&lt;FONT color=#0000ff&gt;&lt;/FONT&gt;&lt;/U&gt;
&lt;DD&gt;&lt;A href="http://lua-users.org/wiki/LibrariesAndBindings"&gt;&lt;U&gt;&lt;FONT color=#0000ff&gt;LibrariesAndBindings&lt;/FONT&gt;&lt;/U&gt;&lt;/A&gt; &lt;/DD&gt;&lt;/DL&gt;
&lt;P&gt;
&lt;H2&gt;开发环境&lt;/H2&gt;
&lt;P&gt;
&lt;UL&gt;
&lt;LI&gt;&lt;A href="http://www.gorlice.net.pl/~rybak/luaide"&gt;&lt;U&gt;&lt;FONT color=#0000ff&gt;[LuaIDE]&lt;/FONT&gt;&lt;/U&gt;&lt;/A&gt; (5.0) - Windows平台Lua的整合开发环境(最新发布 2004-01-29). 
&lt;LI&gt;&lt;A href="http://www.luascript.thersgb.net/"&gt;&lt;U&gt;&lt;FONT color=#0000ff&gt;[wxLua]&lt;/FONT&gt;&lt;/U&gt;&lt;/A&gt; (5.0) -&amp;nbsp;Lua and wxWidgets的混合体.有自己的带有调试器的IDE。这个IDE使用wxlua开发的。 
&lt;LI&gt;&lt;A href="http://www.ideais.com.br/luaeclipse/"&gt;&lt;U&gt;&lt;FONT color=#0000ff&gt;[LuaEclipse]&lt;/FONT&gt;&lt;/U&gt;&lt;/A&gt; (5.0) - Eclipse 平台的Lua IDE . 
&lt;LI&gt;&lt;A href="http://www.vortexentertainment.com/produto.php?id=luaide"&gt;&lt;U&gt;&lt;FONT color=#0000ff&gt;[Vortex LuaIDE]&lt;/FONT&gt;&lt;/U&gt;&lt;/A&gt; (5.0) -&amp;nbsp;Brazilian Portuguese的一些免费的Lua IDE! (Outra IDE para Lua gratuita, mas em Português!). 
&lt;LI&gt;&lt;A href="http://luaforge.net/projects/luax/"&gt;&lt;U&gt;&lt;FONT color=#0000ff&gt;[LuaX]&lt;/FONT&gt;&lt;/U&gt;&lt;/A&gt; (5.x) - 支持多种操作系统下开发Lua应用的开发平台(with GUI, serial port etc. modules)特别适合于工业自动化和嵌入式产品开发。 
&lt;LI&gt;&lt;A href="http://visualwx.altervista.org/"&gt;&lt;U&gt;&lt;FONT color=#0000ff&gt;[VisualWx]&lt;/FONT&gt;&lt;/U&gt;&lt;/A&gt; (5.x) -&amp;nbsp;Lua &amp;amp; wxLua的IDE (自由软件) 
&lt;LI&gt;&lt;A href="http://www.quotixsoftware.com/qde_index.htm"&gt;&lt;U&gt;&lt;FONT color=#0000ff&gt;[QDE]&lt;/FONT&gt;&lt;/U&gt;&lt;/A&gt; (5.x) -&amp;nbsp;Lua的Quotix 开发环境. 他支持工程管理，多文档接口等 (最新发布2005-03-06). 
&lt;LI&gt;&lt;A href="http://blua.sourceforge.net/"&gt;&lt;U&gt;&lt;FONT color=#0000ff&gt;[B:Lua]&lt;/FONT&gt;&lt;/U&gt;&lt;/A&gt; -&amp;nbsp;开源项目： 具备各种特征的Lua IDE. &lt;/LI&gt;&lt;/UL&gt;
&lt;P&gt;
&lt;H2&gt;代码封装&lt;/H2&gt;
&lt;UL&gt;
&lt;LI&gt;&lt;A href="http://www.thomasandamy.com/projects/CPB/"&gt;&lt;U&gt;&lt;FONT color=#0000ff&gt;[CPB]&lt;/FONT&gt;&lt;/U&gt;&lt;/A&gt; (5.0)(Win32) - C++&amp;nbsp;和 Lua连接之桥,实现两种语言的相互通信. 
&lt;LI&gt;&lt;A href="http://sourceforge.net/projects/calua"&gt;&lt;U&gt;&lt;FONT color=#0000ff&gt;[CaLua]&lt;/FONT&gt;&lt;/U&gt;&lt;/A&gt; (5.0) - 实现了绑定C函数和结构体到Lua，可以在Lua中使用C指针、数组、函数。(使用x86结构的计算机) 
&lt;LI&gt;&lt;A href="http://sourceforge.net/projects/cpplua"&gt;&lt;U&gt;&lt;FONT color=#0000ff&gt;[CppLua]&lt;/FONT&gt;&lt;/U&gt;&lt;/A&gt; (5.0) - lua API的C++封装。 
&lt;LI&gt;&lt;A href="ftp://ftp.tecgraf.puc-rio.br/pub/lhf/lua2c.tar.gz"&gt;&lt;U&gt;&lt;FONT color=#0000ff&gt;[lua2c]&lt;/FONT&gt;&lt;/U&gt;&lt;/A&gt; (5.0) - 将Lua代码转换成C代码的工具. 
&lt;LI&gt;&lt;A href="http://luabind.sf.net/"&gt;&lt;U&gt;&lt;FONT color=#0000ff&gt;[luabind]&lt;/FONT&gt;&lt;/U&gt;&lt;/A&gt; (5.0) - 基于模板的，绑定Lua和C++类以及函数 
&lt;LI&gt;&lt;A href="http://www.tecgraf.puc-rio.br/~celes/tolua/"&gt;&lt;U&gt;&lt;FONT color=#0000ff&gt;[tolua]&lt;/FONT&gt;&lt;/U&gt;&lt;/A&gt; (5.0) - 自动绑定C/C++和Lua的工具. 
&lt;LI&gt;&lt;A href="http://lua-users.org/wiki/LuaWrapper"&gt;&lt;U&gt;&lt;FONT color=#0000ff&gt;LuaWrapper&lt;/FONT&gt;&lt;/U&gt;&lt;/A&gt; 基于模版的封装包，很容易绑定C++代码和Lua。纯头文件。 
&lt;LI&gt;&lt;A href="http://www.codenix.com/~tolua"&gt;&lt;U&gt;&lt;FONT color=#0000ff&gt;[tolua++]&lt;/FONT&gt;&lt;/U&gt;&lt;/A&gt; (5.0) - tolua的高级版本，带有c++面向对象的特征. ( &lt;A href="http://lua-users.org/wiki/CompilingToluappWithoutScons"&gt;&lt;U&gt;&lt;FONT color=#0000ff&gt;CompilingToluappWithoutScons&lt;/FONT&gt;&lt;/U&gt;&lt;/A&gt; i.e., Compiling Tolua++ Without SCons ) 
&lt;LI&gt;&lt;A href="http://lua-users.org/files/wiki_insecure/users/luapi/"&gt;&lt;U&gt;&lt;FONT color=#0000ff&gt;[luapi]&lt;/FONT&gt;&lt;/U&gt;&lt;/A&gt; (5.0) - Lua api的C封装. 
&lt;LI&gt;&lt;A href="http://rzserv2.fhnon.de/~lg016586/PBLua/"&gt;&lt;U&gt;&lt;FONT color=#0000ff&gt;[PBLua]&lt;/FONT&gt;&lt;/U&gt;&lt;/A&gt; (5.0.2) - Lua 5.0.2基本库的封装. 
&lt;LI&gt;&lt;A href="http://mark0.net/code-powerblua-e.html"&gt;&lt;U&gt;&lt;FONT color=#0000ff&gt;[PowerBLua]&lt;/FONT&gt;&lt;/U&gt;&lt;/A&gt; (5.0) - PowerBASIC include &amp;amp; source for wrapping Lua (work in progress). 
&lt;LI&gt;&lt;A href="http://wxcode.sourceforge.net/components/wxscript/index.html"&gt;&lt;U&gt;&lt;FONT color=#0000ff&gt;[wxScript]&lt;/FONT&gt;&lt;/U&gt;&lt;/A&gt; (5.0.2) - 一些抽象类，添加到脚本解释器可以使你的wxWidgets支持Lua语言。 
&lt;LI&gt;&lt;A href="http://moin.conectiva.com.br/LunaticPython"&gt;&lt;U&gt;&lt;FONT color=#0000ff&gt;[LunaticPython]&lt;/FONT&gt;&lt;/U&gt;&lt;/A&gt; (0.1) - Lua/Python&amp;nbsp;的双向桥。可以将Lua解释器嵌入到python中，反过来也可以。 &lt;/LI&gt;&lt;/UL&gt;
&lt;P&gt;
&lt;P&gt;
&lt;H2&gt;Lua的使用&lt;/H2&gt;&lt;EM&gt;Lua的使用列表&lt;A href="http://www.lua.org/uses.html"&gt;&lt;U&gt;&lt;FONT color=#0000ff&gt;[1]&lt;/FONT&gt;&lt;/U&gt;&lt;/A&gt;. &lt;/EM&gt;
&lt;P&gt;
&lt;UL&gt;
&lt;LI&gt;&lt;A href="http://premake.sourceforge.net/"&gt;&lt;U&gt;&lt;FONT color=#0000ff&gt;[Premake]&lt;/FONT&gt;&lt;/U&gt;&lt;/A&gt; -一个用Lua语言实现的 automake 替代品. 可以为MS VC++, GNU make, 等创建工程文件. 
&lt;LI&gt;&lt;A href="http://luaforge.net/projects/lumikki"&gt;&lt;U&gt;&lt;FONT color=#0000ff&gt;[Lumikki]&lt;/FONT&gt;&lt;/U&gt;&lt;/A&gt; (5.0) - 使用Lua宏创建web站点，可以使用导航菜单，风格等。&lt;/LI&gt;&lt;/UL&gt;
&lt;P&gt;
&lt;H2&gt;工具&lt;/H2&gt;
&lt;P&gt;
&lt;UL&gt;
&lt;LI&gt;&lt;A href="http://lua-users.org/wiki/ExpLua"&gt;&lt;U&gt;&lt;FONT color=#0000ff&gt;ExpLua&lt;/FONT&gt;&lt;/U&gt;&lt;/A&gt; (5.0) - 代码文档工具(开发中。。。). 
&lt;LI&gt;&lt;A href="http://luaforge.net/projects/hamster/"&gt;&lt;U&gt;&lt;FONT color=#0000ff&gt;[Hamster (ex SCons/Lua)]&lt;/FONT&gt;&lt;/U&gt;&lt;/A&gt; (5.x) - Lua front-end to the SCons build engine (or others). 
&lt;LI&gt;&lt;A href="http://www.keplerproject.org/"&gt;&lt;U&gt;&lt;FONT color=#0000ff&gt;[Kepler Project]&lt;/FONT&gt;&lt;/U&gt;&lt;/A&gt; (5.0) - 使用 &lt;A href="http://www.keplerproject.org/cgilua/"&gt;&lt;U&gt;&lt;FONT color=#0000ff&gt;[CGILua 5.0]&lt;/FONT&gt;&lt;/U&gt;&lt;/A&gt;实现的Lua 5.0的web模板引擎&amp;nbsp;. 
&lt;LI&gt;&lt;A href="http://www.xtgsystems.com/linux/lua/mod_lua.php"&gt;&lt;U&gt;&lt;FONT color=#0000ff&gt;[Mod_Lua (5.0)]&lt;/FONT&gt;&lt;/U&gt;&lt;/A&gt; - &amp;nbsp;Apache 2的 module，使得web应用与PHP类似。 
&lt;LI&gt;&lt;A href="http://www.tecgraf.puc-rio.br/~lhf/ftp/lua/"&gt;&lt;U&gt;&lt;FONT color=#0000ff&gt;[ctrace]&lt;/FONT&gt;&lt;/U&gt;&lt;/A&gt; (5.0) - 跟踪Lua API调用的工具. 
&lt;LI&gt;&lt;A href="http://www.tecgraf.puc-rio.br/~lhf/ftp/lua/"&gt;&lt;U&gt;&lt;FONT color=#0000ff&gt;[lper]&lt;/FONT&gt;&lt;/U&gt;&lt;/A&gt; (5.0) - 创建持久Lua 状态的工具,&amp;nbsp;基于 &lt;A href="http://sources.redhat.com/gdb/5/onlinedocs/mmalloc.html"&gt;&lt;U&gt;&lt;FONT color=#0000ff&gt;[GNU mmalloc]&lt;/FONT&gt;&lt;/U&gt;&lt;/A&gt; (part of GDB). 
&lt;LI&gt;&lt;A href="http://lua-users.org/wiki/PlutoLibrary"&gt;&lt;U&gt;&lt;FONT color=#0000ff&gt;PlutoLibrary&lt;/FONT&gt;&lt;/U&gt;&lt;/A&gt; (5.0.2) - 为Lua创建重量级的持久性. 
&lt;LI&gt;&lt;A href="http://luaforge.net/projects/chunkspy/"&gt;&lt;U&gt;&lt;FONT color=#0000ff&gt;[ChunkSpy]&lt;/FONT&gt;&lt;/U&gt;&lt;/A&gt; (5.0.2) - a binary chunk disassembler, with interactive mode, reading custom binary chunk formats, etc. 
&lt;LI&gt;&lt;A href="http://www.geocities.com/f18m_cpp217828/prog/lua_win32.zip"&gt;&lt;U&gt;&lt;FONT color=#0000ff&gt;[lua bakefile]&lt;/FONT&gt;&lt;/U&gt;&lt;/A&gt; (5.0.2) -&amp;nbsp;创建 LUA&amp;nbsp;工程的makefile和工程文件。 
&lt;LI&gt;&lt;A href="http://www.geocities.com/f18m_cpp217828/prog/tolua_win32.zip"&gt;&lt;U&gt;&lt;FONT color=#0000ff&gt;[tolua bakefile]&lt;/FONT&gt;&lt;/U&gt;&lt;/A&gt; (5.0.2) - 创建 TOLUA&amp;nbsp;工程的makefile和工程文件。 
&lt;LI&gt;&lt;A href="http://luaforge.net/projects/chunkbake/"&gt;&lt;U&gt;&lt;FONT color=#0000ff&gt;[ChunkBake]&lt;/FONT&gt;&lt;/U&gt;&lt;/A&gt; (5.0.2) - a line-oriented assembler for Lua 5 virtual machine instructions 
&lt;LI&gt;&lt;A href="http://luaforge.net/projects/luasrcdiet/"&gt;&lt;U&gt;&lt;FONT color=#0000ff&gt;[LuaSrcDiet]&lt;/FONT&gt;&lt;/U&gt;&lt;/A&gt; (5.0.2) - 通过删除不必要的空白和注释缩减Lua文件的大小。 
&lt;LI&gt;&lt;A href="http://www.keplerproject.org/luaprofiler"&gt;&lt;U&gt;&lt;FONT color=#0000ff&gt;[LuaProfiler]&lt;/FONT&gt;&lt;/U&gt;&lt;/A&gt; (5.0) - 一个用来查找Lua应用瓶颈的工具time profiler 。&lt;/LI&gt;&lt;/UL&gt;
&lt;P&gt;
&lt;DL&gt;
&lt;DT&gt;
&lt;DD&gt;See also &lt;A href="http://lua-users.org/wiki/LuaEditorSupport"&gt;&lt;U&gt;&lt;FONT color=#0000ff&gt;LuaEditorSupport&lt;/FONT&gt;&lt;/U&gt;&lt;/A&gt;. &lt;/DD&gt;&lt;/DL&gt;
&lt;P&gt;
&lt;H2&gt;文档&lt;/H2&gt;
&lt;P&gt;
&lt;UL&gt;
&lt;LI&gt;&lt;A href="http://lua.riscos.org.uk/Guide/"&gt;&lt;U&gt;&lt;FONT color=#0000ff&gt;[介绍性的指导]&lt;/FONT&gt;&lt;/U&gt;&lt;/A&gt; (5.0) - Lua 5.0 的介绍教程- 基于 Joe Taylor的评论. ( Try &lt;A href="http://lua.riscos.org.uk/"&gt;&lt;U&gt;&lt;FONT color=#0000ff&gt;http://lua.riscos.org.uk/&lt;/FONT&gt;&lt;/U&gt;&lt;/A&gt; ) 
&lt;LI&gt;&lt;A href="http://lua-users.org/files/wiki_insecure/users/lcandido/lua5.0man_webbook.zip"&gt;&lt;U&gt;&lt;FONT color=#0000ff&gt;[Lua&amp;nbsp;5手册&amp;nbsp;(webbook)]&lt;/FONT&gt;&lt;/U&gt;&lt;/A&gt; (5.0) -&amp;nbsp; webbook格式的Lua 5.0手册。 
&lt;LI&gt;&lt;A href="http://lua-users.org/wiki/LuaShortReference"&gt;&lt;U&gt;&lt;FONT color=#0000ff&gt;Lua简短参考&lt;/FONT&gt;&lt;/U&gt;&lt;/A&gt; 
&lt;LI&gt;&lt;U&gt;&lt;FONT color=#800080&gt;Lua教程&lt;/FONT&gt;&lt;/U&gt; 
&lt;LI&gt;&lt;A href="http://luaforge.net/docman/?group_id=80"&gt;&lt;U&gt;&lt;FONT color=#0000ff&gt;[Lua 5 快速参考]&lt;/FONT&gt;&lt;/U&gt;&lt;/A&gt; (5.0) - Lua 5.0的小参考手册(PDF)，包含彩色导航栏。&amp;nbsp; 
&lt;LI&gt;&lt;A href="http://luaforge.net/docman/?group_id=83"&gt;&lt;U&gt;&lt;FONT color=#0000ff&gt;[Lua 5 虚拟机指令介绍]&lt;/FONT&gt;&lt;/U&gt;&lt;/A&gt; (5.0) - SXW和PDF格式。 
&lt;LI&gt;&lt;A href="http://lua-users.org/wiki/LuaHelp"&gt;&lt;U&gt;&lt;FONT color=#0000ff&gt;Lua帮助&lt;/FONT&gt;&lt;/U&gt;&lt;/A&gt;, 方便在Lua手册中查找信息，类似Unix的man页面。&lt;/LI&gt;&lt;/UL&gt;
&lt;P&gt;
&lt;P&gt;
&lt;H2&gt;发布版&lt;/H2&gt;
&lt;P&gt;See &lt;A href="http://lua-users.org/wiki/LuaBinaries"&gt;&lt;U&gt;&lt;FONT color=#0000ff&gt;LuaBinaries&lt;/FONT&gt;&lt;/U&gt;&lt;/A&gt; for links to precompiled vanilla Lua 5.0 executables for various platforms. Real binaries (without addons) should move from here to there. 
&lt;P&gt;
&lt;UL&gt;
&lt;LI&gt;&lt;A href="http://luacheia.lua-users.org/"&gt;&lt;U&gt;&lt;FONT color=#0000ff&gt;[LuaCheia]&lt;/FONT&gt;&lt;/U&gt;&lt;/A&gt; (5.0) - Lua 5.0 for GNU/Linux, Mac/OS X, Windows, *BSD, Solaris, etc. Includes many add-on binary modules. 
&lt;LI&gt;&lt;A href="http://luaplus.org/tiki-index.php"&gt;&lt;U&gt;&lt;FONT color=#0000ff&gt;[LuaPlus]&lt;/FONT&gt;&lt;/U&gt;&lt;/A&gt; (5.0) - C++ enhancements and various extensions to core Lua functionality 
&lt;LI&gt;&lt;A href="http://gwpr03.microlink.com.br/~acosta/lua/"&gt;&lt;U&gt;&lt;FONT color=#0000ff&gt;[Linux RPMs]&lt;/FONT&gt;&lt;/U&gt;&lt;/A&gt; (5.0) - i386 binary, source and spec file for Lua 5.0.2 
&lt;LI&gt;&lt;A href="http://rpmfind.net/linux/rpm2html/search.php?query=lua"&gt;&lt;U&gt;&lt;FONT color=#0000ff&gt;[RPMs for Lua]&lt;/FONT&gt;&lt;/U&gt;&lt;/A&gt; (5.0) - from Rpmfind.Net. 
&lt;LI&gt;&lt;A href="http://lsp2html.sourceforge.net/luarpms/"&gt;&lt;U&gt;&lt;FONT color=#0000ff&gt;[RPMs with Lua modules]&lt;/FONT&gt;&lt;/U&gt;&lt;/A&gt; 
&lt;LI&gt;&lt;A href="http://www.freepoc.org/viewapp.php?id=32"&gt;&lt;U&gt;&lt;FONT color=#0000ff&gt;[Lua 5 for EPOC]&lt;/FONT&gt;&lt;/U&gt;&lt;/A&gt; (5.0) - Lua 5.0.1 for Symbian OS v1-5. 
&lt;LI&gt;&lt;A href="http://www.inf.puc-rio.br/~miller/luace"&gt;&lt;U&gt;&lt;FONT color=#0000ff&gt;[LuaCE]&lt;/FONT&gt;&lt;/U&gt;&lt;/A&gt; (5.0) - additional source files for compiling Lua for Windows CE. 
&lt;LI&gt;&lt;A href="http://www.uoam.net/lua.html"&gt;&lt;U&gt;&lt;FONT color=#0000ff&gt;[LuaPPC]&lt;/FONT&gt;&lt;/U&gt;&lt;/A&gt; (5.0) - Stand-alone Lua 5.0 interpreter for the Pocket PC. (Built using LuaCE above.) 
&lt;LI&gt;&lt;A href="http://luaforge.net/projects/luapocket/"&gt;&lt;U&gt;&lt;FONT color=#0000ff&gt;[LuaPocket]&lt;/FONT&gt;&lt;/U&gt;&lt;/A&gt; (5.0) - Stand-alone Lua 5.0 interpreter for the Pocket PC with graphic support. (Built using LuaPPC above.) 
&lt;LI&gt;&lt;A href="http://lua.riscos.org.uk/"&gt;&lt;U&gt;&lt;FONT color=#0000ff&gt;[Lua for RISC OS]&lt;/FONT&gt;&lt;/U&gt;&lt;/A&gt; (5.0) 
&lt;LI&gt;&lt;A href="http://sourceforge.net/projects/luapalmos/"&gt;&lt;U&gt;&lt;FONT color=#0000ff&gt;[Lua for Palm OS]&lt;/FONT&gt;&lt;/U&gt;&lt;/A&gt; (5.0) Port of Lua for Palm (in alpha). 
&lt;LI&gt;&lt;A href="http://lekernel.lya-fr.com/lua.html"&gt;&lt;U&gt;&lt;FONT color=#0000ff&gt;[Lua89]&lt;/FONT&gt;&lt;/U&gt;&lt;/A&gt; (5.0) Experimental port of Lua to the TI89 graphing calculator. &lt;/LI&gt;&lt;/UL&gt;
&lt;P&gt;
&lt;H2&gt;其他的一些Lua实现方式&lt;/H2&gt;
&lt;P&gt;
&lt;UL&gt;
&lt;LI&gt;&lt;A href="http://www.goron.de/~froese/sol/"&gt;&lt;U&gt;&lt;FONT color=#0000ff&gt;[Sol]&lt;/FONT&gt;&lt;/U&gt;&lt;/A&gt; - Lua 的派生物. 
&lt;LI&gt;&lt;A href="http://www.tecgraf.puc-rio.br/~rcerq/luadotnet/"&gt;&lt;U&gt;&lt;FONT color=#0000ff&gt;[Lua.NET]&lt;/FONT&gt;&lt;/U&gt;&lt;/A&gt; .net相关的Lua 
&lt;LI&gt;&lt;A href="http://www.dis.uniroma1.it/pub/demetres/LeonardoPrograms/lua.sit.bin"&gt;&lt;U&gt;&lt;FONT color=#0000ff&gt;[LuaLeo]&lt;/FONT&gt;&lt;/U&gt;&lt;/A&gt; -&amp;nbsp; 根据&lt;A href="http://www.dis.uniroma1.it/~demetres/Leonardo/"&gt;&lt;U&gt;&lt;FONT color=#0000ff&gt;[Leonardo VM]&lt;/FONT&gt;&lt;/U&gt;&lt;/A&gt; 实现的Lua 3.1 
&lt;LI&gt;&lt;A href="http://www.cminusminus.org/code.html#luaml"&gt;&lt;U&gt;&lt;FONT color=#0000ff&gt;[Lua-ML]&lt;/FONT&gt;&lt;/U&gt;&lt;/A&gt; -&amp;nbsp; 由面向对象的Caml实现的 Lua 2.5 
&lt;LI&gt;&lt;A href="http://www.yindo.com/?from=steve"&gt;&lt;U&gt;&lt;FONT color=#0000ff&gt;[Yindo]&lt;/FONT&gt;&lt;/U&gt;&lt;/A&gt; - Lua 的实现，作为OpenGL 浏览器插件(很快过时了) 
&lt;LI&gt;&lt;A href="http://luaforge.net/projects/yueliang/"&gt;&lt;U&gt;&lt;FONT color=#0000ff&gt;[Yueliang]&lt;/FONT&gt;&lt;/U&gt;&lt;/A&gt; (5.0.2) - 使用Lua实现Lua，包括词法解析、语法解析、代码生成和生成二进制chunks.&lt;/LI&gt;&lt;/UL&gt;</description></item><item><title>Lua常用资源连接</title><link>https://blogs.qipai360.cn/post/lua-useful-resources-links/</link><pubDate>Fri, 21 Sep 2007 12:16:00 +0800</pubDate><guid>https://blogs.qipai360.cn/post/lua-useful-resources-links/</guid><description>&lt;UL&gt;
&lt;LI&gt;官方资源&amp;nbsp; 
&lt;UL&gt;
&lt;LI&gt;&lt;A href="http://www.lua.org/"&gt;&lt;U&gt;&lt;FONT color=#800080&gt;[Lua 官方主页]&lt;/FONT&gt;&lt;/U&gt;&lt;/A&gt;&lt;/LI&gt;&lt;/UL&gt;
&lt;LI&gt;Lua社区&amp;nbsp; 
&lt;UL&gt;
&lt;LI&gt;&lt;A href="http://lua-users.org/lists/lua-l/"&gt;&lt;U&gt;&lt;FONT color=#0000ff&gt;[Lua 邮件列表]&lt;/FONT&gt;&lt;/U&gt;&lt;/A&gt; 
&lt;LI&gt;&lt;A href="irc://irc.freenode.net/lua"&gt;&lt;U&gt;&lt;FONT color=#800080&gt;[Lua IRC 聊天频道]&lt;/FONT&gt;&lt;/U&gt;&lt;/A&gt; (#来自irc.freenode.net) 
&lt;LI&gt;&lt;A href="http://mini.net/cgi-bin/lua/"&gt;&lt;U&gt;&lt;FONT color=#0000ff&gt;[Jean-Claude Wippler的wiki]&lt;/FONT&gt;&lt;/U&gt;&lt;/A&gt;. &lt;EM&gt;(不再维护)&lt;/EM&gt;&lt;/LI&gt;&lt;/UL&gt;
&lt;LI&gt;Lua&amp;nbsp;文档 
&lt;UL&gt;
&lt;LI&gt;&lt;EM&gt;&lt;A href="http://www.tecgraf.org/~mark/luaarchitecture.doc"&gt;&lt;U&gt;&lt;FONT color=#0000ff&gt;[Lua架构]&lt;/FONT&gt;&lt;/U&gt;&lt;/A&gt;&lt;/EM&gt; - 描述了Lua的业务驱动方式，目的以及架构解决方案。&lt;/LI&gt;&lt;/UL&gt;
&lt;LI&gt;带有例证的Lua文档 
&lt;UL&gt;
&lt;LI&gt;&lt;EM&gt;&lt;A href="http://www.acmqueue.org/modules.php?name=Content&amp;amp;pa=showpage&amp;amp;pid=112"&gt;&lt;U&gt;&lt;FONT color=#0000ff&gt;[与Will Harvey的谈话记录]&lt;/FONT&gt;&lt;/U&gt;&lt;/A&gt;&lt;/EM&gt;&lt;/LI&gt;&lt;/UL&gt;
&lt;LI&gt;Lua&amp;nbsp;教程 
&lt;UL&gt;
&lt;LI&gt;&lt;A href="http://www.gamedev.net/reference/articles/article1932.asp"&gt;&lt;U&gt;&lt;FONT color=#0000ff&gt;[来自GameDev.net的：An Introduction to Lua]&lt;/FONT&gt;&lt;/U&gt;&lt;/A&gt; 
&lt;LI&gt;&lt;A href="http://davespalace.co.uk/tutorials/lua_extend.html"&gt;&lt;U&gt;&lt;FONT color=#0000ff&gt;[扩展性的Lua]&lt;/FONT&gt;&lt;/U&gt;&lt;/A&gt; 
&lt;LI&gt;&lt;A href="http://davespalace.co.uk/tutorials/lua_embed.html"&gt;&lt;U&gt;&lt;FONT color=#0000ff&gt;[嵌入式的 Lua]&lt;/FONT&gt;&lt;/U&gt;&lt;/A&gt; 
&lt;LI&gt;&lt;A href="http://smorgasbordet.com/phpBB2/viewtopic.php?p=778#778"&gt;&lt;U&gt;&lt;FONT color=#0000ff&gt;[Win32平台下使用Pelles C编译Lua]&lt;/FONT&gt;&lt;/U&gt;&lt;/A&gt; 
&lt;LI&gt;&lt;A href="http://www.blitzwiki.org/index.php/Introduction_to_Lua"&gt;&lt;U&gt;&lt;FONT color=#0000ff&gt;[在BlitzMax中使用 Lua]&lt;/FONT&gt;&lt;/U&gt;&lt;/A&gt;&lt;/LI&gt;&lt;/UL&gt;
&lt;LI&gt;认证考试&amp;nbsp; 
&lt;UL&gt;
&lt;LI&gt;&lt;A href="http://www.high-levelcert.com/"&gt;&lt;U&gt;&lt;FONT color=#0000ff&gt;[Lua高级认证]&lt;/FONT&gt;&lt;/U&gt;&lt;/A&gt; 提供Lua认证考试和相关练习. &lt;/LI&gt;&lt;/UL&gt;
&lt;LI&gt;Benchmarks 
&lt;UL&gt;
&lt;LI&gt;&lt;A href="http://cm.bell-labs.com/cm/cs/who/bwk/interps/pap.html"&gt;&lt;U&gt;&lt;FONT color=#0000ff&gt;[Experiments with Scripting and User-Interface Language]&lt;/FONT&gt;&lt;/U&gt;&lt;/A&gt; is a paper by Kernighan and Van Wyk that benchmarks several scripting languages. An &lt;A href="http://www.inf.puc-rio.br/~roberto/bwk-lua.tar.gz"&gt;&lt;U&gt;&lt;FONT color=#0000ff&gt;[implementation]&lt;/FONT&gt;&lt;/U&gt;&lt;/A&gt; of these benchmarks in Lua is available. 
&lt;LI&gt;Doug Bagley's的书： &lt;A href="http://shootout.alioth.debian.org/"&gt;&lt;U&gt;&lt;FONT color=#0000ff&gt;[Great Computer Language Shootout]&lt;/FONT&gt;&lt;/U&gt;&lt;/A&gt; 的更新版本.还有一个不太新的&lt;A href="http://dada.perl.it/shootout/"&gt;&lt;U&gt;&lt;FONT color=#0000ff&gt;[Windows版本]&lt;/FONT&gt;&lt;/U&gt;&lt;/A&gt; . &lt;/LI&gt;&lt;/UL&gt;
&lt;LI&gt;语言比较&amp;nbsp; 
&lt;UL&gt;
&lt;LI&gt;&lt;A href="http://www.latech.edu/~acm/HelloWorld.shtml"&gt;&lt;U&gt;&lt;FONT color=#0000ff&gt;[Hello World!]&lt;/FONT&gt;&lt;/U&gt;&lt;/A&gt; 
&lt;LI&gt;&lt;A href="http://kevin.alteu.com/code/helloyou/index.html"&gt;&lt;U&gt;&lt;FONT color=#0000ff&gt;[Hello You]&lt;/FONT&gt;&lt;/U&gt;&lt;/A&gt;: &lt;A href="http://kevin.alteu.com/code/helloyou/lua.html"&gt;&lt;U&gt;&lt;FONT color=#0000ff&gt;[Lua entry]&lt;/FONT&gt;&lt;/U&gt;&lt;/A&gt;. 
&lt;LI&gt;&lt;A href="http://www.99-bottles-of-beer.net/"&gt;&lt;U&gt;&lt;FONT color=#0000ff&gt;[99 Bottles of Beer]&lt;/FONT&gt;&lt;/U&gt;&lt;/A&gt;: &lt;A href="http://www.99-bottles-of-beer.net/language-lua-365.html"&gt;&lt;U&gt;&lt;FONT color=#0000ff&gt;[Lua entry]&lt;/FONT&gt;&lt;/U&gt;&lt;/A&gt;. 
&lt;LI&gt;&lt;A href="http://www.miranda.org/~jkominek/rot13/"&gt;&lt;U&gt;&lt;FONT color=#0000ff&gt;[ROT13]&lt;/FONT&gt;&lt;/U&gt;&lt;/A&gt;: &lt;A href="http://www.miranda.org/~jkominek/rot13/lua/"&gt;&lt;U&gt;&lt;FONT color=#0000ff&gt;[Lua entry]&lt;/FONT&gt;&lt;/U&gt;&lt;/A&gt; 
&lt;LI&gt;&lt;A href="http://www.nyx.net/~gthompso/quine.htm"&gt;&lt;U&gt;&lt;FONT color=#0000ff&gt;[The Quine Page]&lt;/FONT&gt;&lt;/U&gt;&lt;/A&gt; 
&lt;LI&gt;&lt;A href="http://www.angelfire.com/tx4/cus/shapes/index.html"&gt;&lt;U&gt;&lt;FONT color=#0000ff&gt;[OO 例子]&lt;/FONT&gt;&lt;/U&gt;&lt;/A&gt; 
&lt;LI&gt;&lt;A href="http://www.kochandreas.com/home/language/lang.htm"&gt;&lt;U&gt;&lt;FONT color=#0000ff&gt;[APLC: Andreas' 实践语言对比]&lt;/FONT&gt;&lt;/U&gt;&lt;/A&gt;. 
&lt;LI&gt;&lt;A href="http://***.sourceforge.net/pixel/language-study/scripting-language/"&gt;&lt;U&gt;&lt;FONT color=#0000ff&gt;[Scriptometer]&lt;/FONT&gt;&lt;/U&gt;&lt;/A&gt; 
&lt;LI&gt;&lt;A href="http://***.sourceforge.net/pixel/language-study/syntax-across-languages.html"&gt;&lt;U&gt;&lt;FONT color=#0000ff&gt;[Syntax accross languages]&lt;/FONT&gt;&lt;/U&gt;&lt;/A&gt; (Big page!) 
&lt;LI&gt;&lt;A href="http://www.ntecs.de/old-hp/uu9r/lang/html/lang.en.html"&gt;&lt;U&gt;&lt;FONT color=#0000ff&gt;[Michael Neumann's关于语言的比较]&lt;/FONT&gt;&lt;/U&gt;&lt;/A&gt; 
&lt;LI&gt;&lt;A href="http://csl.sublevel3.org/lua/"&gt;&lt;U&gt;&lt;FONT color=#0000ff&gt;[与C++一起使用Lua:简短的教程]&lt;/FONT&gt;&lt;/U&gt;&lt;/A&gt; 
&lt;LI&gt;&lt;A href="http://pleac.sourceforge.net/"&gt;&lt;U&gt;&lt;FONT color=#0000ff&gt;[PLEAC - 类似食谱一样的编程语言例子]&lt;/FONT&gt;&lt;/U&gt;&lt;/A&gt;&lt;/LI&gt;&lt;/UL&gt;
&lt;LI&gt;Lua 其他相关站点 
&lt;UL&gt;
&lt;LI&gt;&lt;A href="http://groups.google.com/groups?as_q=Lua&amp;amp;num=20&amp;amp;as_scoring=date&amp;amp;btnG=Google+Search&amp;amp;as_ugroup=comp.*+*game*&amp;amp;as_drrb=quick"&gt;&lt;U&gt;&lt;FONT color=#0000ff&gt;[Lua使用指南]&lt;/FONT&gt;&lt;/U&gt;&lt;/A&gt;,&amp;nbsp;来自 &lt;A href="http://groups.google.com/"&gt;&lt;U&gt;&lt;FONT color=#0000ff&gt;[Google Groups]&lt;/FONT&gt;&lt;/U&gt;&lt;/A&gt;. 
&lt;LI&gt;&lt;A href="http://www.ddj.com/topics/altlang/sites.htm?topic=altlang"&gt;&lt;U&gt;&lt;FONT color=#0000ff&gt;[Dr. Dobb's 的脚本语言列表]&lt;/FONT&gt;&lt;/U&gt;&lt;/A&gt;. 
&lt;LI&gt;&lt;A href="http://www.idiom.com/free-compilers/"&gt;&lt;U&gt;&lt;FONT color=#0000ff&gt;[免费的编译器和解释器分类]&lt;/FONT&gt;&lt;/U&gt;&lt;/A&gt;: &lt;A href="http://www.idiom.com/free-compilers/TOOL/lua-1.html"&gt;&lt;U&gt;&lt;FONT color=#0000ff&gt;[Lua entry]&lt;/FONT&gt;&lt;/U&gt;&lt;/A&gt;. 
&lt;LI&gt;&lt;A href="http://www.erols.com/ziring/dopl.html"&gt;&lt;U&gt;&lt;FONT color=#0000ff&gt;[编程语言字典]&lt;/FONT&gt;&lt;/U&gt;&lt;/A&gt;: &lt;A href="http://cgibin.erols.com/ziring/cgi-bin/cep/cep.pl?_key=Lua"&gt;&lt;U&gt;&lt;FONT color=#0000ff&gt;[Lua entry]&lt;/FONT&gt;&lt;/U&gt;&lt;/A&gt;. 
&lt;LI&gt;&lt;A href="http://sal.kachinatech.com/"&gt;&lt;U&gt;&lt;FONT color=#0000ff&gt;[SAL, Linux上的科学上的应用]&lt;/FONT&gt;&lt;/U&gt;&lt;/A&gt;: &lt;A href="http://sal.kachinatech.com/F/1/LUA.html"&gt;&lt;U&gt;&lt;FONT color=#0000ff&gt;[Lua entry]&lt;/FONT&gt;&lt;/U&gt;&lt;/A&gt; (site no longer exists?). 
&lt;LI&gt;&lt;A href="http://freshmeat.net/"&gt;&lt;U&gt;&lt;FONT color=#0000ff&gt;[Freshmeat]&lt;/FONT&gt;&lt;/U&gt;&lt;/A&gt;: &lt;A href="http://freshmeat.net/projects/lua/"&gt;&lt;U&gt;&lt;FONT color=#0000ff&gt;[Lua entry]&lt;/FONT&gt;&lt;/U&gt;&lt;/A&gt;. 
&lt;LI&gt;&lt;A href="http://www.freebsd.org/"&gt;&lt;U&gt;&lt;FONT color=#0000ff&gt;[FreeBSD]&lt;/FONT&gt;&lt;/U&gt;&lt;/A&gt;: &lt;A href="http://www.freebsd.org/ports/lang.html"&gt;&lt;U&gt;&lt;FONT color=#0000ff&gt;[Lua entry]&lt;/FONT&gt;&lt;/U&gt;&lt;/A&gt;. 
&lt;LI&gt;&lt;A href="http://www.netbsd.org/"&gt;&lt;U&gt;&lt;FONT color=#0000ff&gt;[NetBSD]&lt;/FONT&gt;&lt;/U&gt;&lt;/A&gt;: &lt;A href="ftp://ftp.netbsd.org/pub/NetBSD/packages/pkgsrc/lang/lua/README.html"&gt;&lt;U&gt;&lt;FONT color=#0000ff&gt;[Lua entry]&lt;/FONT&gt;&lt;/U&gt;&lt;/A&gt;. 
&lt;LI&gt;&lt;A href="http://www.mathtools.net/"&gt;&lt;U&gt;&lt;FONT color=#0000ff&gt;[Mathtools.net]&lt;/FONT&gt;&lt;/U&gt;&lt;/A&gt;: &lt;A href="http://www.mathtools.net/C++/Interpreters/Other/"&gt;&lt;U&gt;&lt;FONT color=#0000ff&gt;[Lua entry]&lt;/FONT&gt;&lt;/U&gt;&lt;/A&gt; (404 error). 
&lt;LI&gt;&lt;A href="http://www.wikipedia.com/"&gt;&lt;U&gt;&lt;FONT color=#0000ff&gt;[Wikipedia]&lt;/FONT&gt;&lt;/U&gt;&lt;/A&gt;: &lt;A href="http://wikipedia.org/wiki/Lua_programming_language"&gt;&lt;U&gt;&lt;FONT color=#0000ff&gt;[Lua entry]&lt;/FONT&gt;&lt;/U&gt;&lt;/A&gt;. 
&lt;LI&gt;&lt;A href="http://www.conectiva.com/"&gt;&lt;U&gt;&lt;FONT color=#0000ff&gt;[Conectiva]&lt;/FONT&gt;&lt;/U&gt;&lt;/A&gt;: &lt;A href="http://snapshot.conectiva.com/SRPMS/Interpreters/lua.html"&gt;&lt;U&gt;&lt;FONT color=#0000ff&gt;[Lua entry]&lt;/FONT&gt;&lt;/U&gt;&lt;/A&gt; (404 error). 
&lt;LI&gt;&lt;A href="http://www.hypernews.org/HyperNews/get/computing/lang-list.html"&gt;&lt;U&gt;&lt;FONT color=#0000ff&gt;[Hypernews Computer Language List]&lt;/FONT&gt;&lt;/U&gt;&lt;/A&gt;. 
&lt;LI&gt;&lt;A href="http://wuarchive.wustl.edu/doc/misc/lang-list.txt"&gt;&lt;U&gt;&lt;FONT color=#0000ff&gt;[语言列表- Version 2.4]&lt;/FONT&gt;&lt;/U&gt;&lt;/A&gt; (开始于1995年! 现在404错误,&amp;nbsp;到 &lt;A href="http://wuarchive.wustl.edu/"&gt;&lt;U&gt;&lt;FONT color=#0000ff&gt;[主页]&lt;/FONT&gt;&lt;/U&gt;&lt;/A&gt; 察看原因). 
&lt;LI&gt;&lt;A href="http://cliki.tunes.org/Programming%20Languages"&gt;&lt;U&gt;&lt;FONT color=#0000ff&gt;[现存语言的评论]&lt;/FONT&gt;&lt;/U&gt;&lt;/A&gt;: &lt;A href="http://cliki.tunes.org/LUA"&gt;&lt;U&gt;&lt;FONT color=#0000ff&gt;[Lua entry]&lt;/FONT&gt;&lt;/U&gt;&lt;/A&gt;. 
&lt;LI&gt;&lt;A href="http://dmoz.org/"&gt;&lt;U&gt;&lt;FONT color=#0000ff&gt;[开源的工程目录]&lt;/FONT&gt;&lt;/U&gt;&lt;/A&gt;: &lt;A href="http://dmoz.org/Computers/Programming/Languages/Lua/"&gt;&lt;U&gt;&lt;FONT color=#0000ff&gt;[Lua entry]&lt;/FONT&gt;&lt;/U&gt;&lt;/A&gt;. 
&lt;LI&gt;&lt;A href="http://www.gnu.org/directory/"&gt;&lt;U&gt;&lt;FONT color=#0000ff&gt;[GNU 自由软件目录]&lt;/FONT&gt;&lt;/U&gt;&lt;/A&gt;: &lt;A href="http://www.gnu.org/directory/lua.html"&gt;&lt;U&gt;&lt;FONT color=#0000ff&gt;[Lua entry]&lt;/FONT&gt;&lt;/U&gt;&lt;/A&gt;. 
&lt;LI&gt;&lt;A href="http://www.scriptol.org/choose.php"&gt;&lt;U&gt;&lt;FONT color=#0000ff&gt;[流行的脚本语言]&lt;/FONT&gt;&lt;/U&gt;&lt;/A&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;</description></item><item><title>Lua 5.0 参考手册</title><link>https://blogs.qipai360.cn/post/lua-5.0-reference-manual/</link><pubDate>Tue, 18 Sep 2007 15:55:00 +0800</pubDate><guid>https://blogs.qipai360.cn/post/lua-5.0-reference-manual/</guid><description>&lt;p&gt;作者： Roberto Ierusalimschy, Luiz Henrique de Figueiredo, Waldemar Celes&lt;/p&gt;
&lt;p&gt;&lt;small&gt;&lt;a href="http://www.lua.org/copyright.html" rel="noopener nofollow"&gt;&lt;/a&gt;&lt;span size="1"&gt;Copyright © 2003 Tecgraf, PUC-Rio. All rights reserved.&lt;/span&gt;&lt;/small&gt;&lt;/p&gt;
&lt;p&gt;译者：
&lt;a href="http://wiki.nirvanastudio.org/wiki/ShiningRay" title="ShiningRay" rel="noopener external nofollow noreferrer" target="_blank" class=" exturl"&gt;
 ShiningRay
 
&lt;/a&gt; Nicholas @ 
&lt;a href="http://www.nirvanastudio.org/" title="NirvanaStudio" rel="noopener external nofollow noreferrer" target="_blank" class=" exturl"&gt;
 NirvanaStudio
 
&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;
&lt;a href="http://www.nirvanastudio.org/about/donate/" title="给予支持" rel="noopener external nofollow noreferrer" target="_blank" class=" exturl"&gt;
 给予支持
 
&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id="1---绪论"&gt;1 - 绪论
&lt;a class="header-anchor" href="#1---%e7%bb%aa%e8%ae%ba"&gt;&lt;/a&gt;
&lt;/h2&gt;&lt;p&gt;Lua是一种为支持有数据描述机制的一般过程式编程语言而设计的扩展编程语言。它同样可以对面向对象语言、函数式程序设计（Functional Programming，如Lisp）以及数据驱动编程（data-driven programming）提供很好的支持。它的目标是被用作一种强大的、轻型的配置语言。Lua目前已经被实现为一个扩展库，是用_clean_ C （ANSI C/C++的一个通用子集）编写的。&lt;/p&gt;</description></item><item><title>如何在C++中集成Lua脚本(LuaPlus篇)</title><link>https://blogs.qipai360.cn/post/integrate-lua-in-cpp-luaplus/</link><pubDate>Tue, 18 Sep 2007 15:47:00 +0800</pubDate><guid>https://blogs.qipai360.cn/post/integrate-lua-in-cpp-luaplus/</guid><description>&lt;p&gt;去年我作了一个Lua脚本的C++包装，有许多朋友感兴趣，并尝试使用，我感到受宠若惊。事实上，我作的包装，学习的目的比较强，它还是有许多缺陷的。为了让朋友们少走弯路，我推荐使用LuaPlus作为C++的包装。&lt;/p&gt;</description></item><item><title>如何在C++中集成LUA脚本(LuaWrapper For C++篇)</title><link>https://blogs.qipai360.cn/post/integrate-lua-in-cpp-luawrapper/</link><pubDate>Tue, 18 Sep 2007 15:11:00 +0800</pubDate><guid>https://blogs.qipai360.cn/post/integrate-lua-in-cpp-luawrapper/</guid><description>&lt;P&gt;为什么要用Lua作脚本？&lt;BR&gt;　　使用Lua作脚本，主要是因为它小巧玲珑（体积小，运行快），而且它的语法又比较简单明了。不过，使用LuaAPI将Lua引擎集成到程序中，确实有一些不方便——用落木随风网友的话来说，就是"就象用汇编"。当然，现在你不用再这么辛苦了，因为你可以使用LuaWrapper For C++。使用这个工具，在C++中集成Lua脚本就是轻而易举的事。你原有的C++函数和类，几乎不需要任何改变，就可以与Lua脚本共享。&lt;BR&gt;　　我们接下来，用实例来说明，如何用LuaWrapper来集成Lua脚本到你的程序中去。&lt;BR&gt;&lt;BR&gt;1.&amp;nbsp;&amp;nbsp;创建Lua引擎&lt;BR&gt;　　LuaWrap lua; 或者 LuaWrap* lua = new LuaWrap;&lt;BR&gt;　　创建一个LuaWrap对象，就是创建一个Lua脚本引擎。并且根据Lua的特性，你可以创建任意多个Lua引擎，甚至可以分布在不同的线程当中。&lt;BR&gt;&lt;BR&gt;2.&amp;nbsp;&amp;nbsp;装载并执行脚本程序&lt;BR&gt;　　你可以从缓冲区中装载Lua脚本：&lt;BR&gt;　　lua.LoadString(&lt;BR&gt;　　　　"print('Hello World')"&lt;BR&gt;　　);&lt;BR&gt;　　当然，你也可以从文件中装入，并执行Lua脚本：&lt;BR&gt;　　Lua.LoadFile("./test.lua");&lt;BR&gt;　　Lua的脚本，可以是源代码，也可以经过编译后的中间代码。也许你对编译后的中间代码更感兴趣——如果你不希望让源代码赤裸裸的袒露在大家的眼前。&lt;BR&gt;&lt;BR&gt;3.&amp;nbsp;&amp;nbsp;获取和设置Lua变量&lt;BR&gt;　　能够获取和设置脚本变量的内容，是一个最基本的功能。你可以使用GetGlobal和SetGlobal函数来做到这一点：&lt;BR&gt;　　(1)&amp;nbsp;&amp;nbsp;获取变量：&lt;BR&gt;　　　　int a = lua.GetGlobal&amp;lt;int&amp;gt;("a");&lt;BR&gt;　　　　LuaTable table = lua.GetGlobal&amp;lt;LuaTable&amp;gt;("t");&lt;BR&gt;　　　　这里，&amp;lt;&amp;gt; 里头的类型，就是想要的变量的类型。&lt;BR&gt;　　(2)&amp;nbsp;&amp;nbsp;设置变量：&lt;BR&gt;　　　　lua.SetGlobal("a", a); &lt;BR&gt;　　　　lua.SetGlobal("t", table);&lt;BR&gt;&lt;BR&gt;4.&amp;nbsp;&amp;nbsp;调用Lua函数&lt;BR&gt;　　使用Call函数，就可以很简单的从你的程序中调用Lua函数：&lt;BR&gt;　　lua.Call&amp;lt;void&amp;gt;("print", "Hello World");&lt;BR&gt;　　int sum = lua.Call&amp;lt;int&amp;gt;("add", 2, 3);&lt;BR&gt;　　这里，&amp;lt;&amp;gt; 里头的类型是返回值的类型。&lt;BR&gt;&lt;BR&gt;5.&amp;nbsp;&amp;nbsp;如何让Lua也能调用C++的函数&lt;BR&gt;　　精采的地方来了。假如有下面这样的一个函数：&lt;BR&gt;　　int add(int a, int b)&lt;BR&gt;　　{&lt;BR&gt;　　　　return a + b;&lt;BR&gt;　　}&lt;BR&gt;　　如果想让它能够让Lua使用，只需将它注册到Lua引擎当中就可以了：&lt;BR&gt;　　lua.RegisterFunc("add", int(int,int), add);&lt;BR&gt;　　这样，Lua中就可以用直接使用了：&lt;BR&gt;　　（Lua脚本）sum = add(1, 3) &lt;BR&gt;&lt;BR&gt;　　(*) RegisterFunc的功能，就是让你把C++的函数注册到Lua中，供Lua脚本使用。&lt;BR&gt;　　　　第一个参数，是想要在Lua中用的函数名。&lt;BR&gt;　　　　第二个参数，是C++中函数的原型； C++允许函数重载的，你可以使用函数原型，来选择需要注册到Lua引擎中的那个函数。&lt;BR&gt;　　　　第三个参数，就是C++中函数的指针了。&lt;BR&gt;&lt;BR&gt;6.&amp;nbsp;&amp;nbsp;如何能让C++的类在Lua中使用&lt;BR&gt;　　我们先看看下面这个C++类：&lt;BR&gt;class MyArray&lt;BR&gt;{&lt;BR&gt;&amp;nbsp;&amp;nbsp;std::vector&amp;lt;double&amp;gt; array;&lt;BR&gt;public:&lt;BR&gt;&amp;nbsp;&amp;nbsp;void setvalue(int index, double value);&lt;BR&gt;&amp;nbsp;&amp;nbsp;double getvalue(int index);&lt;BR&gt;&amp;nbsp;&amp;nbsp;int size();&lt;BR&gt;&amp;nbsp;&amp;nbsp;const char* ToString();&lt;BR&gt;};&lt;BR&gt;&lt;BR&gt;　　你准备要让Lua能够自由访问并操作这个类。很简单，你只需增加几个宏定义就可以了：&lt;BR&gt;&lt;BR&gt;class MyArray&lt;BR&gt;{&lt;BR&gt;&amp;nbsp;&amp;nbsp;std::vector&amp;lt;double&amp;gt; array;&lt;BR&gt;public:&lt;BR&gt;&amp;nbsp;&amp;nbsp;void setvalue(int index, double value);&lt;BR&gt;&amp;nbsp;&amp;nbsp;double getvalue(int index);&lt;BR&gt;&amp;nbsp;&amp;nbsp;int size();&lt;BR&gt;&amp;nbsp;&amp;nbsp;const char* ToString();&lt;BR&gt;&amp;nbsp;&amp;nbsp;// 将一个 class 作为一个 Lua 对象是很容易的，只需要增加以下宏定义。&lt;BR&gt;&amp;nbsp;&amp;nbsp;DEFINE_TYPENAME("My.array");&lt;BR&gt;&amp;nbsp;&amp;nbsp;BEGIN_REGLUALIB("array")&lt;BR&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;LUALIB_ITEM_create("new", MyArray )&amp;nbsp;&amp;nbsp;// 创建MyArray (注：由于发表的原因，create应为全部大写)&lt;BR&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;LUALIB_ITEM_DESTROY("del", MyArray )&amp;nbsp;&amp;nbsp;// 消除MyArray。&lt;BR&gt;&amp;nbsp;&amp;nbsp;END_REGLUALIB()&lt;BR&gt;&amp;nbsp;&amp;nbsp;BEGIN_REGLUALIB_MEMBER()&lt;BR&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;LUALIB_ITEM_FUNC("size", int (MyArray*), &amp;amp;MyArray::size)&lt;BR&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;LUALIB_ITEM_FUNC("__getindex", double(MyArray*, int), &amp;amp;MyArray::getvalue)&amp;nbsp;&amp;nbsp;&lt;BR&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;LUALIB_ITEM_FUNC("__newindex", void (MyArray*, int, double), &amp;amp;MyArray::setvalue)&lt;BR&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;LUALIB_ITEM_FUNC("__tostring", const char* (MyArray*), &amp;amp;MyArray::ToString)&lt;BR&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;LUALIB_ITEM_DESTROY("__gc", MyArray ) &amp;nbsp;&amp;nbsp;// 垃圾收集时消除对象用。&lt;BR&gt;&amp;nbsp;&amp;nbsp;END_REGLUALIB_MEMBER()&lt;BR&gt;};&lt;BR&gt;&lt;BR&gt;　　只要有了这些宏定义，这个类就是可以在Lua中使用的类了，我们就可以在Lua中注册这个类了：&lt;BR&gt;　　lua.Register&amp;lt;MyArray&amp;gt;()&lt;BR&gt;&lt;BR&gt;　　这样注册以后，我们在Lua中就可以使用这个类了：&lt;BR&gt;　　a = array.new()&amp;nbsp;&amp;nbsp;-- 创建对象，相当于 a = new Myarray&lt;BR&gt;　　a[1] = 10&amp;nbsp;&amp;nbsp;-- 调用__newindex，也就是C++中的 a-&amp;gt;setvalue(1, 10)&lt;BR&gt;　　a[2] = 20&amp;nbsp;&amp;nbsp;-- 调用__newindex，也就是C++中的 a-&amp;gt;setvalue(2, 20)&lt;BR&gt;　　print(&lt;BR&gt;　　　　a,&amp;nbsp;&amp;nbsp;-- 调用 __tostring，也就是C++中的 a-&amp;gt;ToString()&lt;BR&gt;　　　　a:size(), -- 相当于C++中的 a-&amp;gt;size()&lt;BR&gt;　　　　a[1], -- 调用__getindex，也就是C++中的a-&amp;gt;getvalue(1)&lt;BR&gt;　　　　a[2]) --调用__getindex，也就是C++中的a-&amp;gt;getvalue(2)&lt;BR&gt;　　array.del(a)&amp;nbsp;&amp;nbsp;-- 清除对象，相当于 delete a&lt;BR&gt;　　a = nil&amp;nbsp;&amp;nbsp;-- 清空 a，很象C++中的 a = NULL&lt;BR&gt;&lt;BR&gt;　　当然，你也可以不用del这个对象，而是等待Lua帮你自动进行垃圾回收。在Lua进行垃圾回收时，它会自动调用这个对象的 __gc ，相当于 delete。&lt;BR&gt;&lt;BR&gt;　　那么，在C++中要创建MyArray对象，并且传递给Lua全局变量怎么办？就象前面讲过的一样，使用SetGlobal：&lt;BR&gt;　　MyArray* a = new MyArray; &lt;BR&gt;　　lua.SetGlobal("a", a);&lt;BR&gt;　　要获取该对象，同样的，应该使用GetGlobal：&lt;BR&gt;　　MyArray* a = lua.GetGlobal&amp;lt;MyArray&amp;gt;("a");&lt;BR&gt;　　&lt;BR&gt;　　对于传递给Lua的对象，就让Lua来管理该对象的生存周期好了。如果你非要删除它的话，你可以使用DelGlobalObject：&lt;BR&gt;　　lua.DelGlobalObject&amp;lt;MyArray&amp;gt;("a");&lt;BR&gt;　　不过这么做的话，你应当明白你在做什么，因为在Lua的脚本中，可能已经在多处引用了这个对象了。删除了其中一个，将导致其它引用对象失效，从而可能引致系统崩溃。&lt;BR&gt;&lt;BR&gt;　　(1)&amp;nbsp;&amp;nbsp;DEFINE_TYPENAME("My.array");&lt;BR&gt;　　　　定义类型的名称。在Lua中，这个类型名称是唯一用来识别C++类型的，你必须为不同的对象给予不同的名称。&lt;BR&gt;&lt;BR&gt;　　(2)&amp;nbsp;&amp;nbsp;BEGIN_REGLUALIB("array") … END_REGLUALIB()&lt;BR&gt;　　　　你可以为一个对象定义一个程序库，"array"就是程序库的名字。在程序库中定义的函数是全局函数，在Lua中，使用该函数，需要在函数前加上库的名字，如：array.new（）。通常，程序库会包含创建对象的方法。如：&lt;BR&gt;　　　　LUALIB_ITEM_create("new", MyArray )&amp;nbsp;&amp;nbsp;// 创建MyArray (注：由于发表的原因，create应为全部大写)&lt;BR&gt;　　　　这样子，你才能在Lua中创建MyArray：&lt;BR&gt;　　　　a = array.new()&lt;BR&gt;　　&lt;BR&gt;　　　　你也可以选择增加一个删除对象操作：&lt;BR&gt;　　　　LUALIB_ITEM_DESTROY("del", MyArray ) &amp;nbsp;&amp;nbsp;// 删除MyArray&lt;BR&gt;　　　　这样，你就可以直接删除一个对象了：&lt;BR&gt;　　　　array.del(a)&lt;BR&gt;&lt;BR&gt;　　(3)&amp;nbsp;&amp;nbsp;BEGIN_REGLUALIB_MEMBER() …END_REGLUALIB_MEMBER()&lt;BR&gt;　　　　在此处，你可以定义对象的成员函数，也可以重载对象的操作符——是的，就象C++的operator重载。例如：&lt;BR&gt;　　　　LUALIB_ITEM_FUNC("__newindex", void (MyArray*, int, double), &amp;amp;MyArray::setvalue)&lt;BR&gt;　　　　就是重载 operator[] 操作符。Lua中可重载的操作符还有许多，如：&lt;BR&gt;&lt;BR&gt;　　　　__getindex：操作符[]，支持读取访问，如 v = a[10]&lt;BR&gt;　　　　__newindex：操作符[]，支持赋值访问，如 a[10] = 1.22&lt;BR&gt;　　　　__tostring：将变量转换成字串__add：等同于operator +&lt;BR&gt;　　　　__add：操作符 ＋&lt;BR&gt;　　　　__sub：操作符 –&lt;BR&gt;　　　　__mul：操作符 ×&lt;BR&gt;　　　　__div：操作符 ÷&lt;BR&gt;　　　　__pow：操作符 ^ (乘方)&lt;BR&gt;　　　　__unm：一元操作符 –&lt;BR&gt;　　　　__concat：操作符 .. (字符串连接)&lt;BR&gt;　　　　__eq：操作符 == (a ~= b等价于 not a == b)&lt;BR&gt;　　　　__lt：操作符 &amp;lt; (a &amp;gt; b 等价于 b &amp;lt; a)&lt;BR&gt;　　　　__le：操作符 &amp;lt;= (a &amp;gt;= b 等价于 b &amp;lt;= a，要注意的是，如果没有定义"__le"，则Lua将会尝试将a&amp;lt;=b 转换成 not (b &amp;lt; a) )&lt;BR&gt;&lt;BR&gt;　　　　__gc：在垃圾回收时调用此函数，相当于C++的析构函数。强烈建议定义此操作符，以免造成内存泄漏等情况。比如：&lt;BR&gt;　　　　LUALIB_ITEM_DESTROY("__gc", MyArray ) &amp;nbsp;&amp;nbsp;// 垃圾收集时消除对象用。&lt;BR&gt;&lt;BR&gt;　　　　(注) 这里要说明一下，在lua中，访问索引操作符是__index，不是__getindex，在luaWrapper库中，为了方便使用，将其映射为__getindex，同时，对__index的定义将会被忽略。&lt;BR&gt;&lt;BR&gt;　　　　就这么简单。假如你已经有现成的类，而你没有修改该类的权力，如何将其加入到Lua中呢？答案就是，继承它，将把派生类加入到Lua中。&lt;BR&gt;&lt;BR&gt;结束语&lt;BR&gt;　　LuaWrapper 需要用到boost库的支持：boost/type_traits.hpp, boost/function.hpp, boost/bind.hpp，它使用了C++的模板部份特化，因此，C++编译器如果不支持此特性，将无法编译。目前支持此特性的编译器已经有很多。在VisualStudo产品系列中，只有VC7.1能支持此特性，因此，您如果正在使用VisualStudio，请确认你用的是VisualStudio2003。&lt;BR&gt;　　如果你觉得 LuaWrapper For C++ 能够帮助你，我会感觉很荣幸。我很愿意将这个程序库分享给大家。顺便一提的是，如果你在使用过程中发现BUG，或是有好的建议，希望您能与我联系。你在使用过程中，请不要删除文件中的署名信息；如果你修改了程序库，请您在修改的文件中加入您的修改说明。当然，我会非常欢迎您能将修改后的程序回馈给我。我会继续优化并完善它。&lt;BR&gt;&lt;BR&gt;=============================================================&lt;BR&gt;&lt;BR&gt;&lt;A href="http://www.d2-life.com/lbs/attachments/month_200407/22_1xp4LuaWrapper.zip"&gt;&lt;IMG src="http://www.d2-life.com/lbs/images/icon_save.gif" align=absMiddle border=0&gt;&lt;B&gt;File:&lt;/B&gt; Click Here Download: LuaWrapper For C++&lt;/A&gt;&lt;BR&gt;&lt;A href="http://www.d2-life.com/lbs/attachments/month_200407/22_85waTestLua.zip"&gt;&lt;IMG src="http://www.d2-life.com/lbs/images/icon_save.gif" align=absMiddle border=0&gt;&lt;B&gt;File:&lt;/B&gt; Click Here Download: LuaWrapper test program&lt;/A&gt;&lt;BR&gt;&lt;BR&gt;=============================================================&lt;/P&gt;</description></item></channel></rss>
<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>DoNet on Rise的自留地</title><link>https://blogs.qipai360.cn/categories/donet/</link><description>Recent content in DoNet on Rise的自留地</description><generator>Hugo</generator><language>zh-CN</language><lastBuildDate>Wed, 26 Sep 2007 11:59:00 +0800</lastBuildDate><atom:link href="https://blogs.qipai360.cn/categories/donet/rss.xml" rel="self" type="application/rss+xml"/><item><title>在服务中创建用户进程的方法（C#版）</title><link>https://blogs.qipai360.cn/post/method-to-create-user-process-in-service-csharp/</link><pubDate>Wed, 26 Sep 2007 11:59:00 +0800</pubDate><guid>https://blogs.qipai360.cn/post/method-to-create-user-process-in-service-csharp/</guid><description>&lt;p&gt;Windows NT/2000提供了一个函数CreateProcessAsUser，它的功能类似于CreateProcess函数，所不同的是CreateProcessAsUser创建的新进程能以用户（任何用户）的安全上下文方式运行。&lt;/p&gt;</description></item><item><title>C# 关闭显示器的函数</title><link>https://blogs.qipai360.cn/post/csharp-monitor-power-off-function/</link><pubDate>Mon, 04 Jun 2007 14:49:00 +0800</pubDate><guid>https://blogs.qipai360.cn/post/csharp-monitor-power-off-function/</guid><description>&lt;p&gt;最近在学C#，写个保护眼睛的程序（就是过一段时间关下显示器，锁下屏幕之类的）做为练习。以下是关闭显示器的代码，网上好像还没有，在这贴上来，希望对大家有帮助。&lt;/p&gt;</description></item><item><title>多线程 C#解决方案小结</title><link>https://blogs.qipai360.cn/post/multi-threading-c-sharp/</link><pubDate>Thu, 31 May 2007 08:56:00 +0800</pubDate><guid>https://blogs.qipai360.cn/post/multi-threading-c-sharp/</guid><description>&lt;P&gt; 与多线程相关的两个常见的需要解决的问题是：临界资源保护和线程间的同步依赖，每一种语言都提供了自己的一套设施（有的语言可能需要借助OS的API）来解决这两个问题，C#提供了更方便灵活的解决方案，首先C#可以允许我们在不同的级别上加锁，也就是说我们可以控制加锁的粒度。其次，C#提供了一套内置的线程安全的容器，方便我们的使用。&lt;/P&gt;
&lt;P&gt;一.不同级别（Level）上的同步：
1.object level 同步
对应的class必须从ContextBoundObject继承(同步上下文context，使所有的方法调用能被截获)，并且在
class上运用SynchronizationAttribute 。&lt;/P&gt;
&lt;P&gt;2.Method level 同步
System.Runtime.CompilerService空间包含的一些属性将影响CLR在运行期间的行为。特性MethodImplAttribute可以用于需要进行同步控制的方法上。&lt;/P&gt;
&lt;P&gt;3.code segment level 同步
(1)Monitor类(主要是静态方法)
Monitor.Enter(obj)//获得加在对象obj上的锁
...
Monitor.Exit(obj)//释放锁
//上面两句之间的代码相当于lock(obj){...}&lt;/P&gt;
&lt;P&gt;Monitor.TryEnter(obj)//该方法立即返回，如果返回值为false，则接下来不需要Monitor.Exit(obj)。&lt;/P&gt;
&lt;P&gt;//以下几个方法用于线程间的交互 ＝＝》 解决同步依赖
Monitor.Wait(obj)//等待脉冲消息。释放对象上的锁并阻塞当前线程，以后只有其它线程调用Pulse或PulseAll时才会给它再次获得锁的机会
Monitor.Pulse(obj)//发射脉冲消息( 只有得到锁后才能发射，而且发射不会自动释放锁)
Monitor.PulseAll(obj)&lt;/P&gt;
&lt;P&gt;注意：
(1)Monitor 锁定对象，只能在Enter()和Exit()之间的代码块中调用Wait和Pulse &lt;/P&gt;
&lt;P&gt;(2)不能在一个线程中获得锁，而在另一个线程中释放锁。这样会产生锁丢失。 获得锁和释放锁应该在同一个线程中完成。&lt;/P&gt;
&lt;P&gt;(3)lock语句
lock(obj)
{
 需要进行同步的代码
}&lt;/P&gt;
&lt;P&gt;(4)ReaderWriterLock类
 实现单写多读程序的锁。
 AcquireReaderLock()//当没有写程序线程占用锁时，就可获得锁
 AcquireWriterLock()//当没有任何读写程序线程占用锁时，才可获得锁
 ReleaseReaderLock()
 ReleaseWriterLock()
&lt;/P&gt;
&lt;P&gt;(5)ManualResetEvent
Set()方法将状态设置为有信号
Reset()将其设置为无信号
WaitOne()将阻塞到其有信号为止，若调用WaitOne的时刻就是有信号的，将不会阻塞&lt;/P&gt;
&lt;P&gt;(6)AutoResetEvent
与ManualResetEvent的区别是，AutoResetEvent.WaitOne()会自动改变事件对象的状态，即AutoResetEvent.WaitOne()每执行一次，事件的状态就改变一次。有信号--&amp;gt;无信号；无信号--&amp;gt;有信号&lt;/P&gt;
&lt;P&gt;说明：
(1)无论是Monitor还是lock、ReaderWriterLock都只对引用类型的对象有效，因为引用类型的对象有一个隐藏的sync#字段，该字段的作用就是作为加锁的标记。
(2)上述的各种设施中，只有Monitor 和ManualResetEvent/AutoResetEvent 能解决线程间的同步依赖问题，而其它的设施主要用于解决临界资源共享。&lt;/P&gt;
&lt;P&gt;4.member level同步
(1)Interlocked类(主要是静态方法)
 同步一个由许多线程共享的变量。
Decrement(ref int);//使变量减1
Increment(ref int);//使变量加1
//以上两个方法仅针对类int变量
Exchange(ref object, object);&lt;/P&gt;
&lt;P&gt;(2)ThreadStaticAttribute
 该特性用于修饰静态变量，被该特性修饰的静态变量在每个线程中都有自己的副本。&lt;/P&gt;
&lt;P&gt;二.创建线程安全的对象
Hashtable h = Hashtable.Synchronized(new Hashtable()) ;
ArrayList等容器也提供类似操作。&lt;/P&gt;
&lt;P&gt; &lt;/P&gt;</description></item><item><title>C#学习笔记(C#与C++的差异)001</title><link>https://blogs.qipai360.cn/post/csharp-notes-csharp-vs-cpp-001/</link><pubDate>Sun, 27 May 2007 18:44:00 +0800</pubDate><guid>https://blogs.qipai360.cn/post/csharp-notes-csharp-vs-cpp-001/</guid><description>&lt;P class=MsoNormal style="MARGIN: 0cm 0cm 0pt"&gt;&lt;SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 微软雅黑"&gt;由于本人有很好的&lt;SPAN lang=EN-US&gt;C++&lt;/SPAN&gt;基础&lt;SPAN lang=EN-US&gt;,&lt;/SPAN&gt;所以想从&lt;SPAN lang=EN-US&gt;C++&lt;/SPAN&gt;直接转到&lt;SPAN lang=EN-US&gt;C#.&lt;?xml:namespace prefix = o ns = "urn:schemas-microsoft-com:office:office" /&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style="MARGIN: 0cm 0cm 0pt"&gt;&lt;SPAN lang=EN-US style="FONT-SIZE: 9pt; FONT-FAMILY: 微软雅黑"&gt;&lt;o:p&gt;&amp;nbsp;&lt;/o:p&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style="MARGIN: 0cm 0cm 0pt 18pt; TEXT-INDENT: -18pt; mso-list: l2 level1 lfo1; tab-stops: list 18.0pt"&gt;&lt;SPAN lang=EN-US style="FONT-SIZE: 9pt; FONT-FAMILY: 微软雅黑; mso-bidi-font-family: 微软雅黑"&gt;&lt;SPAN style="mso-list: Ignore"&gt;1.&lt;SPAN style="FONT: 7pt 'Times New Roman'"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 微软雅黑"&gt;布尔值：在&lt;SPAN lang=EN-US&gt;C++&lt;/SPAN&gt;中，&lt;SPAN lang=EN-US&gt;bool&lt;/SPAN&gt;类型实质上是一个整数。在&lt;SPAN lang=EN-US&gt;C#&lt;/SPAN&gt;中，不存在&lt;SPAN lang=EN-US&gt;bool&lt;/SPAN&gt;类型与其他类型之间的相互转换。&lt;SPAN lang=EN-US&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style="MARGIN: 0cm 0cm 0pt; TEXT-INDENT: 18pt"&gt;&lt;SPAN lang=EN-US style="FONT-SIZE: 9pt; FONT-FAMILY: 微软雅黑"&gt;bool &lt;/SPAN&gt;&lt;SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 微软雅黑"&gt;关键字是&lt;SPAN lang=EN-US&gt;System.Boolean&lt;/SPAN&gt;的别名&lt;SPAN lang=EN-US&gt;.&lt;/SPAN&gt;它用于声明变量来存储布尔值&lt;SPAN lang=EN-US&gt;true&lt;/SPAN&gt;和&lt;SPAN lang=EN-US&gt;false.&lt;o:p&gt;&lt;/o:p&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style="MARGIN: 0cm 0cm 0pt 18pt"&gt;&lt;SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 微软雅黑"&gt;可将布尔值赋给&lt;SPAN lang=EN-US&gt;bool&lt;/SPAN&gt;变量&lt;SPAN lang=EN-US&gt;.&lt;/SPAN&gt;也可以将计算为&lt;SPAN lang=EN-US&gt;bool&lt;/SPAN&gt;类型的表达式赋给&lt;SPAN lang=EN-US&gt;bool&lt;/SPAN&gt;变量&lt;SPAN lang=EN-US&gt;.&lt;o:p&gt;&lt;/o:p&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style="MARGIN: 0cm 0cm 0pt 18pt"&gt;&lt;SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 微软雅黑"&gt;在&lt;SPAN lang=EN-US&gt;C++&lt;/SPAN&gt;中&lt;SPAN lang=EN-US&gt;,bool&lt;/SPAN&gt;类型的值可转换为&lt;SPAN lang=EN-US&gt;int&lt;/SPAN&gt;类型的值&lt;SPAN lang=EN-US&gt;;&lt;/SPAN&gt;也就是说&lt;SPAN lang=EN-US&gt;,false&lt;/SPAN&gt;等效于零值&lt;SPAN lang=EN-US&gt;,&lt;/SPAN&gt;而&lt;SPAN lang=EN-US&gt;true&lt;/SPAN&gt;等效于非零值&lt;SPAN lang=EN-US&gt;.&lt;/SPAN&gt;在&lt;SPAN lang=EN-US&gt;C#&lt;/SPAN&gt;中&lt;SPAN lang=EN-US&gt;,&lt;/SPAN&gt;不存在&lt;SPAN lang=EN-US&gt;bool&lt;/SPAN&gt;类型与其它类型之间的相互转换&lt;SPAN lang=EN-US&gt;.&lt;/SPAN&gt;例如&lt;SPAN lang=EN-US&gt;,&lt;/SPAN&gt;下列&lt;SPAN lang=EN-US&gt;if&lt;/SPAN&gt;语句在&lt;SPAN lang=EN-US&gt;C#&lt;/SPAN&gt;中是非法的&lt;SPAN lang=EN-US&gt;,&lt;/SPAN&gt;而在&lt;SPAN lang=EN-US&gt;C++&lt;/SPAN&gt;中则是合法的：&lt;SPAN lang=EN-US&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style="MARGIN: 0cm 0cm 0pt 18pt"&gt;&lt;SPAN lang=EN-US style="FONT-SIZE: 9pt; BACKGROUND: silver; FONT-FAMILY: 微软雅黑; mso-highlight: silver"&gt;int x = 123; &lt;o:p&gt;&lt;/o:p&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style="MARGIN: 0cm 0cm 0pt 18pt"&gt;&lt;SPAN lang=EN-US style="FONT-SIZE: 9pt; BACKGROUND: silver; FONT-FAMILY: 微软雅黑; mso-highlight: silver"&gt;if (x) // &lt;/SPAN&gt;&lt;SPAN style="FONT-SIZE: 9pt; BACKGROUND: silver; FONT-FAMILY: 微软雅黑; mso-highlight: silver"&gt;在&lt;SPAN lang=EN-US&gt;C# &lt;/SPAN&gt;是错误的&lt;SPAN lang=EN-US&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style="MARGIN: 0cm 0cm 0pt 18pt"&gt;&lt;SPAN lang=EN-US style="FONT-SIZE: 9pt; BACKGROUND: silver; FONT-FAMILY: 微软雅黑; mso-highlight: silver"&gt;{ printf("The value of x is nonzero."); }&lt;/SPAN&gt;&lt;SPAN lang=EN-US style="FONT-SIZE: 9pt; FONT-FAMILY: 微软雅黑"&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style="MARGIN: 0cm 0cm 0pt 18pt"&gt;&lt;SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 微软雅黑"&gt;若要测试&lt;SPAN lang=EN-US&gt;int&lt;/SPAN&gt;类型的变量，必须将该变量与一个值（比如零）进行显式比较，如下所示：&lt;SPAN lang=EN-US&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style="MARGIN: 0cm 0cm 0pt 18pt"&gt;&lt;SPAN lang=EN-US style="FONT-SIZE: 9pt; BACKGROUND: silver; FONT-FAMILY: 微软雅黑; mso-highlight: silver"&gt;int x = 123;&lt;o:p&gt;&lt;/o:p&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style="MARGIN: 0cm 0cm 0pt 18pt"&gt;&lt;SPAN lang=EN-US style="FONT-SIZE: 9pt; BACKGROUND: silver; FONT-FAMILY: 微软雅黑; mso-highlight: silver"&gt;if (x != 0) // &lt;/SPAN&gt;&lt;SPAN style="FONT-SIZE: 9pt; BACKGROUND: silver; FONT-FAMILY: 微软雅黑; mso-highlight: silver"&gt;在&lt;SPAN lang=EN-US&gt;C# &lt;/SPAN&gt;中容许&lt;SPAN lang=EN-US&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style="MARGIN: 0cm 0cm 0pt 18pt"&gt;&lt;SPAN lang=EN-US style="FONT-SIZE: 9pt; BACKGROUND: silver; FONT-FAMILY: 微软雅黑; mso-highlight: silver"&gt;{ printf(“The value of x is nonzero.”); }&lt;/SPAN&gt;&lt;SPAN lang=EN-US style="FONT-SIZE: 9pt; FONT-FAMILY: 微软雅黑"&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style="MARGIN: 0cm 0cm 0pt 18pt; TEXT-INDENT: -18pt; mso-list: l2 level1 lfo1; tab-stops: list 18.0pt"&gt;&lt;SPAN lang=EN-US style="FONT-SIZE: 9pt; FONT-FAMILY: 微软雅黑; mso-bidi-font-family: 微软雅黑"&gt;&lt;SPAN style="mso-list: Ignore"&gt;2.&lt;SPAN style="FONT: 7pt 'Times New Roman'"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN lang=EN-US style="FONT-SIZE: 9pt; FONT-FAMILY: 微软雅黑"&gt;long&lt;/SPAN&gt;&lt;SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 微软雅黑"&gt;类型：&lt;SPAN lang=EN-US&gt;long&lt;/SPAN&gt;类型在&lt;SPAN lang=EN-US&gt;C#&lt;/SPAN&gt;中为&lt;SPAN lang=EN-US&gt;64&lt;/SPAN&gt;位，而在&lt;SPAN lang=EN-US&gt;C++&lt;/SPAN&gt;中为&lt;SPAN lang=EN-US&gt;32&lt;/SPAN&gt;位。&lt;SPAN lang=EN-US&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style="MARGIN: 0cm 0cm 0pt 18pt"&gt;&lt;SPAN lang=EN-US style="FONT-SIZE: 9pt; FONT-FAMILY: 微软雅黑"&gt;long&lt;/SPAN&gt;&lt;SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 微软雅黑"&gt;关键字表示一种整形，该类型根据下表显示的大小和范围存储值。&lt;SPAN lang=EN-US&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style="MARGIN: 0cm 0cm 0pt 18pt"&gt;&lt;SPAN lang=EN-US style="FONT-SIZE: 9pt; FONT-FAMILY: 微软雅黑"&gt;long&lt;/SPAN&gt;&lt;SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 微软雅黑"&gt;取值范围&lt;SPAN lang=EN-US&gt;-9223372036854775808&lt;/SPAN&gt;到&lt;SPAN lang=EN-US&gt;9223372036854775807,&lt;/SPAN&gt;在&lt;SPAN lang=EN-US&gt;long&lt;/SPAN&gt;类型中使用后缀&lt;SPAN lang=EN-US&gt;L&lt;/SPAN&gt;：&lt;SPAN lang=EN-US&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style="MARGIN: 0cm 0cm 0pt 18pt"&gt;&lt;SPAN lang=EN-US style="FONT-SIZE: 9pt; BACKGROUND: silver; FONT-FAMILY: 微软雅黑; mso-highlight: silver"&gt;long long2 = &lt;?xml:namespace prefix = st1 ns = "urn:schemas-microsoft-com:office:smarttags" /&gt;&lt;st1:chmetcnv w:st="on" TCSC="0" NumberType="1" Negative="False" HasSpace="False" SourceValue="4294967296" UnitName="l"&gt;4294967296L&lt;/st1:chmetcnv&gt;;&lt;/SPAN&gt;&lt;SPAN lang=EN-US style="FONT-SIZE: 9pt; FONT-FAMILY: 微软雅黑"&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style="MARGIN: 0cm 0cm 0pt 18pt"&gt;&lt;SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 微软雅黑"&gt;当使用后缀&lt;SPAN lang=EN-US&gt;L&lt;/SPAN&gt;时，将根据整数的大小确定它的类型为&lt;SPAN lang=EN-US&gt;long&lt;/SPAN&gt;还是&lt;SPAN lang=EN-US&gt;ulong&lt;/SPAN&gt;。&lt;SPAN lang=EN-US&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style="MARGIN: 0cm 0cm 0pt 18pt; TEXT-INDENT: -18pt; mso-list: l2 level1 lfo1; tab-stops: list 18.0pt"&gt;&lt;SPAN lang=EN-US style="FONT-SIZE: 9pt; FONT-FAMILY: 微软雅黑; mso-bidi-font-family: 微软雅黑"&gt;&lt;SPAN style="mso-list: Ignore"&gt;3.&lt;SPAN style="FONT: 7pt 'Times New Roman'"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN lang=EN-US style="FONT-SIZE: 9pt; FONT-FAMILY: 微软雅黑"&gt;switch&lt;/SPAN&gt;&lt;SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 微软雅黑"&gt;语句：与&lt;SPAN lang=EN-US&gt;C++&lt;/SPAN&gt;中的&lt;SPAN lang=EN-US&gt;switch&lt;/SPAN&gt;语句不同，&lt;SPAN lang=EN-US&gt;C#&lt;/SPAN&gt;不支持从一个&lt;SPAN lang=EN-US&gt;case&lt;/SPAN&gt;标签贯穿到另一个&lt;SPAN lang=EN-US&gt;case&lt;/SPAN&gt;标签。&lt;SPAN lang=EN-US&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style="MARGIN: 0cm 0cm 0pt 18pt"&gt;&lt;SPAN lang=EN-US style="FONT-SIZE: 9pt; FONT-FAMILY: 微软雅黑"&gt;switch&lt;/SPAN&gt;&lt;SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 微软雅黑"&gt;语句是一个控制语句，它通过将控制传递给其体内的一个&lt;SPAN lang=EN-US&gt;case&lt;/SPAN&gt;语句来处理多个选择和枚举。&lt;SPAN lang=EN-US&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style="MARGIN: 0cm 0cm 0pt 18pt"&gt;&lt;SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 微软雅黑"&gt;空&lt;SPAN lang=EN-US&gt;case&lt;/SPAN&gt;标签可以从一个&lt;SPAN lang=EN-US&gt;case&lt;/SPAN&gt;标签贯穿到另一个：&lt;SPAN lang=EN-US&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style="MARGIN: 0cm 0cm 0pt 18pt"&gt;&lt;SPAN lang=EN-US style="FONT-SIZE: 9pt; BACKGROUND: #d9d9d9; FONT-FAMILY: 微软雅黑; mso-bidi-font-family: 'Traditional Arabic'; mso-shading: white; mso-pattern: gray-15 auto"&gt;using System;&lt;o:p&gt;&lt;/o:p&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style="MARGIN: 0cm 0cm 0pt 18pt"&gt;&lt;SPAN lang=EN-US style="FONT-SIZE: 9pt; BACKGROUND: #d9d9d9; FONT-FAMILY: 微软雅黑; mso-bidi-font-family: 'Traditional Arabic'; mso-shading: white; mso-pattern: gray-15 auto"&gt;class SwitchTest&lt;o:p&gt;&lt;/o:p&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style="MARGIN: 0cm 0cm 0pt 18pt"&gt;&lt;SPAN lang=EN-US style="FONT-SIZE: 9pt; BACKGROUND: #d9d9d9; FONT-FAMILY: 微软雅黑; mso-bidi-font-family: 'Traditional Arabic'; mso-shading: white; mso-pattern: gray-15 auto"&gt;{&lt;o:p&gt;&lt;/o:p&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style="MARGIN: 0cm 0cm 0pt 18pt"&gt;&lt;SPAN lang=EN-US style="FONT-SIZE: 9pt; BACKGROUND: #d9d9d9; FONT-FAMILY: 微软雅黑; mso-bidi-font-family: 'Traditional Arabic'; mso-shading: white; mso-pattern: gray-15 auto"&gt;&lt;SPAN style="mso-tab-count: 2"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN&gt;static void &lt;st1:place w:st="on"&gt;Main&lt;/st1:place&gt;()&lt;o:p&gt;&lt;/o:p&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style="MARGIN: 0cm 0cm 0pt 18pt"&gt;&lt;SPAN lang=EN-US style="FONT-SIZE: 9pt; BACKGROUND: #d9d9d9; FONT-FAMILY: 微软雅黑; mso-bidi-font-family: 'Traditional Arabic'; mso-shading: white; mso-pattern: gray-15 auto"&gt;&lt;SPAN style="mso-tab-count: 2"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN&gt;{&lt;o:p&gt;&lt;/o:p&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style="MARGIN: 0cm 0cm 0pt 18pt"&gt;&lt;SPAN lang=EN-US style="FONT-SIZE: 9pt; BACKGROUND: #d9d9d9; FONT-FAMILY: 微软雅黑; mso-bidi-font-family: 'Traditional Arabic'; mso-shading: white; mso-pattern: gray-15 auto"&gt;&lt;SPAN style="mso-tab-count: 3"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN&gt;int n = 2;&lt;o:p&gt;&lt;/o:p&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style="MARGIN: 0cm 0cm 0pt 18pt"&gt;&lt;SPAN lang=EN-US style="FONT-SIZE: 9pt; BACKGROUND: #d9d9d9; FONT-FAMILY: 微软雅黑; mso-bidi-font-family: 'Traditional Arabic'; mso-shading: white; mso-pattern: gray-15 auto"&gt;&lt;SPAN style="mso-tab-count: 3"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN&gt;switch(n)&lt;o:p&gt;&lt;/o:p&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style="MARGIN: 0cm 0cm 0pt 18pt"&gt;&lt;SPAN lang=EN-US style="FONT-SIZE: 9pt; BACKGROUND: #d9d9d9; FONT-FAMILY: 微软雅黑; mso-bidi-font-family: 'Traditional Arabic'; mso-shading: white; mso-pattern: gray-15 auto"&gt;&lt;SPAN style="mso-tab-count: 3"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN&gt;{&lt;o:p&gt;&lt;/o:p&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style="MARGIN: 0cm 0cm 0pt 18pt"&gt;&lt;SPAN lang=EN-US style="FONT-SIZE: 9pt; BACKGROUND: #d9d9d9; FONT-FAMILY: 微软雅黑; mso-bidi-font-family: 'Traditional Arabic'; mso-shading: white; mso-pattern: gray-15 auto"&gt;&lt;SPAN style="mso-tab-count: 4"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN&gt;case 1:&lt;o:p&gt;&lt;/o:p&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style="MARGIN: 0cm 0cm 0pt 18pt"&gt;&lt;SPAN lang=EN-US style="FONT-SIZE: 9pt; BACKGROUND: #d9d9d9; FONT-FAMILY: 微软雅黑; mso-bidi-font-family: 'Traditional Arabic'; mso-shading: white; mso-pattern: gray-15 auto"&gt;&lt;SPAN style="mso-tab-count: 4"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN&gt;case 2:&lt;BR&gt;&lt;SPAN style="mso-tab-count: 4"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN&gt;case 3:&lt;o:p&gt;&lt;/o:p&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style="MARGIN: 0cm 0cm 0pt 18pt"&gt;&lt;SPAN lang=EN-US style="FONT-SIZE: 9pt; BACKGROUND: #d9d9d9; FONT-FAMILY: 微软雅黑; mso-bidi-font-family: 'Traditional Arabic'; mso-shading: white; mso-pattern: gray-15 auto"&gt;&lt;SPAN style="mso-tab-count: 5"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN&gt;Console.WriteLine(“It`s 1, 2, or 3.”);&lt;BR&gt;&lt;SPAN style="mso-tab-count: 5"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN&gt;break;&lt;o:p&gt;&lt;/o:p&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style="MARGIN: 0cm 0cm 0pt 18pt"&gt;&lt;SPAN lang=EN-US style="FONT-SIZE: 9pt; BACKGROUND: #d9d9d9; FONT-FAMILY: 微软雅黑; mso-bidi-font-family: 'Traditional Arabic'; mso-shading: white; mso-pattern: gray-15 auto"&gt;&lt;SPAN style="mso-tab-count: 3"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN&gt;default:&lt;o:p&gt;&lt;/o:p&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style="MARGIN: 0cm 0cm 0pt 18pt"&gt;&lt;SPAN lang=EN-US style="FONT-SIZE: 9pt; BACKGROUND: #d9d9d9; FONT-FAMILY: 微软雅黑; mso-bidi-font-family: 'Traditional Arabic'; mso-shading: white; mso-pattern: gray-15 auto"&gt;&lt;SPAN style="mso-tab-count: 4"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN&gt;Console.WriteLine(“Not sure what it is.”);&lt;o:p&gt;&lt;/o:p&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style="MARGIN: 0cm 0cm 0pt 18pt"&gt;&lt;SPAN lang=EN-US style="FONT-SIZE: 9pt; BACKGROUND: #d9d9d9; FONT-FAMILY: 微软雅黑; mso-bidi-font-family: 'Traditional Arabic'; mso-shading: white; mso-pattern: gray-15 auto"&gt;&lt;SPAN style="mso-tab-count: 4"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN&gt;break;&lt;o:p&gt;&lt;/o:p&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style="MARGIN: 0cm 0cm 0pt 18pt"&gt;&lt;SPAN lang=EN-US style="FONT-SIZE: 9pt; BACKGROUND: #d9d9d9; FONT-FAMILY: 微软雅黑; mso-bidi-font-family: 'Traditional Arabic'; mso-shading: white; mso-pattern: gray-15 auto"&gt;&lt;SPAN style="mso-tab-count: 3"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN&gt;}&lt;o:p&gt;&lt;/o:p&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style="MARGIN: 0cm 0cm 0pt 18pt"&gt;&lt;SPAN lang=EN-US style="FONT-SIZE: 9pt; BACKGROUND: #d9d9d9; FONT-FAMILY: 微软雅黑; mso-bidi-font-family: 'Traditional Arabic'; mso-shading: white; mso-pattern: gray-15 auto"&gt;&lt;SPAN style="mso-tab-count: 2"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN&gt;}&lt;o:p&gt;&lt;/o:p&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style="MARGIN: 0cm 0cm 0pt 18pt"&gt;&lt;SPAN lang=EN-US style="FONT-SIZE: 9pt; BACKGROUND: #d9d9d9; FONT-FAMILY: 微软雅黑; mso-bidi-font-family: 'Traditional Arabic'; mso-shading: white; mso-pattern: gray-15 auto"&gt;&lt;SPAN style="mso-tab-count: 1"&gt;&lt;/SPAN&gt;}&lt;o:p&gt;&lt;/o:p&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style="MARGIN: 0cm 0cm 0pt 18pt"&gt;&lt;SPAN lang=EN-US style="FONT-SIZE: 9pt; BACKGROUND: #d9d9d9; FONT-FAMILY: 微软雅黑; mso-bidi-font-family: 'Traditional Arabic'; mso-shading: white; mso-pattern: gray-15 auto"&gt;OUT:&lt;SPAN style="mso-tab-count: 1"&gt; &lt;/SPAN&gt;It`s 1, 2, or 3.&lt;/SPAN&gt;&lt;SPAN lang=EN-US style="FONT-SIZE: 9pt; FONT-FAMILY: 微软雅黑; mso-bidi-font-family: 'Traditional Arabic'"&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style="MARGIN: 0cm 0cm 0pt 18pt; TEXT-INDENT: -18pt; mso-list: l2 level1 lfo1; tab-stops: list 18.0pt"&gt;&lt;SPAN lang=EN-US style="FONT-SIZE: 9pt; FONT-FAMILY: 微软雅黑; mso-bidi-font-family: 微软雅黑"&gt;&lt;SPAN style="mso-list: Ignore"&gt;4.&lt;SPAN style="FONT: 7pt 'Times New Roman'"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 微软雅黑"&gt;委托&lt;SPAN lang=EN-US&gt;:C#&lt;/SPAN&gt;中的委托大致类似于&lt;SPAN lang=EN-US&gt;C++&lt;/SPAN&gt;中的函数指针&lt;SPAN lang=EN-US&gt;,&lt;/SPAN&gt;是类型安全可靠的&lt;SPAN lang=EN-US&gt;.&lt;o:p&gt;&lt;/o:p&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style="MARGIN: 0cm 0cm 0pt 18pt"&gt;&lt;SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 微软雅黑"&gt;委托类型声明的格式如下&lt;SPAN lang=EN-US&gt;:&lt;o:p&gt;&lt;/o:p&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style="MARGIN: 0cm 0cm 0pt 18pt"&gt;&lt;SPAN lang=EN-US style="FONT-SIZE: 9pt; BACKGROUND: #d9d9d9; FONT-FAMILY: 微软雅黑; mso-bidi-font-family: 'Traditional Arabic'; mso-shading: white; mso-pattern: gray-15 auto"&gt;public delegate void TestDelegate(string message);&lt;o:p&gt;&lt;/o:p&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style="MARGIN: 0cm 0cm 0pt 18pt"&gt;&lt;SPAN lang=EN-US style="FONT-SIZE: 9pt; FONT-FAMILY: 微软雅黑"&gt;delegate&lt;/SPAN&gt;&lt;SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 微软雅黑"&gt;关键用于声明一个引用类型&lt;SPAN lang=EN-US&gt;,&lt;/SPAN&gt;该引用类型可用于封装命名方法或匿名方法&lt;SPAN lang=EN-US&gt;.&lt;/SPAN&gt;委托类似于&lt;SPAN lang=EN-US&gt;C++&lt;/SPAN&gt;中的函数指针&lt;SPAN lang=EN-US&gt;;&lt;/SPAN&gt;但是&lt;SPAN lang=EN-US&gt;,&lt;/SPAN&gt;委托是类型安全和可靠的&lt;SPAN lang=EN-US&gt;.&lt;o:p&gt;&lt;/o:p&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style="MARGIN: 0cm 0cm 0pt 18pt; TEXT-INDENT: -18pt; mso-list: l2 level1 lfo1; tab-stops: list 18.0pt"&gt;&lt;SPAN lang=EN-US style="FONT-SIZE: 9pt; FONT-FAMILY: 微软雅黑; mso-bidi-font-family: 微软雅黑"&gt;&lt;SPAN style="mso-list: Ignore"&gt;5.&lt;SPAN style="FONT: 7pt 'Times New Roman'"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN lang=EN-US style="FONT-SIZE: 9pt; FONT-FAMILY: 微软雅黑"&gt;extern&lt;/SPAN&gt;&lt;SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 微软雅黑"&gt;关键字：在&lt;SPAN lang=EN-US&gt;C++&lt;/SPAN&gt;中，&lt;SPAN lang=EN-US&gt;extern&lt;/SPAN&gt;用于导入类型。在&lt;SPAN lang=EN-US&gt;C#&lt;/SPAN&gt;中，&lt;SPAN lang=EN-US&gt;extern&lt;/SPAN&gt;用于为使用同一程序集的不同版本创建别名。&lt;SPAN lang=EN-US&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style="MARGIN: 0cm 0cm 0pt 18pt"&gt;&lt;SPAN lang=EN-US style="FONT-SIZE: 9pt; FONT-FAMILY: 微软雅黑"&gt;extern&lt;/SPAN&gt;&lt;SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 微软雅黑"&gt;修饰符用于声明在外部实现的方法。&lt;SPAN lang=EN-US&gt;extern&lt;/SPAN&gt;修饰符的觉用法是在使用&lt;SPAN lang=EN-US&gt;Interop&lt;/SPAN&gt;服务调入非托管代码&lt;SPAN lang=EN-US&gt;DllImport&lt;/SPAN&gt;属性一起使用；在这种情况下，该方法还必须声明为&lt;SPAN lang=EN-US&gt;static&lt;/SPAN&gt;，如下面的所示：&lt;SPAN lang=EN-US&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style="MARGIN: 0cm 0cm 0pt 18pt"&gt;&lt;SPAN lang=EN-US style="FONT-SIZE: 9pt; BACKGROUND: #d9d9d9; FONT-FAMILY: 微软雅黑; mso-shading: white; mso-pattern: gray-15 auto"&gt;[DllImport(“avifil32.dll”)]&lt;o:p&gt;&lt;/o:p&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style="MARGIN: 0cm 0cm 0pt 18pt"&gt;&lt;SPAN lang=EN-US style="FONT-SIZE: 9pt; BACKGROUND: #d9d9d9; FONT-FAMILY: 微软雅黑; mso-shading: white; mso-pattern: gray-15 auto"&gt;private static extern void AVIFileInit();&lt;o:p&gt;&lt;/o:p&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style="MARGIN: 0cm 0cm 0pt 18pt"&gt;&lt;SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 微软雅黑"&gt;将&lt;SPAN lang=EN-US&gt;abstract&lt;/SPAN&gt;和&lt;SPAN lang=EN-US&gt;extern&lt;/SPAN&gt;修饰符一起使用来修改同一成员是错误的。使用&lt;SPAN lang=EN-US&gt;extern&lt;/SPAN&gt;修饰符意味着方法在&lt;SPAN lang=EN-US&gt;C#&lt;/SPAN&gt;代码的外部实现，而使用&lt;SPAN lang=EN-US&gt;abstract&lt;/SPAN&gt;外包符意思着在类在未提供方法实现。&lt;SPAN lang=EN-US&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style="MARGIN: 0cm 0cm 0pt 18pt; TEXT-INDENT: -18pt; mso-list: l2 level1 lfo1; tab-stops: list 18.0pt"&gt;&lt;SPAN lang=EN-US style="FONT-SIZE: 9pt; FONT-FAMILY: 微软雅黑; mso-bidi-font-family: 微软雅黑"&gt;&lt;SPAN style="mso-list: Ignore"&gt;6.&lt;SPAN style="FONT: 7pt 'Times New Roman'"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN lang=EN-US style="FONT-SIZE: 9pt; FONT-FAMILY: 微软雅黑"&gt;static&lt;/SPAN&gt;&lt;SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 微软雅黑"&gt;关键字：在&lt;SPAN lang=EN-US&gt;C++&lt;/SPAN&gt;中，&lt;SPAN lang=EN-US&gt;static&lt;/SPAN&gt;既可用于声明类级实体，也可用于声明特定于某模块的类型。在&lt;SPAN lang=EN-US&gt;C#&lt;/SPAN&gt;中，&lt;SPAN lang=EN-US&gt;static&lt;/SPAN&gt;仅用于声明类级实体。&lt;SPAN lang=EN-US&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style="MARGIN: 0cm 0cm 0pt 18pt"&gt;&lt;SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 微软雅黑"&gt;使用&lt;SPAN lang=EN-US&gt;static&lt;/SPAN&gt;修饰符声明属于类型本身而不是属于特定对象的静态成员。&lt;SPAN lang=EN-US&gt;static&lt;/SPAN&gt;修饰符可用于类、字段、方法属性、运算符、事件和构造函数，但不能用于索引器、析构函数或类以外的类型。&lt;SPAN lang=EN-US&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style="MARGIN: 0cm 0cm 0pt 18pt"&gt;&lt;SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 微软雅黑"&gt;备注：&lt;SPAN lang=EN-US&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style="MARGIN: 0cm 0cm 0pt 39pt; TEXT-INDENT: -21pt; mso-list: l1 level1 lfo2; tab-stops: list 39.0pt"&gt;&lt;SPAN lang=EN-US style="FONT-SIZE: 9pt; FONT-FAMILY: Wingdings; mso-fareast-font-family: Wingdings; mso-bidi-font-family: Wingdings"&gt;&lt;SPAN style="mso-list: Ignore"&gt;l&lt;SPAN style="FONT: 7pt 'Times New Roman'"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 微软雅黑"&gt;常数或者类型声明隐式地静态成员。&lt;SPAN lang=EN-US&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style="MARGIN: 0cm 0cm 0pt 39pt; TEXT-INDENT: -21pt; mso-list: l1 level1 lfo2; tab-stops: list 39.0pt"&gt;&lt;SPAN lang=EN-US style="FONT-SIZE: 9pt; FONT-FAMILY: Wingdings; mso-fareast-font-family: Wingdings; mso-bidi-font-family: Wingdings"&gt;&lt;SPAN style="mso-list: Ignore"&gt;l&lt;SPAN style="FONT: 7pt 'Times New Roman'"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 微软雅黑"&gt;不能通过实例引用静态成员。然而，可以通过类型名称引用它。&lt;SPAN lang=EN-US&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style="MARGIN: 0cm 0cm 0pt 39pt; TEXT-INDENT: -21pt; mso-list: l1 level1 lfo2; tab-stops: list 39.0pt"&gt;&lt;SPAN lang=EN-US style="FONT-SIZE: 9pt; FONT-FAMILY: Wingdings; mso-fareast-font-family: Wingdings; mso-bidi-font-family: Wingdings"&gt;&lt;SPAN style="mso-list: Ignore"&gt;l&lt;SPAN style="FONT: 7pt 'Times New Roman'"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 微软雅黑"&gt;尽管类的实例包含该类所有实例字段的单独副本，但每个静态字段只有一个副本。&lt;SPAN lang=EN-US&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style="MARGIN: 0cm 0cm 0pt 39pt; TEXT-INDENT: -21pt; mso-list: l1 level1 lfo2; tab-stops: list 39.0pt"&gt;&lt;SPAN lang=EN-US style="FONT-SIZE: 9pt; FONT-FAMILY: Wingdings; mso-fareast-font-family: Wingdings; mso-bidi-font-family: Wingdings"&gt;&lt;SPAN style="mso-list: Ignore"&gt;l&lt;SPAN style="FONT: 7pt 'Times New Roman'"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 微软雅黑"&gt;不可以使用&lt;SPAN lang=EN-US&gt;this&lt;/SPAN&gt;来引用静态方法或属性访问器。&lt;SPAN lang=EN-US&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style="MARGIN: 0cm 0cm 0pt 39pt; TEXT-INDENT: -21pt; mso-list: l1 level1 lfo2; tab-stops: list 39.0pt"&gt;&lt;SPAN lang=EN-US style="FONT-SIZE: 9pt; FONT-FAMILY: Wingdings; mso-fareast-font-family: Wingdings; mso-bidi-font-family: Wingdings"&gt;&lt;SPAN style="mso-list: Ignore"&gt;l&lt;SPAN style="FONT: 7pt 'Times New Roman'"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 微软雅黑"&gt;如果对类应用&lt;SPAN lang=EN-US&gt;static&lt;/SPAN&gt;关键字，则该类的所有成员都必须是静态的。&lt;SPAN lang=EN-US&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style="MARGIN: 0cm 0cm 0pt 39pt; TEXT-INDENT: -21pt; mso-list: l1 level1 lfo2; tab-stops: list 39.0pt"&gt;&lt;SPAN lang=EN-US style="FONT-SIZE: 9pt; FONT-FAMILY: Wingdings; mso-fareast-font-family: Wingdings; mso-bidi-font-family: Wingdings"&gt;&lt;SPAN style="mso-list: Ignore"&gt;l&lt;SPAN style="FONT: 7pt 'Times New Roman'"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 微软雅黑"&gt;类（包括静态类）可以有静态构造函数。在程序开始和实例化类之间的某个时刻调用静态构造函数。&lt;SPAN lang=EN-US&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style="MARGIN: 0cm 0cm 0pt 18pt; TEXT-INDENT: -18pt; mso-list: l2 level1 lfo1; tab-stops: list 18.0pt"&gt;&lt;SPAN lang=EN-US style="FONT-SIZE: 9pt; FONT-FAMILY: 微软雅黑; mso-bidi-font-family: 微软雅黑"&gt;&lt;SPAN style="mso-list: Ignore"&gt;7.&lt;SPAN style="FONT: 7pt 'Times New Roman'"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN lang=EN-US style="FONT-SIZE: 9pt; FONT-FAMILY: 微软雅黑"&gt;C#&lt;/SPAN&gt;&lt;SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 微软雅黑"&gt;中的&lt;SPAN lang=EN-US&gt;Main&lt;/SPAN&gt;方法和&lt;SPAN lang=EN-US&gt;C++&lt;/SPAN&gt;中的&lt;SPAN lang=EN-US&gt;main&lt;/SPAN&gt;函数的声明方式不同。在&lt;SPAN lang=EN-US&gt;C#&lt;/SPAN&gt;中，它是大写的，并且始终是&lt;SPAN lang=EN-US&gt;static&lt;/SPAN&gt;的。此外，在&lt;SPAN lang=EN-US&gt;C#&lt;/SPAN&gt;中，对处理命令行参数的支持要可靠得多。&lt;SPAN lang=EN-US&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style="MARGIN: 0cm 0cm 0pt 18pt"&gt;&lt;SPAN lang=EN-US style="FONT-SIZE: 9pt; FONT-FAMILY: 微软雅黑"&gt;Main&lt;/SPAN&gt;&lt;SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 微软雅黑"&gt;方法是程序的入口点，您将在那里创建对象和调用其他方法。一个&lt;SPAN lang=EN-US&gt;C#&lt;/SPAN&gt;程序中只能有一个入口点。&lt;SPAN lang=EN-US&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style="MARGIN: 0cm 0cm 0pt 18pt"&gt;&lt;SPAN lang=EN-US style="FONT-SIZE: 9pt; BACKGROUND: silver; FONT-FAMILY: 微软雅黑; mso-highlight: silver"&gt;class TestClass&lt;o:p&gt;&lt;/o:p&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style="MARGIN: 0cm 0cm 0pt 18pt"&gt;&lt;SPAN lang=EN-US style="FONT-SIZE: 9pt; BACKGROUND: silver; FONT-FAMILY: 微软雅黑; mso-highlight: silver"&gt;{&lt;o:p&gt;&lt;/o:p&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style="MARGIN: 0cm 0cm 0pt 18pt"&gt;&lt;SPAN lang=EN-US style="FONT-SIZE: 9pt; BACKGROUND: silver; FONT-FAMILY: 微软雅黑; mso-highlight: silver"&gt;&lt;SPAN style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN&gt;static void &lt;st1:place w:st="on"&gt;Main&lt;/st1:place&gt;(string[] args)&lt;o:p&gt;&lt;/o:p&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style="MARGIN: 0cm 0cm 0pt 18pt"&gt;&lt;SPAN lang=EN-US style="FONT-SIZE: 9pt; BACKGROUND: silver; FONT-FAMILY: 微软雅黑; mso-highlight: silver"&gt;&lt;SPAN style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN&gt;{&lt;o:p&gt;&lt;/o:p&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style="MARGIN: 0cm 0cm 0pt 18pt"&gt;&lt;SPAN lang=EN-US style="FONT-SIZE: 9pt; BACKGROUND: silver; FONT-FAMILY: 微软雅黑; mso-highlight: silver"&gt;&lt;SPAN style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN&gt;// Display the number of command line arguments:&lt;o:p&gt;&lt;/o:p&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style="MARGIN: 0cm 0cm 0pt 18pt"&gt;&lt;SPAN lang=EN-US style="FONT-SIZE: 9pt; BACKGROUND: silver; FONT-FAMILY: 微软雅黑; mso-highlight: silver"&gt;&lt;SPAN style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN&gt;System.Console.WriteLine(args.Length);&lt;o:p&gt;&lt;/o:p&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style="MARGIN: 0cm 0cm 0pt 18pt"&gt;&lt;SPAN lang=EN-US style="FONT-SIZE: 9pt; BACKGROUND: silver; FONT-FAMILY: 微软雅黑; mso-highlight: silver"&gt;&lt;SPAN style="mso-spacerun: yes"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN&gt;}&lt;o:p&gt;&lt;/o:p&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style="MARGIN: 0cm 0cm 0pt 18pt"&gt;&lt;SPAN lang=EN-US style="FONT-SIZE: 9pt; BACKGROUND: silver; FONT-FAMILY: 微软雅黑; mso-highlight: silver"&gt;}&lt;/SPAN&gt;&lt;SPAN lang=EN-US style="FONT-SIZE: 9pt; FONT-FAMILY: 微软雅黑"&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style="MARGIN: 0cm 0cm 0pt 18pt"&gt;&lt;SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 微软雅黑"&gt;概述：&lt;SPAN lang=EN-US&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style="MARGIN: 0cm 0cm 0pt 42pt; TEXT-INDENT: -21pt; mso-list: l2 level2 lfo1; tab-stops: list 42.0pt"&gt;&lt;SPAN lang=EN-US style="FONT-SIZE: 9pt; FONT-FAMILY: Wingdings; mso-fareast-font-family: Wingdings; mso-bidi-font-family: Wingdings"&gt;&lt;SPAN style="mso-list: Ignore"&gt;l&lt;SPAN style="FONT: 7pt 'Times New Roman'"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN lang=EN-US style="FONT-SIZE: 9pt; FONT-FAMILY: 微软雅黑"&gt;Main&lt;/SPAN&gt;&lt;SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 微软雅黑"&gt;方法是程序的入口点，程序控制在该方法中开始和结束。&lt;SPAN lang=EN-US&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style="MARGIN: 0cm 0cm 0pt 42pt; TEXT-INDENT: -21pt; mso-list: l2 level2 lfo1; tab-stops: list 42.0pt"&gt;&lt;SPAN lang=EN-US style="FONT-SIZE: 9pt; FONT-FAMILY: Wingdings; mso-fareast-font-family: Wingdings; mso-bidi-font-family: Wingdings"&gt;&lt;SPAN style="mso-list: Ignore"&gt;l&lt;SPAN style="FONT: 7pt 'Times New Roman'"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 微软雅黑"&gt;该方法在类或结构的内部声明。它必须为静态方法，而不应该为公共方法。&lt;SPAN lang=EN-US&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style="MARGIN: 0cm 0cm 0pt 42pt; TEXT-INDENT: -21pt; mso-list: l2 level2 lfo1; tab-stops: list 42.0pt"&gt;&lt;SPAN lang=EN-US style="FONT-SIZE: 9pt; FONT-FAMILY: Wingdings; mso-fareast-font-family: Wingdings; mso-bidi-font-family: Wingdings"&gt;&lt;SPAN style="mso-list: Ignore"&gt;l&lt;SPAN style="FONT: 7pt 'Times New Roman'"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 微软雅黑"&gt;它可以具有&lt;SPAN lang=EN-US&gt;void&lt;/SPAN&gt;或&lt;SPAN lang=EN-US&gt;int&lt;/SPAN&gt;返回类型。&lt;SPAN lang=EN-US&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style="MARGIN: 0cm 0cm 0pt 42pt; TEXT-INDENT: -21pt; mso-list: l2 level2 lfo1; tab-stops: list 42.0pt"&gt;&lt;SPAN lang=EN-US style="FONT-SIZE: 9pt; FONT-FAMILY: Wingdings; mso-fareast-font-family: Wingdings; mso-bidi-font-family: Wingdings"&gt;&lt;SPAN style="mso-list: Ignore"&gt;l&lt;SPAN style="FONT: 7pt 'Times New Roman'"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 微软雅黑"&gt;声明&lt;SPAN lang=EN-US&gt;Main&lt;/SPAN&gt;方法时既可以使用参数，也可以不使用参数。&lt;SPAN lang=EN-US&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style="MARGIN: 0cm 0cm 0pt 42pt; TEXT-INDENT: -21pt; mso-list: l2 level2 lfo1; tab-stops: list 42.0pt"&gt;&lt;SPAN lang=EN-US style="FONT-SIZE: 9pt; FONT-FAMILY: Wingdings; mso-fareast-font-family: Wingdings; mso-bidi-font-family: Wingdings"&gt;&lt;SPAN style="mso-list: Ignore"&gt;l&lt;SPAN style="FONT: 7pt 'Times New Roman'"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 微软雅黑"&gt;参数可以作为从零开始索引的命令行参数来读取。&lt;SPAN lang=EN-US&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style="MARGIN: 0cm 0cm 0pt 42pt; TEXT-INDENT: -21pt; mso-list: l2 level2 lfo1; tab-stops: list 42.0pt"&gt;&lt;SPAN lang=EN-US style="FONT-SIZE: 9pt; FONT-FAMILY: Wingdings; mso-fareast-font-family: Wingdings; mso-bidi-font-family: Wingdings"&gt;&lt;SPAN style="mso-list: Ignore"&gt;l&lt;SPAN style="FONT: 7pt 'Times New Roman'"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 微软雅黑"&gt;与&lt;SPAN lang=EN-US&gt;C&lt;/SPAN&gt;和&lt;SPAN lang=EN-US&gt;C++&lt;/SPAN&gt;不同，程序的名称不会被当作第一个命令参数。&lt;SPAN lang=EN-US&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style="MARGIN: 0cm 0cm 0pt 18pt; TEXT-INDENT: -18pt; mso-list: l2 level1 lfo1; tab-stops: list 18.0pt"&gt;&lt;SPAN lang=EN-US style="FONT-SIZE: 9pt; FONT-FAMILY: 微软雅黑; mso-bidi-font-family: 微软雅黑"&gt;&lt;SPAN style="mso-list: Ignore"&gt;8.&lt;SPAN style="FONT: 7pt 'Times New Roman'"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 微软雅黑"&gt;在&lt;SPAN lang=EN-US&gt;C#&lt;/SPAN&gt;中，只有在&lt;SPAN lang=EN-US&gt;unsafe&lt;/SPAN&gt;模式下才允许使用指针。&lt;SPAN lang=EN-US&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style="MARGIN: 0cm 0cm 0pt 18pt"&gt;&lt;SPAN lang=EN-US style="FONT-SIZE: 9pt; FONT-FAMILY: 微软雅黑"&gt;unsafe&lt;/SPAN&gt;&lt;SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 微软雅黑"&gt;关键字表示不安全上下文，该上下文是任何涉及指针的操作所必需的。&lt;SPAN lang=EN-US&gt;&lt;BR&gt;&lt;/SPAN&gt;可以在类型或成员的声明中使用&lt;SPAN lang=EN-US&gt;unsafe&lt;/SPAN&gt;修饰符。因此，类型或成员的整个正文范围均被视为不安全上下文。若要编译不安全代码，必须指定&lt;SPAN lang=EN-US&gt;/unsafe&lt;/SPAN&gt;编译器选项。无法通过公共语言运行库验证不安全代码。&lt;SPAN lang=EN-US&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style="MARGIN: 0cm 0cm 0pt 18pt; TEXT-INDENT: -18pt; mso-list: l2 level1 lfo1; tab-stops: list 18.0pt"&gt;&lt;SPAN lang=EN-US style="FONT-SIZE: 9pt; FONT-FAMILY: 微软雅黑; mso-bidi-font-family: 微软雅黑"&gt;&lt;SPAN style="mso-list: Ignore"&gt;9.&lt;SPAN style="FONT: 7pt 'Times New Roman'"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN lang=EN-US style="FONT-SIZE: 9pt; FONT-FAMILY: 微软雅黑"&gt;foreach&lt;/SPAN&gt;&lt;SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 微软雅黑"&gt;关键字使您可以循环访问数组和集合。&lt;SPAN lang=EN-US&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style="MARGIN: 0cm 0cm 0pt 18pt"&gt;&lt;SPAN lang=EN-US style="FONT-SIZE: 9pt; FONT-FAMILY: 微软雅黑"&gt;foreach&lt;/SPAN&gt;&lt;SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 微软雅黑"&gt;语句为数组或对象集合中的每个元素重复一个嵌入语句级。&lt;SPAN lang=EN-US&gt;foreach&lt;/SPAN&gt;语句用于循环访问集合以获取所需信息，但不应用于更改集合内容以避免产生不可预知的副作用。&lt;SPAN lang=EN-US&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style="MARGIN: 0cm 0cm 0pt 18pt"&gt;&lt;SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 微软雅黑"&gt;备注：&lt;SPAN lang=EN-US&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style="MARGIN: 0cm 0cm 0pt 18pt"&gt;&lt;SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 微软雅黑"&gt;嵌入语句为数组或集合中的每个元素继续执行。当为集合中的所有元素完成有迭代后，控制传递给&lt;SPAN lang=EN-US&gt;foreach&lt;/SPAN&gt;块之后的下一个语句。&lt;SPAN lang=EN-US&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style="MARGIN: 0cm 0cm 0pt 18pt"&gt;&lt;SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 微软雅黑"&gt;在此示例中，使用&lt;SPAN lang=EN-US&gt;foreach&lt;/SPAN&gt;显示整数数组的内容。&lt;SPAN lang=EN-US&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style="MARGIN: 0cm 0cm 0pt 18pt"&gt;&lt;SPAN lang=EN-US style="FONT-SIZE: 9pt; BACKGROUND: #d9d9d9; FONT-FAMILY: 微软雅黑; mso-shading: white; mso-pattern: gray-15 auto"&gt;// cs_foreach.cs&lt;o:p&gt;&lt;/o:p&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style="MARGIN: 0cm 0cm 0pt 18pt"&gt;&lt;SPAN lang=EN-US style="FONT-SIZE: 9pt; BACKGROUND: #d9d9d9; FONT-FAMILY: 微软雅黑; mso-shading: white; mso-pattern: gray-15 auto"&gt;class ForEachTest&lt;o:p&gt;&lt;/o:p&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style="MARGIN: 0cm 0cm 0pt 18pt"&gt;&lt;SPAN lang=EN-US style="FONT-SIZE: 9pt; BACKGROUND: #d9d9d9; FONT-FAMILY: 微软雅黑; mso-shading: white; mso-pattern: gray-15 auto"&gt;{&lt;o:p&gt;&lt;/o:p&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style="MARGIN: 0cm 0cm 0pt 18pt"&gt;&lt;SPAN lang=EN-US style="FONT-SIZE: 9pt; BACKGROUND: #d9d9d9; FONT-FAMILY: 微软雅黑; mso-shading: white; mso-pattern: gray-15 auto"&gt;&lt;SPAN style="mso-tab-count: 2"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN&gt;static void &lt;st1:place w:st="on"&gt;Main&lt;/st1:place&gt;(string[] args)&lt;o:p&gt;&lt;/o:p&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style="MARGIN: 0cm 0cm 0pt 18pt"&gt;&lt;SPAN lang=EN-US style="FONT-SIZE: 9pt; BACKGROUND: #d9d9d9; FONT-FAMILY: 微软雅黑; mso-shading: white; mso-pattern: gray-15 auto"&gt;&lt;SPAN style="mso-tab-count: 2"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN&gt;{&lt;o:p&gt;&lt;/o:p&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style="MARGIN: 0cm 0cm 0pt 18pt"&gt;&lt;SPAN lang=EN-US style="FONT-SIZE: 9pt; BACKGROUND: #d9d9d9; FONT-FAMILY: 微软雅黑; mso-shading: white; mso-pattern: gray-15 auto"&gt;&lt;SPAN style="mso-tab-count: 3"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN&gt;int[] fibarray = new int[] {0, 1, 2, 3, 5, 6, 18};&lt;o:p&gt;&lt;/o:p&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style="MARGIN: 0cm 0cm 0pt 18pt"&gt;&lt;SPAN lang=EN-US style="FONT-SIZE: 9pt; BACKGROUND: #d9d9d9; FONT-FAMILY: 微软雅黑; mso-shading: white; mso-pattern: gray-15 auto"&gt;&lt;SPAN style="mso-tab-count: 3"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN&gt;foreach(int i in fibarray)&lt;o:p&gt;&lt;/o:p&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style="MARGIN: 0cm 0cm 0pt 18pt"&gt;&lt;SPAN lang=EN-US style="FONT-SIZE: 9pt; BACKGROUND: #d9d9d9; FONT-FAMILY: 微软雅黑; mso-shading: white; mso-pattern: gray-15 auto"&gt;&lt;SPAN style="mso-tab-count: 3"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN&gt;{&lt;o:p&gt;&lt;/o:p&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style="MARGIN: 0cm 0cm 0pt 18pt"&gt;&lt;SPAN lang=EN-US style="FONT-SIZE: 9pt; BACKGROUND: #d9d9d9; FONT-FAMILY: 微软雅黑; mso-shading: white; mso-pattern: gray-15 auto"&gt;&lt;SPAN style="mso-tab-count: 4"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN&gt;System.Console.WriteLine(i);&lt;o:p&gt;&lt;/o:p&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style="MARGIN: 0cm 0cm 0pt"&gt;&lt;SPAN lang=EN-US style="FONT-SIZE: 9pt; FONT-FAMILY: 微软雅黑"&gt;&lt;SPAN style="mso-tab-count: 1"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN&gt;&lt;SPAN style="BACKGROUND: #d9d9d9; mso-shading: white; mso-pattern: gray-15 auto"&gt;&lt;SPAN style="mso-tab-count: 2"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN&gt;}&lt;o:p&gt;&lt;/o:p&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style="MARGIN: 0cm 0cm 0pt; TEXT-INDENT: 22.5pt; mso-char-indent-count: 2.5"&gt;&lt;SPAN lang=EN-US style="FONT-SIZE: 9pt; BACKGROUND: #d9d9d9; FONT-FAMILY: 微软雅黑; mso-shading: white; mso-pattern: gray-15 auto"&gt;&lt;SPAN style="mso-tab-count: 1"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN&gt;}&lt;o:p&gt;&lt;/o:p&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style="MARGIN: 0cm 0cm 0pt; TEXT-INDENT: 22.5pt; mso-char-indent-count: 2.5"&gt;&lt;SPAN lang=EN-US style="FONT-SIZE: 9pt; BACKGROUND: #d9d9d9; FONT-FAMILY: 微软雅黑; mso-shading: white; mso-pattern: gray-15 auto"&gt;}&lt;o:p&gt;&lt;/o:p&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style="MARGIN: 0cm 0cm 0pt"&gt;&lt;SPAN lang=EN-US style="FONT-SIZE: 9pt; FONT-FAMILY: 微软雅黑"&gt;&lt;SPAN style="mso-tab-count: 1"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 微软雅黑"&gt;输出&lt;SPAN lang=EN-US&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style="BACKGROUND: #dddddd; MARGIN: 0cm 0cm 0pt 27pt; VERTICAL-ALIGN: top; LINE-HEIGHT: 140%; TEXT-ALIGN: left; mso-pagination: widow-orphan; tab-stops: 45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt" align=left&gt;&lt;SPAN lang=EN-US style="FONT-SIZE: 12pt; LINE-HEIGHT: 140%; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体"&gt;0 1 2 3 5&lt;SPAN style="BACKGROUND: #d9d9d9; mso-shading: white; mso-pattern: gray-15 auto"&gt; 6 18&lt;/SPAN&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style="MARGIN: 0cm 0cm 0pt 18pt; TEXT-INDENT: -18pt; mso-list: l2 level1 lfo1; tab-stops: list 18.0pt"&gt;&lt;SPAN lang=EN-US style="FONT-SIZE: 9pt; FONT-FAMILY: 微软雅黑; mso-bidi-font-family: 微软雅黑"&gt;&lt;SPAN style="mso-list: Ignore"&gt;10.&lt;SPAN style="FONT: 7pt 'Times New Roman'"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 微软雅黑"&gt;方法隐藏：&lt;SPAN lang=EN-US&gt;C++&lt;/SPAN&gt;通过继承支持方法的隐式“隐藏”。在&lt;SPAN lang=EN-US&gt;C#&lt;/SPAN&gt;中，必须使用&lt;SPAN lang=EN-US&gt;new&lt;/SPAN&gt;修饰符来显式隐藏继承的成员。&lt;SPAN lang=EN-US&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style="MARGIN: 0cm 0cm 0pt 18pt"&gt;&lt;SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 微软雅黑"&gt;在&lt;SPAN lang=EN-US&gt;C#&lt;/SPAN&gt;中，&lt;SPAN lang=EN-US&gt;new&lt;/SPAN&gt;关键字可用作运算符、修饰符或约束。&lt;SPAN lang=EN-US&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style="MARGIN: 0cm 0cm 0pt 39pt; TEXT-INDENT: -21pt; mso-list: l0 level1 lfo3; tab-stops: list 39.0pt"&gt;&lt;SPAN lang=EN-US style="FONT-SIZE: 9pt; FONT-FAMILY: Wingdings; mso-fareast-font-family: Wingdings; mso-bidi-font-family: Wingdings"&gt;&lt;SPAN style="mso-list: Ignore"&gt;l&lt;SPAN style="FONT: 7pt 'Times New Roman'"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN lang=EN-US style="FONT-SIZE: 9pt; FONT-FAMILY: 微软雅黑"&gt;new&lt;/SPAN&gt;&lt;SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 微软雅黑"&gt;运算符：用于创建对象和调用构造函数。&lt;SPAN lang=EN-US&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style="MARGIN: 0cm 0cm 0pt 18pt"&gt;&lt;SPAN lang=EN-US style="FONT-SIZE: 9pt; FONT-FAMILY: 微软雅黑"&gt;new&lt;/SPAN&gt;&lt;SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 微软雅黑"&gt;运算符还用于调用值类型的默认构造函数。&lt;SPAN lang=EN-US&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style="MARGIN: 0cm 0cm 0pt 18pt"&gt;&lt;SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 微软雅黑"&gt;不能重载&lt;SPAN lang=EN-US&gt;new&lt;/SPAN&gt;运算符。如果&lt;SPAN lang=EN-US&gt;new&lt;/SPAN&gt;运算符分配内在失败，将引发异常&lt;SPAN lang=EN-US&gt;OutOfMemoryException&lt;/SPAN&gt;。&lt;SPAN lang=EN-US&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style="MARGIN: 0cm 0cm 0pt 39pt; TEXT-INDENT: -21pt; mso-list: l0 level1 lfo3; tab-stops: list 39.0pt"&gt;&lt;SPAN lang=EN-US style="FONT-SIZE: 9pt; FONT-FAMILY: Wingdings; mso-fareast-font-family: Wingdings; mso-bidi-font-family: Wingdings"&gt;&lt;SPAN style="mso-list: Ignore"&gt;l&lt;SPAN style="FONT: 7pt 'Times New Roman'"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN lang=EN-US style="FONT-SIZE: 9pt; FONT-FAMILY: 微软雅黑"&gt;new&lt;/SPAN&gt;&lt;SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 微软雅黑"&gt;修饰符：用于向基类成员隐藏继承成员。&lt;SPAN lang=EN-US&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style="MARGIN: 0cm 0cm 0pt 18pt"&gt;&lt;SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 微软雅黑"&gt;在用作修饰符时，&lt;SPAN lang=EN-US&gt;new&lt;/SPAN&gt;关键字可以显式隐藏从基类继承的成员。隐藏继承的成员意味着该成员的派生版本将替换基类版本。在不使用&lt;SPAN lang=EN-US&gt;new&lt;/SPAN&gt;修饰符的情况下隐藏成员是允许的，但会生成警告。使用&lt;SPAN lang=EN-US&gt;new&lt;/SPAN&gt;显式隐藏成员会取消此警告，并记录代之派生版本这一事实。&lt;SPAN lang=EN-US&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style="MARGIN: 0cm 0cm 0pt 18pt"&gt;&lt;SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 微软雅黑"&gt;若要隐藏继承的成员，请使用相同名称在派生类中声明该成员，并使用&lt;SPAN lang=EN-US&gt;new&lt;/SPAN&gt;修饰符该成员。例如：&lt;SPAN lang=EN-US&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style="MARGIN: 0cm 0cm 0pt 18pt"&gt;&lt;SPAN lang=EN-US style="FONT-SIZE: 9pt; BACKGROUND: #d9d9d9; FONT-FAMILY: 微软雅黑; mso-shading: white; mso-pattern: gray-15 auto"&gt;public class BaseC&lt;o:p&gt;&lt;/o:p&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style="MARGIN: 0cm 0cm 0pt 18pt"&gt;&lt;SPAN lang=EN-US style="FONT-SIZE: 9pt; BACKGROUND: #d9d9d9; FONT-FAMILY: 微软雅黑; mso-shading: white; mso-pattern: gray-15 auto"&gt;{&lt;o:p&gt;&lt;/o:p&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style="MARGIN: 0cm 0cm 0pt 18pt"&gt;&lt;SPAN lang=EN-US style="FONT-SIZE: 9pt; BACKGROUND: #d9d9d9; FONT-FAMILY: 微软雅黑; mso-shading: white; mso-pattern: gray-15 auto"&gt;&lt;SPAN style="mso-tab-count: 2"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN&gt;public int x;&lt;o:p&gt;&lt;/o:p&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style="MARGIN: 0cm 0cm 0pt 18pt"&gt;&lt;SPAN lang=EN-US style="FONT-SIZE: 9pt; BACKGROUND: #d9d9d9; FONT-FAMILY: 微软雅黑; mso-shading: white; mso-pattern: gray-15 auto"&gt;&lt;SPAN style="mso-tab-count: 2"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN&gt;public void invoke(){}&lt;o:p&gt;&lt;/o:p&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style="MARGIN: 0cm 0cm 0pt 18pt"&gt;&lt;SPAN lang=EN-US style="FONT-SIZE: 9pt; BACKGROUND: #d9d9d9; FONT-FAMILY: 微软雅黑; mso-shading: white; mso-pattern: gray-15 auto"&gt;}&lt;o:p&gt;&lt;/o:p&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style="MARGIN: 0cm 0cm 0pt 18pt"&gt;&lt;SPAN lang=EN-US style="FONT-SIZE: 9pt; BACKGROUND: #d9d9d9; FONT-FAMILY: 微软雅黑; mso-shading: white; mso-pattern: gray-15 auto"&gt;public class DerivedC : BaseC&lt;o:p&gt;&lt;/o:p&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style="MARGIN: 0cm 0cm 0pt 18pt"&gt;&lt;SPAN lang=EN-US style="FONT-SIZE: 9pt; BACKGROUND: #d9d9d9; FONT-FAMILY: 微软雅黑; mso-shading: white; mso-pattern: gray-15 auto"&gt;{&lt;o:p&gt;&lt;/o:p&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style="MARGIN: 0cm 0cm 0pt 18pt"&gt;&lt;SPAN lang=EN-US style="FONT-SIZE: 9pt; BACKGROUND: #d9d9d9; FONT-FAMILY: 微软雅黑; mso-shading: white; mso-pattern: gray-15 auto"&gt;&lt;SPAN style="mso-tab-count: 2"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN&gt;new public void Invoke(){}&lt;o:p&gt;&lt;/o:p&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style="MARGIN: 0cm 0cm 0pt 18pt"&gt;&lt;SPAN lang=EN-US style="FONT-SIZE: 9pt; BACKGROUND: #d9d9d9; FONT-FAMILY: 微软雅黑; mso-shading: white; mso-pattern: gray-15 auto"&gt;}&lt;o:p&gt;&lt;/o:p&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style="MARGIN: 0cm 0cm 0pt 18pt"&gt;&lt;SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 微软雅黑"&gt;在此示例中，&lt;SPAN lang=EN-US&gt;DerivedC.Invoke&lt;/SPAN&gt;隐藏了&lt;SPAN lang=EN-US&gt;BaseC.Invoke&lt;/SPAN&gt;。字段&lt;SPAN lang=EN-US&gt;x&lt;/SPAN&gt;不受影响，因为它没有被类似的名称的字段隐藏。&lt;SPAN lang=EN-US&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style="MARGIN: 0cm 0cm 0pt 18pt"&gt;&lt;SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 微软雅黑"&gt;通过继承隐藏名称采用下列形式之一：&lt;SPAN lang=EN-US&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style="MARGIN: 0cm 0cm 0pt 57pt; TEXT-INDENT: -18pt; mso-list: l0 level2 lfo3; tab-stops: list 57.0pt"&gt;&lt;SPAN lang=EN-US style="FONT-SIZE: 9pt; FONT-FAMILY: 微软雅黑; mso-bidi-font-family: 微软雅黑"&gt;&lt;SPAN style="mso-list: Ignore"&gt;1.&lt;SPAN style="FONT: 7pt 'Times New Roman'"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 微软雅黑"&gt;引入类或结构中的常数、指定、属性或类型隐藏具有相同名称的所有基类成员。&lt;SPAN lang=EN-US&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style="MARGIN: 0cm 0cm 0pt 57pt; TEXT-INDENT: -18pt; mso-list: l0 level2 lfo3; tab-stops: list 57.0pt"&gt;&lt;SPAN lang=EN-US style="FONT-SIZE: 9pt; FONT-FAMILY: 微软雅黑; mso-bidi-font-family: 微软雅黑"&gt;&lt;SPAN style="mso-list: Ignore"&gt;2.&lt;SPAN style="FONT: 7pt 'Times New Roman'"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 微软雅黑"&gt;引入类或结构中的索引器将隐藏具有相同名称的所有基类索引器。&lt;SPAN lang=EN-US&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style="MARGIN: 0cm 0cm 0pt 57pt; TEXT-INDENT: -18pt; mso-list: l0 level2 lfo3; tab-stops: list 57.0pt"&gt;&lt;SPAN lang=EN-US style="FONT-SIZE: 9pt; FONT-FAMILY: 微软雅黑; mso-bidi-font-family: 微软雅黑"&gt;&lt;SPAN style="mso-list: Ignore"&gt;3.&lt;SPAN style="FONT: 7pt 'Times New Roman'"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 微软雅黑"&gt;引入类或结构的方法隐藏基类中具有相同名称的属性、字段和类型。同时也隐藏具有相同签名的所有基类方法。&lt;SPAN lang=EN-US&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style="MARGIN: 0cm 0cm 0pt 17.95pt; mso-para-margin-left: 1.71gd"&gt;&lt;SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 微软雅黑"&gt;对同一成员同时使用&lt;SPAN lang=EN-US&gt;new&lt;/SPAN&gt;和&lt;SPAN lang=EN-US&gt;override&lt;/SPAN&gt;是错误的，因为这两个修饰符在含义上相互排斥。使用&lt;SPAN lang=EN-US&gt;new&lt;/SPAN&gt;会用同样的名称创建一个新成员并使原始成员变为隐藏的，而&lt;SPAN lang=EN-US&gt;override&lt;/SPAN&gt;则扩展继承成员的实现。&lt;SPAN lang=EN-US&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style="MARGIN: 0cm 0cm 0pt 39pt; TEXT-INDENT: -21pt; mso-list: l0 level1 lfo3; tab-stops: list 39.0pt"&gt;&lt;SPAN lang=EN-US style="FONT-SIZE: 9pt; FONT-FAMILY: Wingdings; mso-fareast-font-family: Wingdings; mso-bidi-font-family: Wingdings"&gt;&lt;SPAN style="mso-list: Ignore"&gt;l&lt;SPAN style="FONT: 7pt 'Times New Roman'"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN lang=EN-US style="FONT-SIZE: 9pt; FONT-FAMILY: 微软雅黑"&gt;new&lt;/SPAN&gt;&lt;SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 微软雅黑"&gt;约束：用于在泛型声明中约束可能用作类型参数的参数的类型。&lt;SPAN lang=EN-US&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style="MARGIN: 0cm 0cm 0pt 18pt"&gt;&lt;SPAN lang=EN-US style="FONT-SIZE: 9pt; FONT-FAMILY: 微软雅黑"&gt;new&lt;/SPAN&gt;&lt;SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 微软雅黑"&gt;结束指定泛型类声明中的任何类型参数都必须有公共的无参数构造函数。当泛型创建类型的新实例时，将此约束应用于类型参数，如下面的示例所示：&lt;SPAN lang=EN-US&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style="MARGIN: 0cm 0cm 0pt 18pt"&gt;&lt;SPAN lang=EN-US style="FONT-SIZE: 9pt; FONT-FAMILY: 微软雅黑"&gt;class ItemFactory&amp;lt;T&amp;gt; where T: new()&lt;o:p&gt;&lt;/o:p&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style="MARGIN: 0cm 0cm 0pt 18pt"&gt;&lt;SPAN lang=EN-US style="FONT-SIZE: 9pt; FONT-FAMILY: 微软雅黑"&gt;{&lt;o:p&gt;&lt;/o:p&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style="MARGIN: 0cm 0cm 0pt 38.95pt; mso-para-margin-left: 3.71gd"&gt;&lt;SPAN lang=EN-US style="FONT-SIZE: 9pt; FONT-FAMILY: 微软雅黑"&gt;public T GetNewItem()&lt;o:p&gt;&lt;/o:p&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style="MARGIN: 0cm 0cm 0pt 38.95pt; mso-para-margin-left: 3.71gd"&gt;&lt;SPAN lang=EN-US style="FONT-SIZE: 9pt; FONT-FAMILY: 微软雅黑"&gt;{&lt;o:p&gt;&lt;/o:p&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style="MARGIN: 0cm 0cm 0pt 59.95pt; mso-para-margin-left: 5.71gd"&gt;&lt;SPAN lang=EN-US style="FONT-SIZE: 9pt; FONT-FAMILY: 微软雅黑"&gt;return new T();&lt;o:p&gt;&lt;/o:p&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style="MARGIN: 0cm 0cm 0pt 38.95pt; mso-para-margin-left: 3.71gd"&gt;&lt;SPAN lang=EN-US style="FONT-SIZE: 9pt; FONT-FAMILY: 微软雅黑"&gt;}&lt;o:p&gt;&lt;/o:p&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style="MARGIN: 0cm 0cm 0pt 17.95pt; mso-para-margin-left: 1.71gd"&gt;&lt;SPAN lang=EN-US style="FONT-SIZE: 9pt; FONT-FAMILY: 微软雅黑"&gt;}&lt;o:p&gt;&lt;/o:p&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style="MARGIN: 0cm 0cm 0pt 17.95pt; mso-para-margin-left: 1.71gd"&gt;&lt;SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 微软雅黑"&gt;当与其他约束一起使用时，&lt;SPAN lang=EN-US&gt;new()&lt;/SPAN&gt;约束必须最后指定：&lt;SPAN lang=EN-US&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style="MARGIN: 0cm 0cm 0pt 17.95pt; mso-para-margin-left: 1.71gd"&gt;&lt;SPAN lang=EN-US style="FONT-SIZE: 9pt; FONT-FAMILY: 微软雅黑"&gt;using System;&lt;o:p&gt;&lt;/o:p&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style="MARGIN: 0cm 0cm 0pt 17.95pt; mso-para-margin-left: 1.71gd"&gt;&lt;SPAN lang=EN-US style="FONT-SIZE: 9pt; FONT-FAMILY: 微软雅黑"&gt;public class ItemFactory&amp;lt;T&amp;gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style="MARGIN: 0cm 0cm 0pt 38.95pt; mso-para-margin-left: 3.71gd"&gt;&lt;SPAN lang=EN-US style="FONT-SIZE: 9pt; FONT-FAMILY: 微软雅黑"&gt;where T: IComparable, new()&lt;o:p&gt;&lt;/o:p&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style="MARGIN: 0cm 0cm 0pt 17.95pt; mso-para-margin-left: 1.71gd"&gt;&lt;SPAN lang=EN-US style="FONT-SIZE: 9pt; FONT-FAMILY: 微软雅黑"&gt;{}&lt;o:p&gt;&lt;/o:p&gt;&lt;/SPAN&gt;&lt;/P&gt;</description></item><item><title>.Net Framework 2.0正式版发布</title><link>https://blogs.qipai360.cn/post/dotnet-framework-2-0-official-release/</link><pubDate>Sun, 30 Oct 2005 16:32:00 +0800</pubDate><guid>https://blogs.qipai360.cn/post/dotnet-framework-2-0-official-release/</guid><description>&lt;p&gt;&lt;STRONG&gt;导读：为了配合11月7日Visual Studio 2005和SQL Server 2005的推出，微软发布了.Net Framework 2.0的最终正式版，同时发布的还有.NET Framework 2.0 SDK。据微软称，.NET Framework 2.0 RC“改进了应用程序的可伸缩性、性能、存储、调度和ClickOnce升级，支持多种基于APS.NET 2.0的浏览器和设备”。&lt;BR&gt;&lt;/STRONG&gt;&lt;/p&gt;</description></item><item><title>利用C＃重启远程计算机</title><link>https://blogs.qipai360.cn/post/restart-the-remote-computer-using-c%23/</link><pubDate>Wed, 06 Oct 2004 16:07:00 +0800</pubDate><guid>https://blogs.qipai360.cn/post/restart-the-remote-computer-using-c%23/</guid><description>&lt;p&gt;如果叫你实现远程启动别人的计算机，你首先想到的可能是先做一个在远程计算机上面运行客户端程序，然后在本地计算机上面再做一个服务器端程序，通过这二个程序直接的通讯实现重启远程计算机。这当然是一个方法。但这未免有点麻烦。如果现在只告诉你远程计算机的管理者的登陆帐号，而并不允许你在远程的计算机上面运行一个所谓的客户端程序，让你通过程序来完成重启远程计算机。不知道你是否感觉有些困难了。其实按照上面的这些条件实现重启远程计算机，利用C＃可以比较方便的完成。下面就来介绍一下具体的实现方法。&lt;/p&gt;</description></item></channel></rss>
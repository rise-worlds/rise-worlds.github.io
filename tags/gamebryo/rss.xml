<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Gamebryo on Rise的自留地</title><link>https://blogs.qipai360.cn/tags/gamebryo/</link><description>Recent content in Gamebryo on Rise的自留地</description><generator>Hugo</generator><language>zh-CN</language><lastBuildDate>Wed, 22 Jul 2009 20:21:00 +0800</lastBuildDate><atom:link href="https://blogs.qipai360.cn/tags/gamebryo/rss.xml" rel="self" type="application/rss+xml"/><item><title>NiCamera的使用</title><link>https://blogs.qipai360.cn/post/nicamera-usage/</link><pubDate>Wed, 22 Jul 2009 20:21:00 +0800</pubDate><guid>https://blogs.qipai360.cn/post/nicamera-usage/</guid><description>&lt;p&gt;1.&amp;nbsp; 创建Camera.&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 1)通过 NiNew NiCamera的方式获得&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 2)通过读取NIF文件,找到适合的Camera Node&lt;br&gt;2. 创建&lt;u&gt;NiRect&lt;/u&gt;&amp;lt;float&amp;gt;对象, 设置Camera视口大小(假设对象为NiRect&amp;lt;float&amp;gt; kRetViewPost)&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 1)全屏幕 kRetViewPost = NiRect&amp;lt;float&amp;gt;(0.0f, 1.0f, 1.0f, 0.0f); &lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 2)特定大小&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 假设当前窗口大小800*600, 我们要在大小为200*100, 相对坐标为 (cx = 300, cy = 100)的范围内显示Camera的内容, 那么视口大小为:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 计算视口比例: ratioLeft = cx / 800, ratioButon = 1.0 - (cy + 100) / 600; ratioRight = (cx + 200) / 800, ratioTop =&amp;nbsp; 1.0 -&amp;nbsp; cy / 600;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; kRetViewPost = NiRect&amp;lt;float&amp;gt;(ratioLeft&amp;nbsp; ratioRight , ratioTop , ratioButon ); &lt;br&gt;3. 创建NiFrustum对象, 设置Camera截面体比例大小&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; NiFrustum(float fLeft, float fRight, float fTop, float fBottom, float fNear, float fFar, bool bOrtho = false)&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; fLeft/fRight/fTop/fButtom的值是相对于显示区域的中心点和显示模式而定的. &lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 1) 显示模式:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; a) 正交模式 (bOrtho = true)&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 假如显示区域是200*100的大小, 那么fLeft = -(200/2)，fRight = 200/2, fTop = 100/2, fButtom = -100/2;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; b) 非正交模式 (bOrtho = false)&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 不管显示区域多大, fLeft/fButtom的值都在[-0.5, 0.0)之间,&amp;nbsp; fRight/fTop 的值都在(0.0, 0.5]之间; 如: (-0.4, 0.4, 0.46, -0.46)&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 正交与非正交的区别在于, 使用非正交模式时, Camera的映像大小会受到与聚焦物体间的距离影响(即可实现缩小放大的功能), 而正交模式则不会.&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 2) 显示比例&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 在正交模式下通过调用AdjustAspectRatio来设定, 而在非正交模式通过fLeft(fRight)与fButtom(fTop)的比值来设定.&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 3) 裁剪距离(例如fNear = 1.0f, fFar = 1000.0f)&lt;br&gt;4. 通过NiCamera::SetViewPort(const NiRect&amp;lt;float&amp;gt;&amp;amp;)和Camera::SetViewFrustum(const NiFrustum&amp;amp; )分别设定ViewPort和Frustum&lt;/p&gt;</description></item></channel></rss>
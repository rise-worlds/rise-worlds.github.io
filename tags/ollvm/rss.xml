<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Ollvm on Rise的自留地</title><link>https://blogs.qipai360.cn/tags/ollvm/</link><description>Recent content in Ollvm on Rise的自留地</description><generator>Hugo</generator><language>zh-CN</language><lastBuildDate>Mon, 20 May 2024 10:11:31 +0800</lastBuildDate><atom:link href="https://blogs.qipai360.cn/tags/ollvm/rss.xml" rel="self" type="application/rss+xml"/><item><title>Ollvm混淆与反混淆： goron框架字符串加密的实现原理</title><link>https://blogs.qipai360.cn/post/the-goron-framework-string-encryption-implementation-principle/</link><pubDate>Mon, 20 May 2024 10:11:31 +0800</pubDate><guid>https://blogs.qipai360.cn/post/the-goron-framework-string-encryption-implementation-principle/</guid><description>&lt;p&gt;函数实现逻辑在llvm/lib/Transforms/Obfuscation/StringEncryption.cpp文件中，IndirectBranch，集成自类ModulePass，实现了runOnModule函数&lt;/p&gt;</description></item><item><title>Ollvm混淆与反混淆： Goron框架编译与使用</title><link>https://blogs.qipai360.cn/post/the-goron-framework-is-compiled-and-used/</link><pubDate>Mon, 20 May 2024 09:29:28 +0800</pubDate><guid>https://blogs.qipai360.cn/post/the-goron-framework-is-compiled-and-used/</guid><description>&lt;p&gt;很多App实现的定制ollvm框架中都有goron框架的影子，或多或少的借鉴了它的功能，包括&lt;/p&gt;
&lt;p&gt;间接跳转,并加密跳转目标(-mllvm -irobf-indbr)
间接函数调用,并加密目标函数地址(-mllvm -irobf-icall)
间接全局变量引用,并加密变量地址(-mllvm -irobf-indgv)
字符串(c string)加密功能(-mllvm -irobf-cse)
过程相关控制流平坦混淆(-mllvm -irobf-cff)
想要了解怎么针对这些混淆功能完成去混淆，势必要先对其混淆过程有所了解，那么第一步就是对goron框架的编译使用&lt;/p&gt;</description></item><item><title>安卓使用OLLVM混淆.so</title><link>https://blogs.qipai360.cn/post/android-using-ollvm-confused-so/</link><pubDate>Tue, 02 Apr 2024 15:00:57 +0800</pubDate><guid>https://blogs.qipai360.cn/post/android-using-ollvm-confused-so/</guid><description>&lt;h3 id="编译ollvm"&gt;编译OLLVM
&lt;a class="header-anchor" href="#%e7%bc%96%e8%af%91ollvm"&gt;&lt;/a&gt;
&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt" id="hl-0-1"&gt;&lt;a class="lnlinks" href="#hl-0-1"&gt;1&lt;/a&gt;
&lt;/span&gt;&lt;span class="lnt" id="hl-0-2"&gt;&lt;a class="lnlinks" href="#hl-0-2"&gt;2&lt;/a&gt;
&lt;/span&gt;&lt;span class="lnt" id="hl-0-3"&gt;&lt;a class="lnlinks" href="#hl-0-3"&gt;3&lt;/a&gt;
&lt;/span&gt;&lt;span class="lnt" id="hl-0-4"&gt;&lt;a class="lnlinks" href="#hl-0-4"&gt;4&lt;/a&gt;
&lt;/span&gt;&lt;span class="lnt" id="hl-0-5"&gt;&lt;a class="lnlinks" href="#hl-0-5"&gt;5&lt;/a&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;git clone https://github.com/heroims/obfuscator.git -b llvm-9.0.1 --depth &lt;span class="m"&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; obfuscator
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;mkdir build &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;cd&lt;/span&gt; build
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;cmake .. -DCMAKE_BUILD_TYPE&lt;span class="o"&gt;=&lt;/span&gt;Release
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;make -j4&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;编译好后从&lt;code&gt;build/bin/&lt;/code&gt;目录把下面几个文件拷贝到&lt;code&gt;/toolchains/llvm/prebuilt/linux-x86_64/bin/&lt;/code&gt;
&lt;code&gt;clang&lt;/code&gt;，&lt;code&gt;clang++&lt;/code&gt;，&lt;code&gt;clang-9.0&lt;/code&gt;，&lt;code&gt;clang-format&lt;/code&gt;
把以下几个文件从&lt;code&gt;build/include/&lt;/code&gt;拷贝到&lt;code&gt;/sysroot/usr/include/&lt;/code&gt;
&lt;code&gt;Stdarg.h&lt;/code&gt;，&lt;code&gt;Stddef.h&lt;/code&gt;，&lt;code&gt;__stddef_max_align_t.h&lt;/code&gt;，&lt;code&gt;float.h&lt;/code&gt;，&lt;code&gt;stdbool.h&lt;/code&gt;&lt;/p&gt;</description></item></channel></rss>
<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Asm on Rise的自留地</title><link>https://blogs.qipai360.cn/tags/asm/</link><description>Recent content in Asm on Rise的自留地</description><generator>Hugo</generator><language>zh-CN</language><lastBuildDate>Sun, 28 Apr 2024 13:41:06 +0800</lastBuildDate><atom:link href="https://blogs.qipai360.cn/tags/asm/rss.xml" rel="self" type="application/rss+xml"/><item><title>深入理解汇编中的ZF、OF、SF标志位和条件跳转</title><link>https://blogs.qipai360.cn/post/in-depth-understanding-of-zf-of-sf-flag-bits-and-conditional-jumps-in-assembly/</link><pubDate>Sun, 28 Apr 2024 13:41:06 +0800</pubDate><guid>https://blogs.qipai360.cn/post/in-depth-understanding-of-zf-of-sf-flag-bits-and-conditional-jumps-in-assembly/</guid><description>&lt;p&gt;汇编语言中的程序控制流常依赖于处理器的状态标志来进行决策。在x86架构中，ZF（Zero Flag）、OF（Overflow Flag）和SF（Sign Flag）是在执行比较和算术指令后设置的重要标志位。本文将探讨这些标志位以及与之相关的常用条件跳转指令，并提供代码案例以加深理解。&lt;/p&gt;</description></item><item><title>汇编语言中的条件跳转和无条件跳转（je，jz，jmp）</title><link>https://blogs.qipai360.cn/post/conditional-and-unconditional-jumps-in-assembly-language-je-jz-jmp/</link><pubDate>Thu, 25 Apr 2024 15:26:14 +0800</pubDate><guid>https://blogs.qipai360.cn/post/conditional-and-unconditional-jumps-in-assembly-language-je-jz-jmp/</guid><description>&lt;p&gt;在汇编语言中，程序的流程控制是通过各种跳转指令来实现的。跳转指令分为条件跳转和无条件跳转。本文将深入探讨汇编中等于条件跳转（je/jz）和无条件跳转（jmp）的使用，并通过代码示例展现它们的实际应用。&lt;/p&gt;</description></item><item><title>汇编语言中的不等条件跳转（jne/jnz）</title><link>https://blogs.qipai360.cn/post/unequal-conditional-jump-in-assembly-language-jne-jnz/</link><pubDate>Thu, 25 Apr 2024 14:33:27 +0800</pubDate><guid>https://blogs.qipai360.cn/post/unequal-conditional-jump-in-assembly-language-jne-jnz/</guid><description>&lt;p&gt;在汇编语言中，根据程序中的条件来决定执行流程是一项基本的操作。理解并有效地使用条件跳转指令，是编写高效汇编代码的关键。本文将重点讲解不等条件跳转指令 &lt;code&gt;jne&lt;/code&gt;（Jump if Not Equal）和 &lt;code&gt;jnz&lt;/code&gt;（Jump if Not Zero），包括它们的工作原理和一些实用的代码示例。&lt;/p&gt;</description></item></channel></rss>